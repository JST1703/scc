{"version":3,"sources":["components/Menu/MenuData.js","components/Menu/ScorllButton.js","components/Menu/NextPrevButton.js","components/Menu/Menu.js","pages/Home.js","components/ChecksumExample.js","components/ChecksumExercise.js","components/MC.js","components/YN.js","functions/randomDigits.js","functions/sumChecksum.js","functions/errormaker.js","pages/Task1.js","functions/nextTenChecksum.js","pages/Task2.js","functions/randomBinaryString.js","functions/binaryCheckSymbol1.js","functions/binaryCheckSymbol2.js","functions/srtingToArray.js","components/CompareExercise.js","functions/distance.js","functions/nDigitComparer.js","pages/Task3.js","pages/Task4.js","pages/Task5.js","graphics/Graph_0_T6.svg","graphics/Graph_1_T6.svg","graphics/Graph_2_T6.svg","graphics/Graph_3_T6.svg","graphics/Graph_4_T6.svg","pages/Task6.js","functions/hammingDistance.js","pages/Task7.js","components/EncodingDistanceExercise.js","components/TextExercise.js","pages/Task8.js","components/SquareExerciseExample.js","components/SquareExercise.js","graphics/Square_0_T9.svg","graphics/Square_1_T9.svg","graphics/Square_2_T9.svg","graphics/Square_3_T9.svg","pages/Task9.js","components/CorrectionBitsExercise.js","pages/Task10.js","components/CorrectionBitsExercise2.js","pages/Task11.js","App.js","reportWebVitals.js","index.js"],"names":["MenuData","title","path","cName","ScrollButton","useState","isVisible","setIsVisible","toggleVisibility","window","pageYOffset","useEffect","addEventListener","removeEventListener","className","onClick","scrollTo","top","behavior","NextPrevButton","pageNumber","setPageNumber","navigate","useNavigate","tempLink","toString","tempPathName","location","pathname","tempPathChar1","length","tempPathChar2","parseInt","Menu","Provider","value","color","to","map","item","index","key","Home","ChecksumExample","checksumFunction","sequence","data","checksum","digit","style","ChecksumExercise","onWorong","onCorrect","setValue","taskState","setTaskState","type","disabled","onChange","event","currentTarget","temp","replace","MC","callerFunction","question","options","answerKey","textOnWrong","textOnCorrect","Array","fill","values","setValues","statedQuestion","element","i","handleValues","YN","optionYes","optionNo","solution","checked","randomDigits","Math","floor","random","sol","sumChecksum","arr","sum","changeNumber","n","randomErrorMaker1","seq","randomPos","errormaker","x","randomPos1","randomPos2","randomErrorMaker2","randomPos3","randomErrorMaker3","round","Task1","wrongAnswersA","setWrongAnswersA","correctAnswersA","setCorrectAnswersA","taskStateB","setTaskStateB","from","seq1","cs1","cs2","join","BTemp","mcOptionsTaskB","mcAKTaskB","elemet","taskStateC","setTaskStateC","handleTaskStateC","e","nextTenChecksum","Task2","randomBinaryString","binaryCheckSymbol1","binaryCheckSymbol2","y","stringToArray","s","CompareExercise","comparer","data2","distance","data1","data1Len","data2Len","delta","nDigitComparer","checksum1","checksum2","Task3","wrongAnswersC","setWrongAnswersC","correctAnswersC","setCorrectAnswersC","taskStateD","setTaskStateD","a","b","c","d","Task4","words","binaryRep","encoding","answersA","setAnswersA","answersB","setAnswersB","answersC","setAnswersC","handleTaskStateD","table","push","k","mcTemp","mc4A","mc4B","mc4C","k1","k2","k3","key1","key2","key3","seqTemp1","seqTemp2","seqTemp3","Task5","_clipPath","_g","mc5A","mc5B","mc5C","_excluded","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","props","createElement","viewBox","stroke","strokeLinecap","strokeMiterlimit","ref","id","clipRule","clipPath","fillRule","strokeWidth","strokeLinejoin","fillOpacity","ForwardRef","forwardRef","Task6","taskTracker","setTaskTracker","updateTaskTracker","hammingDistance","hd","Infinity","j","Task7","correlationList","possibleTasks","taskNumber","toggle","setToggle","handleToggle","tempIndex","randy","buttonStatus","setButoonStatus","text","setText","nodeRender","onMouseOver","onMouseOut","changeButtonStatus","filter","handleAnswer","EncodingDistanceExercise","codeLength","codeSize","setCodeSize","setEncoding","setHD","setAnswerKey","randomPicker","mcQuestions","mcAnswerkey","encodingRender","TextExercise","solutions","toLocaleLowerCase","includes","Task8","state1","setState1","state2","setState2","numberOfTasks","task","setTask","taskRender","handleTask","SquareExeciseExample","slice","SquareExecise","pressed","setPressed","temp1","temp2","renderButtons","tempPressed","arr1","arr2","checkResult","Task9","CorrectionBitsExercise","Task10","stateA","setStateA","taskArender","stateB","setStateB","handleStateB","CorrectionBitsExercise2","setData","temp3","reset","Task11","matrixSolution","setMatrixSolution","handleStateA","matrixValues","setMatrixValues","handleMatrixValue","tempM","tempCL","tempC","tempB","splice","matrixButtons","console","log","sumR1","sumR2","sumR3","sumC1","sumC2","sumC3","sumC4","checkMartix","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afee6c4b.chunk.js","sourcesContent":["// Menu Bar items\n\n// path naming schema must be \"/task{number}\". This is due to the navigation logic in NextPrevButton component.\n\nexport const MenuData = [\n  {\n    title: \"Home\",\n    path: \"/\",\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Prüfziffer und Fehlererkennung 1\",\n    path: \"/task1\",\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Prüfziffer und Fehlererkennung 2\",\n    path: \"/task2\",\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Binäre Folgen und Fehlererkennung\",\n    path: \"/task3\",\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Kodierungen und Fehlerkorrektur 1\",\n    path: \"/task4\",\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Kodierungen und Fehlerkorrektur 2\",\n    path: \"/task5\",\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Abstand in Kodierungen 1\",\n    path: \"/task6\",\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Abstand in Kodierungen 2\",\n    path: \"/task7\",\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Abstand in Kodierungen 3\",\n    path: \"/task8\",\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Effiziente Kodierung 1\",\n    path: \"/task9\",\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Effiziente Kodierung 2\",\n    path: \"/task10\",\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Effiziente Kodierung  3\",\n    path: \"/task11\",\n    cName: \"nav-text\",\n  },\n];\n","import React, { useState, useEffect } from \"react\";\nimport * as FaIcons from \"react-icons/fa\";\n\n/* menu component used for scrolling back up */\n\nfunction ScrollButton() {\n  // boolean if the button is visible or not\n  const [isVisible, setIsVisible] = useState(false);\n\n  // logic for changing visibility. Only appears if the if-statement is met, by how far we scrolled down.\n  const toggleVisibility = () => {\n    if (window.pageYOffset > 150) {\n      setIsVisible(true);\n    } else {\n      setIsVisible(false);\n    }\n  };\n\n  //logic for scrolling to top if the button is being clicked on.\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  };\n\n  // logic needed for changing visibility.\n  useEffect(() => {\n    window.addEventListener(\"scroll\", toggleVisibility);\n    return () => {\n      window.removeEventListener(\"scroll\", toggleVisibility);\n    };\n  }, []);\n\n  return (\n    <div className=\"arrowTop\">\n      <FaIcons.FaArrowAltCircleUp\n        onClick={scrollToTop}\n        className={isVisible ? \"opacity-100\" : \"opacity-0\"}\n      />\n      {isVisible && <h4>back to top</h4>}\n    </div>\n  );\n}\n\nexport default ScrollButton;\n","import React, { useState, useEffect } from \"react\";\nimport * as FaIcons from \"react-icons/fa\";\nimport { MenuData } from \"./MenuData\";\nimport { useNavigate } from \"react-router-dom\";\n\n/*\nmenu component used for switching between tasks\nit is a simple prev and next button.\n*/\n\nfunction NextPrevButton() {\n  // the page number X of the application, corresponding with the path name /taskX\n  const [pageNumber, setPageNumber] = useState(0);\n\n  // logic for going to previous page\n  const prevPage = () => {\n    if (pageNumber > 0) {\n      setPageNumber(pageNumber - 1);\n    }\n  };\n\n  // logic for going to next page\n  const nextPage = () => {\n    if (pageNumber < MenuData.length - 1) {\n      setPageNumber(pageNumber + 1);\n    }\n  };\n\n  // if the page number changes, then so must the link of the window\n  let navigate = useNavigate();\n  useEffect(() => {\n    let tempLink = \"/\";\n    if (pageNumber !== 0) {\n      tempLink += \"task\" + pageNumber.toString();\n    }\n    navigate(tempLink);\n    window.scrollTo({ top: 0, behavior: \"auto\" });\n  }, [pageNumber]);\n\n  /*\n  if we use the scroll down menu to jump to another page, then the page number here must also change to that\n  we simply extract the last digits of the path name, which is always a number.\n  */\n  useEffect(() => {\n    let tempPathName = window.location.pathname;\n    let tempPathChar1 = tempPathName[tempPathName.length - 1];\n\n    // this is the case of the home page with its path name only being \"/\"\n    if (tempPathChar1 === \"/\") {\n      setPageNumber(0);\n    } else {\n      /* \n    either the path name has a two digit number (else case) or a single digit number\n    (if case). In the later case, the second last character must be a k. This logic here only\n    works, as long as the naming schema fot path only has two digit numbers.\n    */\n      let tempPathChar2 = tempPathName[tempPathName.length - 2];\n      if (tempPathChar2 === \"k\") {\n        setPageNumber(parseInt(tempPathChar1));\n      } else {\n        setPageNumber(parseInt(tempPathChar2 + tempPathChar1));\n      }\n    }\n  }, [window.location.pathname]);\n\n  return (\n    <div className=\"arrowPN\">\n      <FaIcons.FaArrowAltCircleLeft\n        className=\"opacity-100\"\n        onClick={prevPage}\n      />\n      <FaIcons.FaArrowAltCircleRight\n        className=\"opacity-100\"\n        onClick={nextPage}\n      />\n      <h4>previous | next</h4>\n    </div>\n  );\n}\n\nexport default NextPrevButton;\n","import React, { useState } from \"react\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { MenuData } from \"./MenuData\";\nimport { IconContext } from \"react-icons\";\nimport ScrollButton from \"./ScorllButton\";\nimport NextPrevButton from \"./NextPrevButton\";\nimport \"./Menu.css\";\n\nfunction Menu() {\n  // on and off state for either showing the menu is visible or not\n  const [isVisible, setIsVisible] = useState(false);\n\n  return (\n    <div className=\"menuBox\">\n      {/* Next-, prev- and back to top button */}\n      <div className=\"arrows\">\n        <ScrollButton />\n        <NextPrevButton />\n      </div>\n\n      {/* for changing the color of the icons in the menu bar */}\n      <IconContext.Provider value={{ color: \"#FFFFFF\" }}>\n        {/* the hamburger sign from the menu */}\n        <div className=\"navbar\">\n          <Link to=\"#\" className=\"menu-bars\">\n            <FaIcons.FaBars onClick={() => setIsVisible(!isVisible)} />\n          </Link>\n        </div>\n\n        {/* \n          Listing the menu items, if isVisible is true.\n          the hiding logic is implemented in the Menu.css by setting the position value\n          and the attribute \"active\".\n          */}\n        <nav className={isVisible ? \"nav-menu active\" : \"nav-menu\"}>\n          <ul\n            className=\"nav-menu-items\"\n            onClick={() => setIsVisible(!isVisible)}\n          >\n            <li className=\"navbar-toggle\">\n              <Link to=\"#\" className=\"menu-bars\">\n                <AiIcons.AiOutlineClose />\n              </Link>\n            </li>\n\n            {/* menu items from MenuData.js*/}\n            {MenuData.map((item, index) => {\n              return (\n                <li key={index} className={item.cName}>\n                  <Link to={item.path}>\n                    <span>{item.title}</span>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </IconContext.Provider>\n    </div>\n  );\n}\n\nexport default Menu;\n","import React from \"react\";\n\n/* \nThe home page displays only information about what the chapter is all about\nand how to navigate the application.\n*/\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <h1>Selbstkorrigierende Kodierungen</h1>\n\n      <p>\n        Computer kommunizieren mittels Codes. Die Codes sind eine Übersetzung\n        von Informationen eines Nutzers, z.B. ein Text einer E-Mail, welche dann\n        über Netzwerke von einem Computer zum nächsten gesendet wird. Diese\n        Codes können leider Fehler beinhalten. Es kann sein, dass ein Nutzer\n        einen Tippfehler macht, oder aber auch, dass beim Übermitteln sich der\n        Code verfälscht, wegen eines technischen Fehlers. Je mehr Daten man\n        senden will, desto höher ist die Wahrscheinlichkeit solcher Fehler.\n        Fehler sind unumgänglich. Deswegen hat man verschiedene Methoden\n        entwickelt um solche Fehler zu entdecken, oder sogar korrigieren zu\n        können.\n      </p>\n\n      <p>\n        In diesem Kapitel lernen Sie Methoden kennen, wie man Fehler in\n        einfachen Codes erkennen kann, und wie man diese zum Teil auch behebt.\n        Sie finden links im Menu Aufgaben zu diesem Thema und Sie können auch\n        über die Navigationspfeile links die Aufgaben wechseln. Die Aufgaben\n        bauen aufeinander auf. Deswegen empfiehlt es sich, diese in der\n        gegebenen Reihenfolge zu lösen. Die Aufgaben werden beim Laden der\n        Webseite neu gestaltet. Der Aufgabentyp bleibt der gleiche, jedoch\n        wechseln die Beispiele, die Fragen und die entsprechenden Lösungen. Die\n        Übungen können somit mehrfach gelöst werden.\n      </p>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\n/*\nThis component always goes with the component ChecksumExercise.\nThe ChecksumExample takes any checksum method, i.e. sum of all digits,\nand displays a sequence of numbers and their checksum as an example.\nThe ChecksumExercise displays questions in the form of a sequence of\nnumbers, where one needs to calculate the checksum according to the examples.\n*/\n\n/*\nchecksumFuncition is the chosen method for a checksum.\n\nsequence is the string of numbers being used. This can either be a binary string or a integer string.\n*/\nfunction ChecksumExample({ checksumFunction, sequence }) {\n  // random generated sequence of numbers and their checksum\n  const [data] = useState(sequence);\n  const [checksum] = useState(() => {\n    return checksumFunction(data);\n  });\n\n  return (\n    <div>\n      <div>\n        {data.map(function (digit, index) {\n          return <span key={index}>{digit}</span>;\n        })}\n        <span style={{ color: \"red\" }}>{checksum}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default ChecksumExample;\n","import React, { useState } from \"react\";\n/*\nThis component always goes with the component ChecksumExample.\nThe ChecksumExample takes any checksum method, i.e. sum of all digits,\nand displays a sequence of numbers and their checksum as an example.\nThe ChecksumExercise displays questions in the form of a sequence of\nnumbers, where one needs to calculate the checksum according to the examples.\n*/\n\n/*\nchecksumFuncition is the chosen method for a checksum.\n\nsequence is the string of numbers being used. This can either be a binary string or a integer string.\n\nonWorng and onCorrect are methods of the caller Component. These are used to\nreveal certain parts of the Task, i.e. the solution, if to many wrong answers\nhave been given, or the next subtask, if all answers are correct.\n*/\nfunction ChecksumExercise({ checksumFunction, onWorong, onCorrect, sequence }) {\n  // value of the input field of the user\n  const [value, setValue] = useState(\"\");\n\n  // random generated sequence of numbers and their checksum\n  const [data] = useState(sequence);\n  const [checksum] = useState(checksumFunction(data));\n\n  /*\n  variable for the task state\n  \"\": not answered yet\n  true: correctly answered\n  false: answered, but wrong\n  */\n  const [taskState, setTaskState] = useState(\"\");\n\n  // logic for comparing the given answer by the user and the correct answer\n  const checkResult = () => {\n    // stripping away all white spaces\n    let temp = value.replace(/\\s/g, \"\");\n    setValue(temp);\n\n    if (temp === checksum) {\n      setTaskState(true);\n      onCorrect();\n    } else {\n      setTaskState(false);\n      onWorong();\n    }\n  };\n\n  return (\n    <div>\n      {data.map(function (digit, index) {\n        return <span key={index}>{digit}</span>;\n      })}\n      <input\n        type=\"text\"\n        value={value}\n        disabled={taskState === true}\n        onChange={(event) => setValue(event.currentTarget.value)}\n      />\n      <button onClick={checkResult} disabled={taskState === true}>\n        überprüfen\n      </button>\n      {taskState === false && <span style={{ color: \"red\" }}> Falsch</span>}\n      {taskState && <span style={{ color: \"green\" }}> Korrekt</span>}\n    </div>\n  );\n}\n\nexport default ChecksumExercise;\n","import React, { useState } from \"react\";\n/*\nThis component displays a multiple choice question.\n*/\n\n/*\nquestion is the mc question text being displayed.\n\noptions are the possible answers.\n\nanswerKey is the solution givin in an array of booleans. \nanswerKey[i] === true if and only if option i is correct.\n\ntextOnWrong is the text being displayed, if the answer of the user is wrong.\n\ntextOnCorrect is the text being displayed, if the answer of the user is correct.\n\ncallerFunction is a function the caller component uses, if this question gets answered.\n*/\nfunction MC({\n  callerFunction,\n  question,\n  options,\n  answerKey,\n  textOnWrong,\n  textOnCorrect,\n}) {\n  // values are the state of the Yes or No question logged by the user\n  const [values, setValues] = useState(Array(answerKey.length).fill(false));\n\n  // question in useState, to avoid undesired Behavior\n  const [statedQuestion] = useState(question);\n\n  /*\n  variable for the task state\n  \"\": not answered yet\n  true: correctly answered\n  false: answered, but wrong\n  */\n  const [taskState, setTaskState] = useState(\"\");\n\n  /* logic for checking the user's answer to the solution\n  and displaying the rest*/\n  const checkResult = () => {\n    let temp = true;\n    for (let i = 0; i < answerKey.length; ++i) {\n      if (!temp) {\n        break;\n      }\n      temp = answerKey[i] === values[i];\n    }\n    setTaskState(temp);\n    callerFunction();\n  };\n\n  // logic to handle checkbox clicking\n  const handleValues = (i) => {\n    let temp = values;\n    temp[i] = !temp[i];\n    setValues(temp);\n  };\n\n  return (\n    <div className=\"MC\">\n      <p>{statedQuestion}</p>\n      {options.map(function (element, index) {\n        return (\n          <div className=\"mc\" key={index}>\n            <input\n              type=\"checkbox\"\n              disabled={taskState === true || taskState === false}\n              onChange={() => handleValues(index)}\n            />\n            <span key={index}>{element}</span>\n          </div>\n        );\n      })}\n      <button\n        onClick={checkResult}\n        disabled={taskState === true || taskState === false}\n      >\n        überprüfen\n      </button>\n      {taskState === false && (\n        <p>\n          <span style={{ color: \"red\" }}>Falsch</span>. {textOnWrong}\n        </p>\n      )}\n      {taskState === true && (\n        <p>\n          <span style={{ color: \"green\" }}>Korrekt</span>. {textOnCorrect}\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default MC;\n","import React, { useState } from \"react\";\n\n/*\nThis component displays a Yes or No question,\nor an A or B question, where exactly one answer is correct.\n*/\n\n/*\nquestion is the Yes or No question text being displayed.\n\noptionYes is the text being displayed for the yes option.\n\noptionNo is the text being displayed for the no option.\n\ntextOnWrong is the text being displayed, if the answer of the user is wrong.\n\ntextOnCorrect is the text being displayed, if the answer of the user is correct.\n\nsolution is either 0 or 1. It is the solution to the Yes or No question.\n\ncallerFunction is a function the caller component uses, if this question gets answered.\n*/\nfunction YN({\n  callerFunction,\n  question,\n  optionYes,\n  optionNo,\n  textOnWrong,\n  textOnCorrect,\n  solution,\n}) {\n  // value is the state of the Yes or No question logged in by the user, starting with 1.\n  const [value, setValue] = useState(1);\n\n  /*\n  variable for the task state\n  \"\": not answered yet\n  true: correctly answered\n  false: answered, but wrong\n  */\n  const [taskState, setTaskState] = useState(\"\");\n\n  /* logic for checking the user's answer to the solution\n  and displaying the rest*/\n  const checkResult = () => {\n    setTaskState(value === solution);\n    callerFunction();\n  };\n\n  return (\n    <div className=\"YN\">\n      <p>{question}</p>\n      <div>\n        <input\n          type=\"radio\"\n          checked={value === 1}\n          disabled={taskState === true || taskState === false}\n          onChange={() => setValue(1)}\n        />\n        {optionYes}\n      </div>\n      <div>\n        <input\n          type=\"radio\"\n          checked={value === 0}\n          disabled={taskState === true || taskState === false}\n          onChange={() => setValue(0)}\n        />\n        {optionNo}\n      </div>\n      <button\n        onClick={checkResult}\n        disabled={taskState === true || taskState === false}\n      >\n        überprüfen\n      </button>\n      {taskState === false && (\n        <p>\n          <span style={{ color: \"red\" }}>Falsch</span>. {textOnWrong}\n        </p>\n      )}\n      {taskState === true && (\n        <p>\n          <span style={{ color: \"green\" }}>Korrekt</span>. {textOnCorrect}\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default YN;\n","// returns a random sequence of digits\nfunction randomDigits() {\n  // length is between 2 and 5\n  let length = Math.floor(Math.random() * 3) + 2;\n\n  const sol = [];\n\n  for (let i = 0; i < length; i++) {\n    let temp = Math.floor(Math.random() * 8) + 1;\n    sol[i] = temp;\n  }\n\n  return sol;\n}\n\nexport default randomDigits;\n","/* given an array of digits\nreturns the sum of the digits\n*/\nfunction sumChecksum(arr) {\n  let sum = 0;\n  for (const item of arr) {\n    sum += item;\n  }\n  return sum.toString();\n}\n\nexport default sumChecksum;\n","/*\ngiven a sequence and a state x\n\nreturns a changed sequence depending on the value of x\n\ndefault: changes one digit of the sequence with probability of 50%\n\ncase x === 1: changes one digit of the sequence\n\ncase x === 2: changes two different digits of the sequence\n\ncase x === 3: changes two different digits of the sequence\n*/\n\n// changes the number n\nfunction changeNumber(n) {\n  let temp = n;\n  if (temp === 0) {\n    temp = 1;\n  } else if (temp === 1) {\n    temp = 0;\n  } else if (temp <= 6) {\n    temp = temp + Math.floor(Math.random() * 2) + 1;\n  } else {\n    temp = Math.floor(Math.random() * 5) + 1;\n  }\n  return temp;\n}\n\n// makes one random change in the sequence\nfunction randomErrorMaker1(seq) {\n  let randomPos = Math.floor(Math.random() * (seq.length - 1));\n  seq[randomPos] = changeNumber(seq[randomPos]);\n  return;\n}\n\n// makes two random changes in the sequence\nfunction randomErrorMaker2(seq) {\n  let randomPos1 = Math.floor(Math.random() * (seq.length - 1));\n  let randomPos2 = Math.floor(Math.random() * (seq.length - 1));\n  while (randomPos2 === randomPos1) {\n    randomPos2 = Math.floor(Math.random() * (seq.length - 1));\n  }\n  seq[randomPos1] = changeNumber(seq[randomPos1]);\n  seq[randomPos2] = changeNumber(seq[randomPos2]);\n  return;\n}\n\n// makes three random changes in the sequence\nfunction randomErrorMaker3(seq) {\n  let randomPos1 = Math.floor(Math.random() * (seq.length - 1));\n  let randomPos2 = Math.floor(Math.random() * (seq.length - 1));\n  let randomPos3 = Math.floor(Math.random() * (seq.length - 1));\n  while (randomPos2 === randomPos1) {\n    randomPos2 = Math.floor(Math.random() * (seq.length - 1));\n  }\n  while (randomPos3 === randomPos1 || randomPos3 === randomPos2) {\n    randomPos3 = Math.floor(Math.random() * (seq.length - 1));\n  }\n  seq[randomPos1] = changeNumber(seq[randomPos1]);\n  seq[randomPos2] = changeNumber(seq[randomPos2]);\n  seq[randomPos3] = changeNumber(seq[randomPos3]);\n  return;\n}\n\n// called by reference\nfunction errormaker(seq, x) {\n  switch (x) {\n    case 1:\n      randomErrorMaker1(seq);\n      break;\n\n    case 2:\n      randomErrorMaker2(seq);\n      break;\n\n    case 3:\n      randomErrorMaker3(seq);\n      break;\n\n    default:\n      let coin = Math.round(Math.random());\n      if (coin === 1) {\n        randomErrorMaker1(seq);\n      }\n      break;\n  }\n\n  return;\n}\n\nexport default errormaker;\n","import React, { useState } from \"react\";\nimport ChecksumExample from \"../components/ChecksumExample\";\nimport ChecksumExercise from \"../components/ChecksumExercise\";\nimport MC from \"../components/MC\";\nimport YN from \"../components/YN\";\nimport randomDigits from \"../functions/randomDigits\";\nimport sumChecksum from \"../functions/sumChecksum\";\nimport errormaker from \"../functions/errormaker\";\n\n/*\nTask 1: Checksums\n\nSubtask A: Given some examples of a checksum method,\ncalculate the checksum of other examples.\n\nSubtask B: Given some number sequences and some checksums,\nthat can be wrong, the user must identify the wrong ones.\n\nSubtask C: Some yes and no questions about the properties\nof the given checksum.\n*/\n\nfunction Task1() {\n  // number of examples displayed in the exercise\n  const numOfExamples = 3;\n\n  // number of wrong answers, before solution is revealed\n  const minWrongAnswers = 3;\n\n  // number of questions for subtasks to solve\n  const numberOfTasksA = 3;\n  const numberOfTasksB = 5;\n\n  /* \n  Keeping track of number of correct solutions or wrong answers\n  for subtask A. If correctAnswersA === numberOfTasks, then\n  subtask A is solved and the next subtask is revealed.\n  If wrongAnswersA === minWrongAnswers, then solution for subtask\n  A is revealed.\n  */\n  const [wrongAnswersA, setWrongAnswersA] = useState(0);\n  const [correctAnswersA, setCorrectAnswersA] = useState(0);\n\n  // if taskStateB === true, then task C is revealed.\n  const [taskStateB, setTaskStateB] = useState(false);\n\n  // mc questions and answer keys for task B\n  const [BTemp] = useState(\n    Array.from({ length: numberOfTasksB }, () => {\n      let seq1 = randomDigits();\n      let cs1 = sumChecksum(seq1);\n      errormaker(seq1, 0);\n      let cs2 = sumChecksum(seq1);\n      return [seq1.join(\"\") + \" \" + cs1, cs1 !== cs2];\n    })\n  );\n\n  let mcOptionsTaskB = [];\n  let mcAKTaskB = [];\n\n  for (let i = 0; i < numberOfTasksB; ++i) {\n    let elemet = BTemp[i];\n    mcOptionsTaskB[i] = elemet[0];\n    mcAKTaskB[i] = elemet[1];\n  }\n\n  // if true, next task is revealed\n  const [taskStateC, setTaskStateC] = useState(Array(5).fill(false));\n\n  // revealing next part of task C\n  const handleTaskStateC = (index) => {\n    let temp = [...taskStateC];\n    temp[index] = true;\n    setTaskStateC(temp);\n  };\n\n  return (\n    <div className=\"task\">\n      <h1>Aufgabe 1: Prüfziffer und Fehlererkennung 1</h1>\n      <div>\n        <p>\n          Eine Möglichkeit um Fehler in Daten zu erkennen, ist es, die Daten mit\n          weiteren Prüfziffern zu ergänzen. In diesem Beispiel haben wir einige\n          Folgen von Zahlen gegeben (hier in Schwarz) und die dazugehörigen\n          Prüfziffern (hier in Rot). Die Prüfziffer wird durch die Folge der\n          Zahlen festgelegt. Können Sie in diesem Beispiel herausfinden, wie man\n          aus der gegebenen Zahlenfolge die Prüfziffer berechnen kann? Ergänzen\n          Sie die weiteren Prüfziffern der gegebenen Zahlenfolgen.\n        </p>\n        {[...Array(numOfExamples)].map((e, i) => (\n          <ChecksumExample\n            key={i}\n            checksumFunction={sumChecksum}\n            sequence={randomDigits}\n          />\n        ))}\n        {[...Array(numberOfTasksA)].map((e, i) => (\n          <ChecksumExercise\n            key={i}\n            checksumFunction={sumChecksum}\n            sequence={randomDigits}\n            onWorong={() => setWrongAnswersA(wrongAnswersA + 1)}\n            onCorrect={() => setCorrectAnswersA(correctAnswersA + 1)}\n          />\n        ))}\n        {wrongAnswersA >= minWrongAnswers &&\n          correctAnswersA !== numberOfTasksA && (\n            <p>\n              Das ist leider nicht korrekt. Die Lösung der Aufgabe ist, dass die\n              Prüfziffer die Summe der einzelnen Zahlen der Zahlenfolge ist. Um\n              fortfahren zu können, müssen Sie die Aufgabe korrekt lösen.\n            </p>\n          )}\n      </div>\n      {correctAnswersA === numberOfTasksA && (\n        <div>\n          <p>\n            Beim Übermitteln von Daten, oder in unserem Beispiel von Zahlen,\n            kann es vorkommen, dass die eine oder andere Ziffer falsch ist. Der\n            Fehler kann sowohl in der Zahlenfolge auftreten, oder aber auch in\n            der Prüfziffer selbst.\n          </p>\n          <MC\n            question={\n              \"Gegeben sind weitere Beispiele von Zahlenfolgen und ihre Prüfsummen. Bestimmen sie die Prüfsummen, die falsch sind.\"\n            }\n            options={mcOptionsTaskB}\n            answerKey={mcAKTaskB}\n            textOnCorrect={\n              \"Die Summe der Zahlenfolge muss immer gleich der Prüfziffer sein. Ansosten muss ein Fehler vorgefallen sein.\"\n            }\n            textOnWrong={\n              \"Die falschen Prüfsummen sind die, welche nicht gleich der Summe der Zahlenfolge sind.\"\n            }\n            callerFunction={() => {\n              setTaskStateB(true);\n            }}\n          />\n        </div>\n      )}\n      {taskStateB && (\n        <div>\n          <p>\n            Die Prüfsumme ist eine einfache Methode, um zu überprüfen, ob ein\n            Fehler beim Versenden von Daten aufgetreten ist. Diese Methode hat\n            einige Vor- und einige Nachteile. Belegen Sie, ob diese Aussagen\n            korrekt oder falsch sind.\n          </p>\n          <YN\n            question={\n              \"Wenn genau eine Ziffer in den Daten falsch ist, dann erkennt man das an der Prüfziffer.\"\n            }\n            solution={1}\n            optionYes={\"Ja\"}\n            optionNo={\"Nein\"}\n            textOnCorrect={\n              \"Wenn eine Ziffer falsch ist, dann stimmt die Summe nicht mehr mit der Prüfziffer überein.\"\n            }\n            textOnWrong={\n              \"Wenn eine Ziffer falsch ist, dann stimmt die Summe nicht mehr mit der Prüfziffer überein.\"\n            }\n            callerFunction={() => handleTaskStateC(0)}\n          />\n          {taskStateC[0] && (\n            <YN\n              question={\n                \"Wenn genau eine Ziffer in der Prüfziffer falsch ist, dann sind auch die Daten falsch.\"\n              }\n              solution={0}\n              optionYes={\"Ja\"}\n              optionNo={\"Nein\"}\n              textOnCorrect={\n                \"Der Fehler kann in der Prüfsumme selber vorkommen, auch wenn die Daten korrekt sind. Man muss zwar davon ausgehen, dass ein Fehler vorgefallen ist und die Daten neu senden.\"\n              }\n              textOnWrong={\n                \"Die Daten können korrekt sein, aber die Prüfsumme selber könnte einen Fehler beinhalten. Man muss zwar davon ausgehen, dass ein Fehler vorgefallen ist.\"\n              }\n              callerFunction={() => handleTaskStateC(1)}\n            />\n          )}\n          {taskStateC[1] && (\n            <YN\n              question={\n                \"Ein häufiger Fehler ist, dass man die Ziffern in der falschen Reihenfolge aufschreib, z.B. 73 statt 37. Kann die Prüfsumme solche Fehler erkennen?\"\n              }\n              solution={0}\n              optionYes={\"Ja\"}\n              optionNo={\"Nein\"}\n              textOnCorrect={\n                \"Die Prüfsumme ist die Summe der einzelnen Zahlen es spielt keine Rolle, in welcher Reihenfolge man die Zahlen addiert (7 + 3 = 3 + 7).\"\n              }\n              textOnWrong={\n                \"Die Prüfsumme ist die Summe der einzelnen Zahlen es spielt keine Rolle, in welcher Reihenfolge man die Zahlen addiert (7 + 3 = 3 + 7).\"\n              }\n              callerFunction={() => handleTaskStateC(2)}\n            />\n          )}\n          {taskStateC[2] && (\n            <YN\n              question={\n                \"Wenn genau eine Ziffer in den Daten falsch ist, kann man mit der Prüfsumme erkennen, welche Ziffer das ist.\"\n              }\n              solution={0}\n              optionYes={\"Ja\"}\n              optionNo={\"Nein\"}\n              textOnCorrect={\n                \"Man erkennt nur, dass ein Fehler passiert ist, aber nicht wo genau. Man kann mit der Prüfsumme nur Fehler erkennen, aber nicht korrigieren.\"\n              }\n              textOnWrong={\n                \"Angenommen die Zahlenfolge wäre 234 und die Prüfsumme 7. Dann kann es sein, dass die korrekte Zahlenfolge 231 gewesen wäre, oder aber auch 214. Man kann mit der Prüfsumme nur Fehler erkennen, aber nicht korrigieren.\"\n              }\n              callerFunction={() => handleTaskStateC(3)}\n            />\n          )}\n          {taskStateC[3] && (\n            <YN\n              question={\n                \"Erkennt man mit der Prüfsumme, ob die Daten falsch sind, wenn genau zwei Ziffern falsch sind?\"\n              }\n              solution={0}\n              optionYes={\"Ja\"}\n              optionNo={\"Nein\"}\n              textOnCorrect={\n                \"Eine Ziffer könnte um den Betrag x höher sein und eine andere Ziffer um den gleichen Betrag x tiefer. Die Summe bleibt dennoch gleich.\"\n              }\n              textOnWrong={\n                \"Angenommen die Zahlenfolge wäre 234 und die Prüfsumme 9. Dann kann es sein, dass die korrekte Zahlenfolge 216 gewesen wäre, oder aber auch 531.\"\n              }\n              callerFunction={() => handleTaskStateC(4)}\n            />\n          )}\n          {taskStateC[4] && (\n            <YN\n              question={\n                \"Erkennt man den Fehler, wenn man eine Ziffer in der Zahlenfolge vergisst oder auslässt?\"\n              }\n              solution={0}\n              optionYes={\"Ja\"}\n              optionNo={\"Nein\"}\n              textOnCorrect={\n                \"Die Ziffer 0 könnte weggelassen werden und die Summe bleibt gleich. Generell sagt die Prüfsumme nichts aus über die Anzahl Nullen in der Zahlenfolge. 1200000 hat die gleiche Prüfsumme wie 120.\"\n              }\n              textOnWrong={\n                \"Die Ziffer 0 könnte weggelassen werden und die Summe bleibt gleich. Generell sagt die Prüfsumme nichts aus über die Anzahl Nullen in der Zahlenfolge. 1200000 hat die gleiche Prüfsumme wie 120. Wenn man 0 nicht erlaubt, dann hätten Sie recht.\"\n              }\n              callerFunction={() => {}}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Task1;\n","/* given an array of digits\nreturns a checksum symbol a\nwhere a is the missing digit\nto the next 10 of the sum of\nthe given digits\n*/\nfunction nextTenChecksum(arr) {\n  let sol = 0;\n  for (const item of arr) {\n    sol += item;\n  }\n  sol = 10 - (sol % 10);\n\n  if (sol === 10) {\n    sol = 0;\n  }\n  return sol.toString();\n}\n\nexport default nextTenChecksum;\n","import React, { useState } from \"react\";\nimport ChecksumExample from \"../components/ChecksumExample\";\nimport ChecksumExercise from \"../components/ChecksumExercise\";\nimport MC from \"../components/MC\";\nimport YN from \"../components/YN\";\nimport randomDigits from \"../functions/randomDigits\";\nimport nextTenChecksum from \"../functions/nextTenChecksum\";\nimport errormaker from \"../functions/errormaker\";\n\n/*\nTask 2: Different checksum\n\nSubtask A: Given some examples of a checksum method,\ncalculate the checksum of other examples.\n\nSubtask B: Given some number sequences and some checksums,\nthat can be wrong, the user must identify the wrong ones.\n\nSubtask C: Some yes and no questions about the properties\nof the given checksum.\n*/\n\nfunction Task2() {\n  // number of examples displayed in the exercise\n  const numOfExamples = 5;\n\n  // number of wrong answers, before solution is revealed\n  const minWrongAnswers = 3;\n\n  // number of questions for subtasks to solve\n  const numberOfTasksA = 3;\n  const numberOfTasksB = 5;\n\n  /* \n  Keeping track of number of correct solutions or wrong answers\n  for subtask A. If correctAnswersA === numberOfTasks, then\n  subtask A is solved and the next subtask is revealed.\n  If wrongAnswersA === minWrongAnswers, then solution for subtask\n  A is revealed.\n  */\n  const [wrongAnswersA, setWrongAnswersA] = useState(0);\n  const [correctAnswersA, setCorrectAnswersA] = useState(0);\n\n  // if answeredB === true, then task C is revealed.\n  const [taskStateB, setTaskStateB] = useState(false);\n\n  // mc questions and answer keys for task B\n  const [BTemp] = useState(\n    Array.from({ length: numberOfTasksB }, () => {\n      let seq1 = randomDigits();\n      let cs1 = nextTenChecksum(seq1);\n      errormaker(seq1, 0);\n      let cs2 = nextTenChecksum(seq1);\n      return [seq1.join(\"\") + cs1, cs1 !== cs2];\n    })\n  );\n\n  let mcOptionsTaskB = [];\n  let mcAKTaskB = [];\n\n  for (let i = 0; i < numberOfTasksB; ++i) {\n    let elemet = BTemp[i];\n    mcOptionsTaskB[i] = elemet[0];\n    mcAKTaskB[i] = elemet[1];\n  }\n\n  // if true, next task is revealed\n  const [taskStateC, setTaskStateC] = useState(Array(6).fill(false));\n\n  // revealing next part of task C\n  const handleTaskStateC = (index) => {\n    let temp = [...taskStateC];\n    temp[index] = true;\n    setTaskStateC(temp);\n  };\n\n  return (\n    <div className=\"task\">\n      <h1>Aufgabe 2: Prüfziffer und Fehlererkennung 2</h1>\n      <div>\n        <p>\n          Hier haben wir ein anderes Beispiel einer anderen Prüfziffer. Erkennen\n          Sie, wie man aus der Zahlenfolge (hier in Schwarz) die Prüfziffer\n          (hier in Rot) berechnen kann? Ergänzen Sie, wie im Beispiel, die\n          fehlenden Prüfziffern.\n        </p>\n        {[...Array(numOfExamples)].map((e, i) => (\n          <ChecksumExample\n            key={i}\n            checksumFunction={nextTenChecksum}\n            sequence={randomDigits}\n          />\n        ))}\n        {[...Array(numberOfTasksA)].map((e, i) => (\n          <ChecksumExercise\n            key={i}\n            checksumFunction={nextTenChecksum}\n            sequence={randomDigits}\n            onWorong={() => setWrongAnswersA(wrongAnswersA + 1)}\n            onCorrect={() => setCorrectAnswersA(correctAnswersA + 1)}\n          />\n        ))}\n        {wrongAnswersA >= minWrongAnswers &&\n          correctAnswersA !== numberOfTasksA && (\n            <p>\n              Das ist leider nicht korrekt. Um die Prüfziffer ermitteln zu\n              können, muss man zuerst die Summe der Zahlenfolge berechnen. Die\n              Prüfziffer ist dann das, was zum nächsten Zehner fehlt. Anders\n              ausgedrückt: Quersumme der Zahlenfolge + Prüfziffer kann man durch\n              10 teilen, und zwar ohne Rest.\n            </p>\n          )}\n      </div>\n      {correctAnswersA === numberOfTasksA && (\n        <div>\n          <p>\n            Beim Übermitteln von Daten, oder in unserem Beispiel von Zahlen,\n            kann es vorkommen, dass die eine oder andere Ziffer falsch ist. Der\n            Fehler kann sowohl in der Zahlenfolge auftreten, oder aber auch in\n            der Prüfziffer selbst.\n          </p>\n          <MC\n            question={\n              \"Gegeben sind weitere Beispiele von Zahlenfolgen und ihre Prüfziffer. Bestimmen sie die Prüfziffern, die falsch sind.\"\n            }\n            options={mcOptionsTaskB}\n            answerKey={mcAKTaskB}\n            textOnCorrect={\"\"}\n            textOnWrong={\n              \"Die Quersumme der Zahlenfolge und die Prüfziffer zusammengezählt, müssen durch 10 teilbar sein.\"\n            }\n            callerFunction={() => {\n              setTaskStateB(true);\n            }}\n          />\n        </div>\n      )}\n      {taskStateB && (\n        <div>\n          <p>\n            Diese Art von Prüfziffer ist eine einfache Methode, um zu\n            überprüfen, ob ein Fehler beim Versenden von Daten aufgetreten ist.\n            Diese Methode hat einige Vor- und einige Nachteile. Belegen Sie, ob\n            diese Aussagen korrekt oder falsch sind.\n          </p>\n          <YN\n            question={\n              \"Wenn genau eine Ziffer in den Daten falsch ist, dann erkennt man das an der Prüfziffer.\"\n            }\n            solution={1}\n            optionYes={\"Ja\"}\n            optionNo={\"Nein\"}\n            textOnCorrect={\n              \"Wenn eine Ziffer falsch ist, dann ist die Quersumme und die Prüfziffer zusammen nicht mehr durch 10 teilbar.\"\n            }\n            textOnWrong={\n              \"Wenn eine Ziffer falsch ist, dann ist die Quersumme und die Prüfziffer zusammen nicht mehr durch 10 teilbar.\"\n            }\n            callerFunction={() => handleTaskStateC(0)}\n          />\n          {taskStateC[0] && (\n            <YN\n              question={\n                \"Wenn die Prüfziffer falsch ist, dann sind auch die Daten falsch.\"\n              }\n              solution={0}\n              optionYes={\"Ja\"}\n              optionNo={\"Nein\"}\n              textOnCorrect={\n                \"Die Prüfzidder selber kann falsch sein, auch wenn die Daten korrekt sind. Man muss zwar davon ausgehen, dass ein Fehler vorgefallen ist und die Daten neu senden.\"\n              }\n              textOnWrong={\n                \"Die Daten können korrekt sein, aber die Prüfziffer selber könnte einen Fehler beinhalten. Man muss zwar davon ausgehen, dass ein Fehler vorgefallen ist.\"\n              }\n              callerFunction={() => handleTaskStateC(1)}\n            />\n          )}\n          {taskStateC[1] && (\n            <YN\n              question={\n                \"Ein häufiger Fehler ist, dass man die Ziffern in der falschen Reihenfolge aufschreib, z.B. 72 statt 27. Kann diese Prüfziffermethode solche Fehler erkennen?\"\n              }\n              solution={0}\n              optionYes={\"Ja\"}\n              optionNo={\"Nein\"}\n              textOnCorrect={\n                \"72 und 27 haben z.B. beide die Prüfziffer 1 (7 + 2 = 2 + 7).\"\n              }\n              textOnWrong={\n                \"72 und 27 haben z.B. beide die Prüfziffer 1 (7 + 2 = 2 + 7).\"\n              }\n              callerFunction={() => handleTaskStateC(2)}\n            />\n          )}\n          {taskStateC[2] && (\n            <YN\n              question={\n                \"Wenn genau eine Ziffer in den Daten falsch ist, kann man mit der Prüfziffer erkennen, welche Ziffer das ist.\"\n              }\n              solution={0}\n              optionYes={\"Ja\"}\n              optionNo={\"Nein\"}\n              textOnCorrect={\n                \"Man erkennt nur, dass ein Fehler passiert ist, aber nicht wo genau. Man kann mit der Prüfziffer nur Fehler erkennen, aber nicht korrigieren.\"\n              }\n              textOnWrong={\n                \"Angenommen die Zahlenfolge wäre 234 und die Prüfziffer 2. Dann kann es sein, dass die korrekte Zahlenfolge 233 gewesen wäre, oder aber auch 224. Man kann mit der Prüfziffer nur Fehler erkennen, aber nicht korrigieren.\"\n              }\n              callerFunction={() => handleTaskStateC(3)}\n            />\n          )}\n          {taskStateC[3] && (\n            <YN\n              question={\n                \"Erkennt man mit der Prüfziffer, ob die Daten falsch sind, wenn zwei Fehler passiert sind?\"\n              }\n              solution={0}\n              optionYes={\"Ja\"}\n              optionNo={\"Nein\"}\n              textOnCorrect={\n                \"Eine Ziffer könnte um den Betrag x höher sein und eine andere Ziffer um den gleichen Betrag x tiefer. Die Summe bleibt dennoch gleich und somit auch die Prüfziffer.\"\n              }\n              textOnWrong={\n                \"Angenommen die Zahlenfolge wäre 234 und die Prüfziffer 1. Dann kann es sein, dass die korrekte Zahlenfolge 225 gewesen wäre, oder aber auch 324.\"\n              }\n              callerFunction={() => handleTaskStateC(4)}\n            />\n          )}\n          {taskStateC[4] && (\n            <YN\n              question={\n                \"Erkennt man den Fehler, wenn man eine Ziffer in der Zahlenfolge vergisst oder auslässt?\"\n              }\n              solution={0}\n              optionYes={\"Ja\"}\n              optionNo={\"Nein\"}\n              textOnCorrect={\n                \"Die Ziffer 0 könnte weggelassen werden und die Summe bleibt gleich. Generell sagt die Prüfziffer nichts aus über die Anzahl Nullen in der Zahlenfolge. 1200000 hat die gleiche Prüfziffer wie 120.\"\n              }\n              textOnWrong={\n                \"Die Ziffer 0 könnte weggelassen werden und die Summe bleibt gleich. Generell sagt die Prüfziffer nichts aus über die Anzahl Nullen in der Zahlenfolge. 1200000 hat die gleiche Prüfziffer wie 120. Wenn man 0 nicht erlaubt, dann hätten Sie recht.\"\n              }\n              callerFunction={() => handleTaskStateC(5)}\n            />\n          )}\n          {taskStateC[5] && (\n            <YN\n              question={\n                \"Welche Fehlererkennungsmethode ist besser, diese Prüfiffer oder die Prüfsumme\"\n              }\n              solution={1}\n              optionYes={\"Prüfziffer\"}\n              optionNo={\"Prüfsumme\"}\n              textOnCorrect={\n                \"Die Prüfziffer schafft das gleiche wie die Prüfsumme und das nur mit einer zusätzlichen Ziffer. Die Prüfsumme braucht mehrere zusätzliche Ziffern.\"\n              }\n              textOnWrong={\n                \"Die Prüfziffer schafft das gleiche wie die Prüfsumme und das nur mit einer zusätzlichen Ziffer. Die Prüfsumme braucht mehrere zusätzliche Ziffern.\"\n              }\n              callerFunction={() => {}}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Task2;\n","// returns a random binary sequence of length n\n// if n <= 0, then the length is random between 3 and 7\nfunction randomBinaryString(n) {\n  let length = n;\n  if (length <= 0) {\n    // length is between 3 and 7\n    length = Math.floor(Math.random() * 4) + 3;\n  }\n\n  const sol = [];\n\n  for (let i = 0; i < length; i++) {\n    let temp = Math.round(Math.random());\n    sol[i] = temp;\n  }\n\n  return sol;\n}\n\nexport default randomBinaryString;\n","// given a binary array arr\n// returns 1 if the number of ones in arr is odd, else returns 0\nfunction binaryCheckSymbol1(arr) {\n  let sol = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    sol += arr[i];\n  }\n\n  return (sol % 2).toString();\n}\n\nexport default binaryCheckSymbol1;\n","// given a binary array arr\n// returns a two digit number xy\n// where x is 1 if the number of ones in arr at an even position is odd, else x is 0\n// and y is 1 if the number of ones in arr at an odd position is odd, else y is 0\n\nfunction binaryCheckSymbol2(arr) {\n  let x = 0;\n  let y = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    if (i % 2 === 0) {\n      x += arr[i];\n    } else {\n      y += arr[i];\n    }\n  }\n\n  return (x % 2).toString() + (y % 2).toString();\n}\n\nexport default binaryCheckSymbol2;\n","/*\ntakes a string of numbers and returns the array of the individual digits\n*/\n\nfunction stringToArray(s) {\n  let arr = [];\n\n  for (let i = 0; i < s.length; ++i) {\n    arr[i] = parseInt(s[i]);\n  }\n\n  return arr;\n}\n\nexport default stringToArray;\n","import React, { useState } from \"react\";\nimport stringToArray from \"../functions/srtingToArray\";\n\n/*\nThis component is an exercise, where the user has to type in an input. This is then compared with a given string and a checksum.\nA common exercise with this component is to change a given binary string such that the new string still fulfills the checksum.\n*/\n\n/*\nsequence is the method of generating a sequence. This can either be a binary or an integer sequence.\n\nchecksumFuncition is the chosen method for a checksum.\n\ncomparer is the method that takes the user's input, the sequence and the checksum function and returns 0 or 1, whether some property is fulfilled or not.\n\ntextOnWong and textOnCorrect are the text displayed, if the the user's answer is wrong or right respectively.\n\ncallerFunction is a function the caller component uses, if this question gets answered.\n*/\nfunction CompareExercise({\n  checksumFunction,\n  sequence,\n  comparer,\n  textOnWrong,\n  textOnCorrect,\n  callerFunction,\n}) {\n  // value of the input field\n  const [value, setValue] = useState(\"\");\n\n  // random generated sequence of numbers and their checksum\n  const [data] = useState(sequence);\n  const [checksum] = useState(() => {\n    return checksumFunction(data);\n  });\n\n  /*\n  variable for the task state\n  \"\": not answered yet\n  true: correctly answered\n  false: answered, but wrong\n  */\n  const [taskState, setTaskState] = useState(\"\");\n\n  // logic for comparing the given answer by the user and the correct answer\n  const checkResult = () => {\n    // stripping away all white spaces\n    let temp = value.replace(/\\s/g, \"\");\n\n    setValue(temp);\n\n    // must be an array\n    let data2 = stringToArray(temp);\n\n    if (comparer(data, data2, checksum, checksumFunction(data2))) {\n      setTaskState(true);\n    } else {\n      setTaskState(false);\n    }\n\n    callerFunction();\n  };\n\n  return (\n    <div>\n      <div>\n        {data.map(function (digit, index) {\n          return <span key={index}>{digit}</span>;\n        })}\n        <span style={{ color: \"red\" }}>{checksum}</span>\n      </div>\n\n      <div>\n        <input\n          type=\"text\"\n          value={value}\n          disabled={taskState === true || taskState === false}\n          onChange={(event) => setValue(event.currentTarget.value)}\n        />\n        <button\n          onClick={checkResult}\n          disabled={taskState === true || taskState === false}\n        >\n          überprüfen\n        </button>\n\n        {taskState === false && (\n          <p>\n            <span style={{ color: \"red\" }}>Falsch</span>. {textOnWrong}\n          </p>\n        )}\n        {taskState === true && (\n          <p>\n            <span style={{ color: \"green\" }}>Korrekt</span>. {textOnCorrect}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default CompareExercise;\n","/*\ngiven two sequences of equal length, returns the number of differences, \ni.e. the Hamming-Distance\n*/\n\nfunction distance(data1, data2) {\n  let data1Len = data1.length;\n  let data2Len = data2.length;\n\n  if (data2Len !== data1Len || data2Len <= 0) {\n    return 0;\n  }\n\n  let delta = 0;\n\n  for (let i = 0; i < data1Len; ++i) {\n    if (data1[i] !== data2[i]) {\n      delta += 1;\n    }\n  }\n\n  return delta;\n}\n\nexport default distance;\n","import distance from \"./distance\";\n\n/*\ngiven two sequences of equal length, their checksums and a number x\nreturns true if the two sequences have a distance of exactly x and their checksums match\nelse returns false\n*/\n\nfunction nDigitComparer(data1, data2, checksum1, checksum2, x) {\n  let data1Len = data1.length;\n  let data2Len = data2.length;\n\n  if (data2Len !== data1Len || data2Len <= 0) {\n    return false;\n  }\n\n  let diff = distance(data1, data2);\n\n  if (diff === x && checksum1 === checksum2) {\n    return true;\n  }\n\n  return false;\n}\n\nexport default nDigitComparer;\n","import React, { useState } from \"react\";\nimport ChecksumExample from \"../components/ChecksumExample\";\nimport ChecksumExercise from \"../components/ChecksumExercise\";\nimport randomBinaryString from \"../functions/randomBinaryString\";\nimport binaryCheckSymbol1 from \"../functions/binaryCheckSymbol1\";\nimport binaryCheckSymbol2 from \"../functions/binaryCheckSymbol2\";\nimport CompareExercise from \"../components/CompareExercise\";\nimport nDigitComparer from \"../functions/nDigitComparer\";\n\n/*\nTask 3: Checksums with Binary Strings\n\nTask A: Given a method for determine a check bit for a binary string,\ncalculate the other check bits for the next examples.\n\nTask B: given the same checksum method and a binary string, change the given string such that it still fulfils the checksum.\n\nTask C: Given an other method for determine two check bits for a binary string,\ncalculate the other check bits for the next examples.\n\nTask D: given the same checksum method and a binary string, change the given string such that it still fulfils the checksum.\n\n*/\n\nfunction Task3() {\n  // number of examples displayed in the exercise\n  const numOfExamples = 5;\n\n  // number of wrong answers, before solution is revealed\n  const minWrongAnswers = 3;\n\n  // number of questions for subtasks to solve\n  const numberOfTasks = 4;\n\n  /* \n  Keeping track of number of correct solutions or wrong answers\n  for subtask A. If correctAnswersA === numberOfTasks, then\n  subtask A is solved and the next subtask is revealed.\n  If wrongAnswersA === minWrongAnswers, then solution for subtask\n  A is revealed.\n  */\n  const [wrongAnswersA, setWrongAnswersA] = useState(0);\n  const [correctAnswersA, setCorrectAnswersA] = useState(0);\n\n  // if taskStateB === true, then task C is revealed.\n  const [taskStateB, setTaskStateB] = useState(false);\n\n  /* \n  Keeping track of number of correct solutions or wrong answers\n  for subtask C. If correctAnswersC === numberOfTasks, then\n  subtask C is solved and the next subtask is revealed.\n  If wrongAnswersC === minWrongAnswers, then solution for subtask\n  C is revealed.\n  */\n  const [wrongAnswersC, setWrongAnswersC] = useState(0);\n  const [correctAnswersC, setCorrectAnswersC] = useState(0);\n\n  // if taskStateD === true, then last part is revealed\n  const [taskStateD, setTaskStateD] = useState(false);\n\n  return (\n    <div className=\"task\">\n      <h1>Aufgabe 3: Binäre Folgen und Fehlererkennung</h1>\n      <div>\n        <p>\n          Computer verwenden nur binäre Daten. Aber besonders da können\n          schneller Fehler auftreten. Eine 1 kann sich schnell in eine 0\n          umwandeln (oder andersrum), wenn z.b. beim Versenden von Daten ein\n          elektronischer Fehler auftritt. Je länger solche binäre Daten sind,\n          desto höher ist die Wahrscheinlichkeit, dass ein solcher Fehler\n          auftritt. Erneut ist hier ein Beispiel gegeben von binären Folgen\n          (hier in Schwarz) und eine Methode, um Fehler zu erkennen. Dafür\n          berechnet man ein Prüfbit (hier in Rot). Finden Sie anhand der\n          gegebenen Beispiele diese Methode raus und ergänzen Sie die fehlenden\n          Prüfbits.\n        </p>\n        {[...Array(numOfExamples)].map((e, i) => (\n          <ChecksumExample\n            key={i}\n            checksumFunction={binaryCheckSymbol1}\n            sequence={randomBinaryString(0)}\n          />\n        ))}\n        {[...Array(numberOfTasks)].map((e, i) => (\n          <ChecksumExercise\n            key={i}\n            checksumFunction={binaryCheckSymbol1}\n            sequence={randomBinaryString(0)}\n            onWorong={() => setWrongAnswersA(wrongAnswersA + 1)}\n            onCorrect={() => setCorrectAnswersA(correctAnswersA + 1)}\n          />\n        ))}\n        {wrongAnswersA >= minWrongAnswers && correctAnswersA !== numberOfTasks && (\n          <p>\n            Das ist leider nicht korrekt. Das Prüfbit wird so gewählt, dass die\n            Anzahl Einsen in der gesamten Folge (inklusive Prüfbit) gerade ist.\n            Zum Beispiel hat die Folge 11001 das Prüfbit{\" \"}\n            <span style={{ color: \"red\" }}>{1}</span>. Wenn man die zusammenfügt\n            hat die gesamte Folge 11001\n            <span style={{ color: \"red\" }}>{1}</span> eine gerade Anzahl Einsen.\n            Anders hat die Folge 1001 bereits eine gerade Anzahl Einsen und\n            somit das Prüfbit <span style={{ color: \"red\" }}>{0}</span>.\n            Zusammengefügt ist das dann 1001\n            <span style={{ color: \"red\" }}>{0}</span>. Ergänzen Sie die\n            restlichen Prüfbits, um fortfahren zu können.\n          </p>\n        )}\n      </div>\n      {correctAnswersA === numberOfTasks && (\n        <div>\n          <p>\n            Diese Methode des Prüfbits ist sehr einfach, allerdings auch\n            limitiert. Gegeben ist eine weitere binäre Folge und deren Prüfbit.\n            Ändern sie die gegebene Folge an genau zwei Stellen ab, sodass das\n            Prüfbit immer noch gültig ist. Geben Sie die neue Folge ohne Prüfbit\n            an.\n          </p>\n          <CompareExercise\n            checksumFunction={binaryCheckSymbol1}\n            sequence={randomBinaryString(4)}\n            textOnCorrect={\"\"}\n            textOnWrong={\n              \"Ihre Angegebene Folge hat entweder mehr als 2 Änderungen oder erfüllt nicht mehr das gegebe Prüfbit.\"\n            }\n            comparer={(a, b, c, d) => {\n              return nDigitComparer(a, b, c, d, 2);\n            }}\n            callerFunction={() => {\n              setTaskStateB(true);\n            }}\n          />\n        </div>\n      )}\n      {taskStateB && (\n        <div>\n          <p>\n            Ähnlich wie bei der Prüfsumme können mit dieser Methode nur einzelne\n            Fehler erkannt werden. Wenn sich mehr als 2 Bits ändern, kann man\n            den Fehler, mit dieser Methode, nicht mehr erkennen. Es ist auch\n            wahrscheinlicher, dass Fehler bei 2 benachbarten Bits gleichzeitig\n            auftreten, z.B. durch das Vertauschen von Bits. Dafür gibt es eine\n            weitere Methode, um solchen Fehler entgegenzuwirken. Man benötigt\n            dafür zwei Prüfbits. Gegeben sind einige binäre Folgen und deren\n            Prüfbits. Berechnen Sie anhand der Beispiele die Prüfbits der\n            restlichen Folgen. Hinweis: Diese Methode ist sehr ähnlich zur\n            vorherigen Methode und kann speziell den Fehler von vertauschten\n            Bits erkennen.\n          </p>\n          {[...Array(numOfExamples)].map((e, i) => (\n            <ChecksumExample\n              key={i}\n              checksumFunction={binaryCheckSymbol2}\n              sequence={randomBinaryString(0)}\n            />\n          ))}\n          {[...Array(numberOfTasks)].map((e, i) => (\n            <ChecksumExercise\n              key={i}\n              checksumFunction={binaryCheckSymbol2}\n              sequence={randomBinaryString(0)}\n              onWorong={() => setWrongAnswersC(wrongAnswersC + 1)}\n              onCorrect={() => setCorrectAnswersC(correctAnswersC + 1)}\n            />\n          ))}\n          {wrongAnswersC >= minWrongAnswers &&\n            correctAnswersC !== numberOfTasks && (\n              <p>\n                Das ist leider nicht korrekt. Für als erste Bit müssen Sie die\n                vorherige Prüfbit Methode anwenden, und zwar auf jedes zweite\n                Bit der binären Folge. Das Gleiche gilt für das zweite Prüfbit,\n                nur mit den anderen Bits der binären Folge. Beispiel, gegeben\n                sei die Folge <span style={{ color: \"red\" }}>{1}</span>\n                <span style={{ color: \"green\" }}>{1}</span>\n                <span style={{ color: \"red\" }}>{1}</span>\n                <span style={{ color: \"green\" }}>{0}</span>, dann sind die\n                Prüfbits <span style={{ color: \"red\" }}>{0}</span>\n                <span style={{ color: \"green\" }}>{1}</span>. Das erste Prüfbit\n                ergibt sich mit den Bits an der ersten und der dritten Stelle,\n                das zweite Prüfbit aus den Bits an der zweiten und vierten\n                Stelle. Ergänzen Sie die restlichen Prüfbits, um fortfahren zu\n                können.\n              </p>\n            )}\n        </div>\n      )}\n      {correctAnswersC === numberOfTasks && (\n        <div>\n          <p>\n            Diese Methode ist um einiges besser als die vorherige Methode. Das\n            Vertauschen von Bits fällt natürlich auf. Wenn zwei Bits von den\n            Jeweiligen Gruppen falsch sind, dann stimmt das nicht mehr mit den\n            Prüfbits überein und somit kann man auch 2 Fehler erkennen.\n            Allerdings muss das nicht immer der Fall sein. Gegeben ist eine\n            weitere binäre Folge und deren Prüfbits. Ändern sie die Gegebene\n            Folge an genau zwei Stellen ab, sodass die Prüfbits immer noch\n            gültig ist. Geben Sie die neue Folge ohne Prüfbits an.\n          </p>\n          <CompareExercise\n            checksumFunction={binaryCheckSymbol2}\n            sequence={randomBinaryString(6)}\n            textOnCorrect={\"\"}\n            textOnWrong={\n              \"Ihre Angegebene Folge hat entweder mehr als 2 Änderungen oder erfüllt nicht mehr die gegeben Prüfbits.\"\n            }\n            comparer={(a, b, c, d) => {\n              return nDigitComparer(a, b, c, d, 2);\n            }}\n            callerFunction={() => {\n              setTaskStateD(true);\n            }}\n          />\n        </div>\n      )}\n      {taskStateD && (\n        <div>\n          <p>\n            Wenn in der binären Folge zwei Fehler passieren, bei Bits, welche zm\n            gleichen Prüfbit beitragen, dann kann man den Fehler nicht erkennen.\n            Die zweite Mehtode ist besser, als die erste Methode, da diese mehr\n            Fehler erkennen kann. Die zweite Methode kann den Fehler auch\n            eingernzen. Ist zum Beispiel das erste Prüfbit nicht erfüllt, dann\n            weiss man, dass eines der Bits an den ungeraden Stellen der Folge\n            falsch sein muss. Das ist allerdings noch zu ungenau um ermitteln zu\n            können, welches Bit nun falsch ist. Um Fehler korigieren zu können,\n            braucht es mehr Informationen.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Task3;\n","import React, { useState } from \"react\";\nimport MC from \"../components/MC\";\nimport YN from \"../components/YN\";\nimport errormaker from \"../functions/errormaker\";\n\n/*\nTask 4: codes and error correction\n\nTask A: given an encoding. The user is given a few messages with one error. He must find the original message.\n\nTask B: given an encoding. The user is given a few messages with two errors. He must find the original message, which he might fail.\n\nTask C: given an encoding. The user is given a few messages with one error. He must find the original message, which he might fail.\n\nTask D: Y and N questions about the property of this encoding. The user should realise after the pervious exercises that with this encoding \nyou can detect 2 errors, but only correct one error.\n\n*/\n\nfunction Task4() {\n  // Table content\n  const words = [\"Hund\", \"Mond\", \"Pizza\", \"Auto\"];\n  const binaryRep = [\"00\", \"01\", \"10\", \"11\"];\n  const encoding = [\n    [0, 0, 0, 0, 0, 0],\n    [0, 1, 0, 1, 0, 1],\n    [1, 0, 1, 0, 1, 0],\n    [1, 1, 1, 1, 1, 1],\n  ];\n\n  const numberOfTasks = 3;\n\n  // keeping track of the number of answers given in each task for revealing the next task\n  const [answersA, setAnswersA] = useState(0);\n  const [answersB, setAnswersB] = useState(0);\n  const [answersC, setAnswersC] = useState(0);\n\n  // if true, next task is revealed\n  const [taskStateD, setTaskStateD] = useState(Array(5).fill(false));\n\n  // revealing next part of task D\n  const handleTaskStateD = (index) => {\n    let temp = [...taskStateD];\n    temp[index] = true;\n    setTaskStateD(temp);\n  };\n\n  // Table for encoding\n  const table = [];\n\n  // Table Head\n  table.push(\n    <tr key={4}>\n      <th>Wort</th>\n      <th>Binäre Darstellung</th>\n      <th>Kodierung</th>\n    </tr>\n  );\n\n  // Table items\n  for (let i = 0; i < 4; ++i) {\n    table.push(\n      <tr key={i}>\n        <td>{words[i]}</td>\n        <td>{binaryRep[i]}</td>\n        <td>{encoding[i]}</td>\n      </tr>\n    );\n  }\n\n  // Temp for MC Questions\n  const [mcTemp] = useState(\n    Array.from({ length: 3 * numberOfTasks }, () => {\n      // random encoding being chosen\n      let k = Math.floor(Math.random() * 4);\n      if (k === 4) {\n        k = 3;\n      }\n      return k;\n    })\n  );\n\n  // MC Questions\n  let mc4A = []; // one error\n  let mc4B = []; // two errors\n  let mc4C = []; // three errors\n\n  // for answer key\n  let key = Array(4).fill(false);\n\n  for (let i = 0; i < 3 * numberOfTasks; i += 3) {\n    let k1 = mcTemp[i];\n    let k2 = mcTemp[i + 1];\n    let k3 = mcTemp[i + 2];\n\n    let key1 = [...key];\n    let key2 = [...key];\n    let key3 = [...key];\n\n    key1[k1] = true;\n    key2[k2] = true;\n    key3[k3] = true;\n\n    let seqTemp1 = [...encoding[k1]];\n    let seqTemp2 = [...encoding[k2]];\n    let seqTemp3 = [...encoding[k3]];\n\n    errormaker(seqTemp1, 1);\n    errormaker(seqTemp2, 2);\n    errormaker(seqTemp3, 3);\n\n    mc4A.push(\n      <MC\n        key={i}\n        callerFunction={() => setAnswersA(answersA + 1)}\n        question={\"Nachricht: \" + seqTemp1.join(\"\")}\n        options={words}\n        answerKey={key1}\n        textOnWrong={\"Die richtige Antwort lautet \" + words[k1] + \".\"}\n        textOnCorrect=\"\"\n      />\n    );\n\n    mc4B.push(\n      <MC\n        key={i + 1}\n        callerFunction={() => setAnswersB(answersB + 1)}\n        question={\"Nachricht: \" + seqTemp2.join(\"\")}\n        options={words}\n        answerKey={key2}\n        textOnWrong={\n          \"Die richtige antwort lautet \" +\n          words[k2] +\n          \". Vergessen Sie nicht, dass es nun 2 Fehler in den Nachrichten gibt.\"\n        }\n        textOnCorrect=\"\"\n      />\n    );\n\n    mc4C.push(\n      <MC\n        key={i + 2}\n        callerFunction={() => setAnswersC(answersC + 1)}\n        question={\"Nachricht: \" + seqTemp3.join(\"\")}\n        options={words}\n        answerKey={key3}\n        textOnWrong={\n          \"Die richtige Antwort lautet \" +\n          words[k3] +\n          \". 3 Fehler sind aber fast unmöglich zu Korrigieren.\"\n        }\n        textOnCorrect=\"\"\n      />\n    );\n  }\n\n  return (\n    <div className=\"task\">\n      <h1>Aufgabe 4: Kodierungen und Fehlerkorrektur 1</h1>\n      <div>\n        <p>\n          Wir haben verschiedene Methoden kennengelernt, um Fehler erkennen zu\n          können. Diese waren sehr simpel, aber dafür auch sehr Limitiert.\n          Bisher konnten wir nur einzelne Fehler erkennen, und wir können bisher\n          auch keine Fehler korrigieren. Wir wollen nun Kodierungssysteme\n          anschauen, mit denen wir auch Fehler korrigieren können.\n        </p>\n        <p>\n          Gegeben sind 4 Wörter, welche wir einer binären Darstellung zuordnen.\n          Weiter kodieren wir die binären Darstellungen, in dem wir diese\n          jeweils 3-mal wiederholen. Beispielsweise wird {binaryRep[1]} zu\n          {\" \" + binaryRep[1]}\n          <span style={{ color: \"red\" }}>{binaryRep[1]}</span>\n          <span style={{ color: \"green\" }}>{binaryRep[1] + \" \"}</span> kodiert.\n        </p>\n        <table>\n          <tbody>{table}</tbody>\n        </table>\n        <p>\n          Wenn Sie nun ein bestimmtes Wort kommunizieren wollen, dann versenden\n          Sie die entsprechende Kodierung. Wenn Sie \"{words[1]}\" als Nachricht\n          verschicken wollen, dann senden Sie die Kodierung \"{encoding[1]}\".\n          Auch da können Fehler auftreten. Gegeben sind Nachrichten, welche\n          genau einen Fehler beinhalten. Geben Sie das Wort an, was am\n          wahrscheinlichsten die ursprüngliche Nachricht war.\n        </p>\n        {mc4A}\n        {answersA === numberOfTasks && (\n          <p>\n            Gegeben sind Nachrichten, welche nun zwei Fehler beinhalten. Können\n            Sie immer noch die ursprüngliche Nachricht identifizieren? Probieren\n            Sie es aus.\n          </p>\n        )}\n        {answersA === numberOfTasks && mc4B}\n        {answersB === numberOfTasks && (\n          <p>\n            Als letztes versuchen wir Nachrichten zu korrigieren, welche nun\n            drei Fehler beinhalten. Können Sie immer noch die ursprüngliche\n            Nachricht identifizieren? Probieren Sie es aus.\n          </p>\n        )}\n        {answersB === numberOfTasks && mc4C}\n\n        {answersC === numberOfTasks && (\n          <div>\n            <p>Mit der gegebenen Kodierung kann man immer...</p>\n            <YN\n              callerFunction={() => handleTaskStateD(0)}\n              question={\"Fehler erkennen, wenn ein Fehler aufgetreten ist.\"}\n              optionYes={\"Ja\"}\n              optionNo={\"Nein\"}\n              textOnWrong={\n                \"Wenn ein Fehler auftrit, dann ist die fehlerhafte Nachricht gar nicht eines unserer Code-Wörter.\"\n              }\n              textOnCorrect={\n                \"Wenn ein Fehler auftrit, dann ist die fehlerhafte Nachricht gar nicht eines unserer Code-Wörter.\"\n              }\n              solution={1}\n            />\n            {taskStateD[0] && (\n              <YN\n                callerFunction={() => handleTaskStateD(1)}\n                question={\n                  \"Fehler korrigieren, wenn ein Fehler aufgetreten ist.\"\n                }\n                optionYes={\"Ja\"}\n                optionNo={\"Nein\"}\n                textOnWrong={\n                  \"Unsere Code-Wörter unterscheiden sich in mindesten an 3 Stellen. Die fehlerhafte Nachricht unterscheidet sich mit einem Fehler nur an einer Stelle zu einem Code-Wort und zu allen anderen in mintesten zwei Stellen. Man kan somit die Feherhafte nachricht eindeutig zuordnen.\"\n                }\n                textOnCorrect={\n                  \"Unsere Code-Wörter unterscheiden sich in mindesten an 3 Stellen. Die fehlerhafte Nachricht unterscheidet sich mit einem Fehler nur an einer Stelle zu einem Code-Wort und zu allen anderen in mintesten zwei Stellen. Man kan somit die Feherhafte nachricht eindeutig zuordnen.\"\n                }\n                solution={1}\n              />\n            )}\n            {taskStateD[1] && (\n              <YN\n                callerFunction={() => handleTaskStateD(2)}\n                question={\"Fehler erkennen, wenn zwei Fehler aufgetreten sind.\"}\n                optionYes={\"Ja\"}\n                optionNo={\"Nein\"}\n                textOnWrong={\n                  \"Wenn zewi Fehler auftreten, dann ist die fehlerhafte Nachricht gar nicht eines unserer Code-Wörter.\"\n                }\n                textOnCorrect={\n                  \"Wenn zewi Fehler auftreten, dann ist die fehlerhafte Nachricht gar nicht eines unserer Code-Wörter.\"\n                }\n                solution={1}\n              />\n            )}\n            {taskStateD[2] && (\n              <YN\n                callerFunction={() => handleTaskStateD(3)}\n                question={\n                  \"Fehler korrigieren, wenn zwei Fehler aufgetreten sind.\"\n                }\n                optionYes={\"Ja\"}\n                optionNo={\"Nein\"}\n                textOnWrong={\n                  \"Bei zwei Fehlern kann man nur erkennen, dass ein Fehler aufgetereten ist, kann ihn aber nicht Korrigieren. 101010 könnte zu 100000 umgewandelt werden mit zwei Fehlern, und man würde das fälschlicherweise zu 000000 korrigieren.\"\n                }\n                textOnCorrect={\n                  \"Bei zwei Fehlern kann man nur erkennen, dass ein Fehler aufgetereten ist, kann ihn aber nicht Korrigieren. 101010 könnte zu 100000 umgewandelt werden mit zwei Fehlern, und man würde das fälschlicherweise zu 000000 korrigieren.\"\n                }\n                solution={0}\n              />\n            )}\n            {taskStateD[3] && (\n              <YN\n                callerFunction={() => handleTaskStateD(4)}\n                question={\"Fehler erkennen, wenn drei Fehler aufgetreten sind.\"}\n                optionYes={\"Ja\"}\n                optionNo={\"Nein\"}\n                textOnWrong={\n                  \"010101 könnte sich per Zufall bei 3 Fehlern zu 000000 umwandeln, was man nicht als Fehler erkennen kann.\"\n                }\n                textOnCorrect={\n                  \"010101 könnte sich per Zufall bei 3 Fehlern zu 000000 umwandeln, was man nicht als Fehler erkennen kann.\"\n                }\n                solution={0}\n              />\n            )}\n            {taskStateD[4] && (\n              <YN\n                callerFunction={() => {}}\n                question={\n                  \"Fehler korrigieren, wenn drei Fehler aufgetreten sind.\"\n                }\n                optionYes={\"Ja\"}\n                optionNo={\"Nein\"}\n                textOnWrong={\n                  \"Man kann unter umständen die Fehler nicht erkennen und darum erst gar nicht korrigieren.\"\n                }\n                textOnCorrect={\n                  \"Man kann unter umständen die Fehler nicht erkennen und darum erst gar nicht korrigieren.\"\n                }\n                solution={0}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Task4;\n","import React, { useState } from \"react\";\nimport MC from \"../components/MC\";\nimport YN from \"../components/YN\";\nimport errormaker from \"../functions/errormaker\";\n\n/*\nTask 5: codes and error correction\n\nTask A: given an encoding. The user is given a few messages with one error. He must find the original message.\n\nTask B: given an encoding. The user is given a few messages with two errors. He must find the original message, which he might fail.\n\nTask C: given an encoding. The user is given a few messages with one error. He must find the original message, which he might fail.\n\nTask D: Y and N questions about the property of this encoding. The user should realise after the pervious exercises that with this encoding \nyou can detect 2 errors, but only correct one error. With task 4, he realizes, that there are different ways of encoding. He should learn in\nthe next exercise that it is about the distance between the code words.\n\n*/\nfunction Task5() {\n  // Table content\n  const words = [\"Hund\", \"Mond\", \"Pizza\", \"Auto\"];\n  const binaryRep = [\"00\", \"01\", \"10\", \"11\"];\n  const encoding = [\n    [0, 0, 0, 0, 0],\n    [0, 1, 0, 1, 1],\n    [1, 0, 1, 0, 1],\n    [1, 1, 1, 1, 0],\n  ];\n\n  const numberOfTasks = 3;\n\n  // keeping track of the number of answers given in each task\n  const [answersA, setAnswersA] = useState(0);\n  const [answersB, setAnswersB] = useState(0);\n  const [answersC, setAnswersC] = useState(0);\n\n  // if true, next task is revealed\n  const [taskStateD, setTaskStateD] = useState(Array(6).fill(false));\n\n  // revealing next part of task D\n  const handleTaskStateD = (index) => {\n    let temp = [...taskStateD];\n    temp[index] = true;\n    setTaskStateD(temp);\n  };\n\n  // Table for encoding\n  const table = [];\n\n  // Table Head\n  table.push(\n    <tr key={4}>\n      <th>Wort</th>\n      <th>Binäre Darstellung</th>\n      <th>Kodierung</th>\n    </tr>\n  );\n\n  // Table items\n  for (let i = 0; i < 4; ++i) {\n    table.push(\n      <tr key={i}>\n        <td>{words[i]}</td>\n        <td>{binaryRep[i]}</td>\n        <td>{encoding[i]}</td>\n      </tr>\n    );\n  }\n\n  // Temp for MC Questions\n  const [mcTemp] = useState(\n    Array.from({ length: 3 * numberOfTasks }, () => {\n      // random encoding being chosen\n      let k = Math.floor(Math.random() * 4);\n      if (k === 4) {\n        k = 3;\n      }\n      return k;\n    })\n  );\n\n  // MC Questions\n  let mc5A = []; // one error\n  let mc5B = []; // two errors\n  let mc5C = []; // three errors\n\n  // for answer key\n  let key = Array(4).fill(false);\n\n  for (let i = 0; i < 3 * numberOfTasks; i += 3) {\n    let k1 = mcTemp[i];\n    let k2 = mcTemp[i + 1];\n    let k3 = mcTemp[i + 2];\n\n    let key1 = [...key];\n    let key2 = [...key];\n    let key3 = [...key];\n\n    key1[k1] = true;\n    key2[k2] = true;\n    key3[k3] = true;\n\n    let seqTemp1 = [...encoding[k1]];\n    let seqTemp2 = [...encoding[k2]];\n    let seqTemp3 = [...encoding[k3]];\n\n    errormaker(seqTemp1, 1);\n    errormaker(seqTemp2, 2);\n    errormaker(seqTemp3, 3);\n\n    mc5A.push(\n      <MC\n        key={i}\n        callerFunction={() => setAnswersA(answersA + 1)}\n        question={\"Nachricht: \" + seqTemp1.join(\"\")}\n        options={words}\n        answerKey={key1}\n        textOnWrong={\"Die richtige antwort lautet \" + words[k1] + \".\"}\n        textOnCorrect=\"\"\n      />\n    );\n\n    mc5B.push(\n      <MC\n        key={i + 1}\n        callerFunction={() => setAnswersB(answersB + 1)}\n        question={\"Nachricht: \" + seqTemp2.join(\"\")}\n        options={words}\n        answerKey={key2}\n        textOnWrong={\n          \"Die richtige Antwort lautet \" +\n          words[k2] +\n          \". Vergessen Sie nicht, dass es nun 2 Fehler in den Nachrichten gibt.\"\n        }\n        textOnCorrect=\"\"\n      />\n    );\n\n    mc5C.push(\n      <MC\n        key={i + 2}\n        callerFunction={() => setAnswersC(answersC + 1)}\n        question={\"Nachricht: \" + seqTemp3.join(\"\")}\n        options={words}\n        answerKey={key3}\n        textOnWrong={\n          \"Die richtige Antwort lautet \" +\n          words[k3] +\n          \". 3 Fehler sind aber fast unmöglich zu Korrigieren.\"\n        }\n        textOnCorrect=\"\"\n      />\n    );\n  }\n\n  return (\n    <div className=\"task\">\n      <h1>Aufgabe 5: Kodierungen und Fehlerkorrektur 2</h1>\n      <div>\n        <p>\n          Wir haben gesehen, dass man mit Kodierungen Fehler in Nachrichten\n          erkennen und auch korrigieren kann. Das wollen wir noch genauer\n          untersuchen. Wir nehmen eine ähnliche Kodierung wie zuvor. Dieses Mal\n          wird die binäre Darstellung verdoppelt und es wird ein weiteres Bit\n          angefügt. Das angefügte Bit wird so gesetzt, dass die Anzahl Einsen in\n          der binären Darstellung und diesem Bit gerade ist. Beispielsweise wird{\" \"}\n          {binaryRep[2]} zu\n          {\" \" + binaryRep[2]}\n          <span style={{ color: \"red\" }}>{binaryRep[2]}</span>\n          <span style={{ color: \"green\" }}>{1 + \" \"}</span> kodiert.\n        </p>\n        <table>\n          <tbody>{table}</tbody>\n        </table>\n        <p>\n          Wie zuvor, wenn Sie nun ein bestimmtes Wort kommunizieren wollen, dann\n          versenden Sie die entsprechende Kodierung. Wenn Sie \"{words[2]}\" als\n          Nachricht verschicken wollen, dann senden Sie die Kodierung \"\n          {encoding[2]}\". Auch da können Fehler auftreten. Gegeben sind\n          Nachrichten, welche genau einen Fehler beinhalten. Geben Sie das Wort\n          an, was am wahrscheinlichsten die ursprüngliche Nachricht war.\n        </p>\n        {mc5A}\n        {answersA === numberOfTasks && (\n          <p>\n            Gegeben sind Nachrichten, welche nun zwei Fehler beinhalten. Können\n            Sie immer noch die ursprüngliche Nachricht identifizieren? Probieren\n            Sie es aus.\n          </p>\n        )}\n        {answersA === numberOfTasks && mc5B}\n        {answersB === numberOfTasks && (\n          <p>\n            Als letztes versuchen wir Nachrichten zu korrigieren, welche nun\n            drei Fehler beinhalten. Können Sie immer noch die ursprüngliche\n            Nachricht identifizieren? Probieren Sie es aus.\n          </p>\n        )}\n        {answersB === numberOfTasks && mc5C}\n        {answersC === numberOfTasks && (\n          <div>\n            <p>Mit der gegebenen Kodierung kann man immer...</p>\n            <YN\n              callerFunction={() => handleTaskStateD(0)}\n              question={\"Fehler erkennen, wenn ein Fehler aufgetreten ist.\"}\n              optionYes={\"Ja\"}\n              optionNo={\"Nein\"}\n              textOnWrong={\n                \"Wenn ein Fehler auftrit, dann ist die fehlerhafte Nachricht gar nicht eines unserer Code-Wörter.\"\n              }\n              textOnCorrect={\n                \"Wenn ein Fehler auftrit, dann ist die fehlerhafte Nachricht gar nicht eines unserer Code-Wörter.\"\n              }\n              solution={1}\n            />\n            {taskStateD[0] && (\n              <YN\n                callerFunction={() => handleTaskStateD(1)}\n                question={\n                  \"Fehler korrigieren, wenn ein Fehler aufgetreten ist.\"\n                }\n                optionYes={\"Ja\"}\n                optionNo={\"Nein\"}\n                textOnWrong={\n                  \"Unsere Code-Wörter unterscheiden sich in mindesten an 3 Stellen. Die fehlerhafte Nachricht unterscheidet sich mit einem Fehler nur an einer Stelle zu einem Code-Wort und zu allen anderen in mintesten zwei Stellen. Man kan somit die Feherhafte nachricht eindeutig zuordnen.\"\n                }\n                textOnCorrect={\n                  \"Unsere Code-Wörter unterscheiden sich in mindesten an 3 Stellen. Die fehlerhafte Nachricht unterscheidet sich mit einem Fehler nur an einer Stelle zu einem Code-Wort und zu allen anderen in mintesten zwei Stellen. Man kan somit die Feherhafte nachricht eindeutig zuordnen.\"\n                }\n                solution={1}\n              />\n            )}\n            {taskStateD[1] && (\n              <YN\n                callerFunction={() => handleTaskStateD(2)}\n                question={\"Fehler erkennen, wenn zwei Fehler aufgetreten sind.\"}\n                optionYes={\"Ja\"}\n                optionNo={\"Nein\"}\n                textOnWrong={\n                  \"Wenn zewi Fehler auftreten, dann ist die fehlerhafte Nachricht gar nicht eines unserer Code-Wörter.\"\n                }\n                textOnCorrect={\n                  \"Wenn zewi Fehler auftreten, dann ist die fehlerhafte Nachricht gar nicht eines unserer Code-Wörter.\"\n                }\n                solution={1}\n              />\n            )}\n            {taskStateD[2] && (\n              <YN\n                callerFunction={() => handleTaskStateD(3)}\n                question={\n                  \"Fehler korrigieren, wenn zwei Fehler aufgetreten sind.\"\n                }\n                optionYes={\"Ja\"}\n                optionNo={\"Nein\"}\n                textOnWrong={\n                  \"Bei zwei Fehlern kann man nur erkennen, dass ein Fehler aufgetereten ist, kann ihn aber nicht Korrigieren. 101010 könnte zu 100000 umgewandelt werden mit zwei Fehlern, und man würde das fälschlicherweise zu 000000 korrigieren.\"\n                }\n                textOnCorrect={\n                  \"Bei zwei Fehlern kann man nur erkennen, dass ein Fehler aufgetereten ist, kann ihn aber nicht Korrigieren. 101010 könnte zu 100000 umgewandelt werden mit zwei Fehlern, und man würde das fälschlicherweise zu 000000 korrigieren.\"\n                }\n                solution={0}\n              />\n            )}\n            {taskStateD[3] && (\n              <YN\n                callerFunction={() => handleTaskStateD(4)}\n                question={\"Fehler erkennen, wenn drei Fehler aufgetreten sind.\"}\n                optionYes={\"Ja\"}\n                optionNo={\"Nein\"}\n                textOnWrong={\n                  \"01011 könnte sich per Zufall bei 3 Fehlern zu 00000 umwandeln, was man nicht als Fehler erkennen kann.\"\n                }\n                textOnCorrect={\n                  \"01011 könnte sich per Zufall bei 3 Fehlern zu 00000 umwandeln, was man nicht als Fehler erkennen kann.\"\n                }\n                solution={0}\n              />\n            )}\n            {taskStateD[4] && (\n              <YN\n                callerFunction={() => handleTaskStateD(5)}\n                question={\n                  \"Fehler korrigieren, wenn drei Fehler aufgetreten sind.\"\n                }\n                optionYes={\"Ja\"}\n                optionNo={\"Nein\"}\n                textOnWrong={\n                  \"Man kann unter umständen die Fehler nicht erkennen und darum erst gar nicht korrigieren.\"\n                }\n                textOnCorrect={\n                  \"Man kann unter umständen die Fehler nicht erkennen und darum erst gar nicht korrigieren.\"\n                }\n                solution={0}\n              />\n            )}\n            {taskStateD[5] && (\n              <YN\n                callerFunction={() => {}}\n                question={\"Ist diese Kodierung besser als die Vorherige?\"}\n                optionYes={\"Ja\"}\n                optionNo={\"Nein\"}\n                textOnWrong={\n                  \"Beide Kodierungen haben die gleichen Eigenschaften. Diese ist zwar 1 Bit kürzer und somit effizienter, aber das ist hier vernachlässigbar.\"\n                }\n                textOnCorrect={\n                  \"Beide Kodierungen haben die gleichen Eigenschaften. Diese ist zwar 1 Bit kürzer und somit effizienter, aber das ist hier vernachlässigbar.\"\n                }\n                solution={0}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Task5;\n","var _clipPath, _g;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgGraph0T6 = function SvgGraph0T6(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0.0 0.0 960.0 540.0\",\n    fill: \"none\",\n    stroke: \"none\",\n    strokeLinecap: \"square\",\n    strokeMiterlimit: 10,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _clipPath || (_clipPath = /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"g10ca9ff00e6_0_66.0\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0l0 -540.0z\",\n    clipRule: \"nonzero\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#g10ca9ff00e6_0_66.0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffffff\",\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#b6d7a8\",\n    d: \"m341.24408 270.0l0 0c0 -33.754593 27.081512 -61.118103 60.48819 -61.118103l0 0c16.04248 0 31.427887 6.439209 42.771637 17.901077c11.3437195 11.461868 17.716553 27.007492 17.716553 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.406677 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m341.24408 270.0l0 0c0 -33.754593 27.081512 -61.118103 60.48819 -61.118103l0 0c16.04248 0 31.427887 6.439209 42.771637 17.901077c11.3437195 11.461868 17.716553 27.007492 17.716553 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.406677 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m407.1705 271.60376q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#b6d7a8\",\n    d: \"m497.77936 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48816 -61.118103l0 0c16.04248 0 31.427917 6.439209 42.771606 17.901077c11.34375 11.461868 17.716614 27.007492 17.716614 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48822 61.118103l0 0c-33.406677 0 -60.48816 -27.363495 -60.48816 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m497.77936 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48816 -61.118103l0 0c16.04248 0 31.427917 6.439209 42.771606 17.901077c11.34375 11.461868 17.716614 27.007492 17.716614 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48822 61.118103l0 0c-33.406677 0 -60.48816 -27.363495 -60.48816 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m560.6276 278.26l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m462.22046 270.0l35.559082 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m462.22046 270.0l35.559082 0\",\n    fillRule: \"evenodd\"\n  }))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGraph0T6, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Graph_0_T6.b5b64e1b.svg\";\nexport { ForwardRef as ReactComponent };","var _clipPath, _g;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgGraph1T6 = function SvgGraph1T6(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0.0 0.0 960.0 540.0\",\n    fill: \"none\",\n    stroke: \"none\",\n    strokeLinecap: \"square\",\n    strokeMiterlimit: 10,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _clipPath || (_clipPath = /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"g10ca9ff00e6_0_42.0\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0l0 -540.0z\",\n    clipRule: \"nonzero\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#g10ca9ff00e6_0_42.0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffffff\",\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#b6d7a8\",\n    d: \"m261.2966 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48819 -61.118103l0 0c16.04245 0 31.427856 6.439209 42.771606 17.901077c11.3437195 11.461868 17.716583 27.007492 17.716583 43.217026l0 0c0 33.75461 -27.081512 61.118103 -60.48819 61.118103l0 0c-33.406708 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m261.2966 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48819 -61.118103l0 0c16.04245 0 31.427856 6.439209 42.771606 17.901077c11.3437195 11.461868 17.716583 27.007492 17.716583 43.217026l0 0c0 33.75461 -27.081512 61.118103 -60.48819 61.118103l0 0c-33.406708 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m320.7237 271.60376q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.201721 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#b6d7a8\",\n    d: \"m577.7276 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48822 -61.118103l0 0c16.04248 0 31.427856 6.439209 42.771606 17.901077c11.34375 11.461868 17.716553 27.007492 17.716553 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48816 61.118103l0 0c-33.40674 0 -60.48822 -27.363495 -60.48822 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m577.7276 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48822 -61.118103l0 0c16.04248 0 31.427856 6.439209 42.771606 17.901077c11.34375 11.461868 17.716553 27.007492 17.716553 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48816 61.118103l0 0c-33.40674 0 -60.48822 -27.363495 -60.48822 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m634.0766 278.26l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998596 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m417.83185 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48819 -61.118103l0 0c16.04245 0 31.427856 6.439209 42.771576 17.901077c11.34375 11.461868 17.716614 27.007492 17.716614 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.406708 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m417.83185 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48819 -61.118103l0 0c16.04245 0 31.427856 6.439209 42.771576 17.901077c11.34375 11.461868 17.716614 27.007492 17.716614 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.406708 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m477.25894 271.60376q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm13.123596 9.90625l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m382.27298 270.0l35.55905 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m382.27298 270.0l35.55905 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m540.48816 270.0l35.559082 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m540.48816 270.0l35.559082 0\",\n    fillRule: \"evenodd\"\n  }))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGraph1T6, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Graph_1_T6.8db044be.svg\";\nexport { ForwardRef as ReactComponent };","var _clipPath, _g;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgGraph2T6 = function SvgGraph2T6(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0.0 0.0 960.0 540.0\",\n    fill: \"none\",\n    stroke: \"none\",\n    strokeLinecap: \"square\",\n    strokeMiterlimit: 10,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _clipPath || (_clipPath = /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"g10ca9ff00e6_0_27.0\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0l0 -540.0z\",\n    clipRule: \"nonzero\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#g10ca9ff00e6_0_27.0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffffff\",\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#b6d7a8\",\n    d: \"m105.296585 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48819 -61.118103l0 0c16.042465 0 31.427872 6.439209 42.771606 17.901077c11.343735 11.461868 17.716583 27.007492 17.716583 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.406708 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m105.296585 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48819 -61.118103l0 0c16.042465 0 31.427872 6.439209 42.771606 17.901077c11.343735 11.461868 17.716583 27.007492 17.716583 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.406708 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m151.72511 271.60376q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.201706 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.201706 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.201706 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m421.72763 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48819 -61.118103l0 0c16.04245 0 31.427856 6.439209 42.771606 17.901077c11.34375 11.461868 17.716553 27.007492 17.716553 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48816 61.118103l0 0c-33.406708 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m421.72763 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48819 -61.118103l0 0c16.04245 0 31.427856 6.439209 42.771606 17.901077c11.34375 11.461868 17.716553 27.007492 17.716553 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48816 61.118103l0 0c-33.406708 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m468.15616 271.60376q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.20169 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm13.123596 9.90625l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998566 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m261.83185 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48819 -61.118103l0 0c16.04245 0 31.427856 6.439209 42.771606 17.901077c11.3437195 11.461868 17.716583 27.007492 17.716583 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.406708 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m261.83185 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48819 -61.118103l0 0c16.04245 0 31.427856 6.439209 42.771606 17.901077c11.3437195 11.461868 17.716583 27.007492 17.716583 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.406708 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m308.26038 271.60376q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.20169 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.201721 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm13.123566 9.90625l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m578.2629 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48816 -61.118103l0 0c16.04248 0 31.427917 6.439209 42.771606 17.901077c11.34375 11.461868 17.716614 27.007492 17.716614 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48822 61.118103l0 0c-33.406677 0 -60.48816 -27.363495 -60.48816 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m578.2629 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48816 -61.118103l0 0c16.04248 0 31.427917 6.439209 42.771606 17.901077c11.34375 11.461868 17.716614 27.007492 17.716614 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48822 61.118103l0 0c-33.406677 0 -60.48816 -27.363495 -60.48816 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m624.6914 271.60376q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm13.123596 9.90625l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998535 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998596 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#b6d7a8\",\n    d: \"m733.7276 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48822 -61.118103l0 0c16.04248 0 31.427856 6.439209 42.771606 17.901077c11.34375 11.461868 17.716553 27.007492 17.716553 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48816 61.118103l0 0c-33.40674 0 -60.48822 -27.363495 -60.48822 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m733.7276 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48822 -61.118103l0 0c16.04248 0 31.427856 6.439209 42.771606 17.901077c11.34375 11.461868 17.716553 27.007492 17.716553 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48816 61.118103l0 0c-33.40674 0 -60.48822 -27.363495 -60.48822 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m777.078 278.26l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998596 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998596 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998596 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m226.27296 270.0l35.559067 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m226.27296 270.0l35.559067 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m384.4882 270.0l35.55905 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m384.4882 270.0l35.55905 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m540.48816 270.0l35.559082 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m540.48816 270.0l35.559082 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m698.7034 270.0l35.55902 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m698.7034 270.0l35.55902 0\",\n    fillRule: \"evenodd\"\n  }))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGraph2T6, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Graph_2_T6.1f9878eb.svg\";\nexport { ForwardRef as ReactComponent };","var _clipPath, _g;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgGraph3T6 = function SvgGraph3T6(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0.0 0.0 960.0 540.0\",\n    fill: \"none\",\n    stroke: \"none\",\n    strokeLinecap: \"square\",\n    strokeMiterlimit: 10,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _clipPath || (_clipPath = /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"g10ca9ff00e6_0_8.0\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0l0 -540.0z\",\n    clipRule: \"nonzero\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#g10ca9ff00e6_0_8.0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffffff\",\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#b6d7a8\",\n    d: \"m27.564304 270.0l0 0c0 -33.754593 27.081486 -61.118103 60.488186 -61.118103l0 0c16.042465 0 31.42788 6.439209 42.771606 17.901077c11.343735 11.461868 17.716583 27.007492 17.716583 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.4067 0 -60.488186 -27.363495 -60.488186 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m27.564304 270.0l0 0c0 -33.754593 27.081486 -61.118103 60.488186 -61.118103l0 0c16.042465 0 31.42788 6.439209 42.771606 17.901077c11.343735 11.461868 17.716583 27.007492 17.716583 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.4067 0 -60.488186 -27.363495 -60.488186 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m67.493546 271.60376q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046879 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.6406288 0 4.031254 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.5468788 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.5312538 -0.921875 0.5468788 -2.8125l0 -3.828125zm16.201706 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.201706 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.201706 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.201706 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m343.99533 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48819 -61.118103l0 0c16.04248 0 31.427887 6.439209 42.771606 17.901077c11.34375 11.461868 17.716583 27.007492 17.716583 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.406708 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m343.99533 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48819 -61.118103l0 0c16.04248 0 31.427887 6.439209 42.771606 17.901077c11.34375 11.461868 17.716583 27.007492 17.716583 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.406708 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m383.92456 271.60376q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.201721 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.20169 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm13.123596 9.90625l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998596 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m184.09955 270.0l0 0c0 -33.754593 27.081497 -61.118103 60.48819 -61.118103l0 0c16.04248 0 31.427887 6.439209 42.771606 17.901077c11.34375 11.461868 17.716583 27.007492 17.716583 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.406693 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m184.09955 270.0l0 0c0 -33.754593 27.081497 -61.118103 60.48819 -61.118103l0 0c16.04248 0 31.427887 6.439209 42.771606 17.901077c11.34375 11.461868 17.716583 27.007492 17.716583 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.406693 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m224.0288 271.60376q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.201706 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.201706 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.201706 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm13.123596 9.90625l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m500.53058 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48822 -61.118103l0 0c16.04242 0 31.427856 6.439209 42.771606 17.901077c11.343689 11.461868 17.716553 27.007492 17.716553 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48816 61.118103l0 0c-33.40674 0 -60.48822 -27.363495 -60.48822 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m500.53058 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48822 -61.118103l0 0c16.04242 0 31.427856 6.439209 42.771606 17.901077c11.343689 11.461868 17.716553 27.007492 17.716553 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48816 61.118103l0 0c-33.40674 0 -60.48822 -27.363495 -60.48822 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m540.45984 271.60376q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.20166 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm13.123596 9.90625l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998596 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998596 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m655.99536 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48816 -61.118103l0 0c16.04248 0 31.427856 6.439209 42.771606 17.901077c11.34375 11.461868 17.716614 27.007492 17.716614 43.217026l0 0c0 33.75461 -27.081543 61.118103 -60.48822 61.118103l0 0c-33.406677 0 -60.48816 -27.363495 -60.48816 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m655.99536 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48816 -61.118103l0 0c16.04248 0 31.427856 6.439209 42.771606 17.901077c11.34375 11.461868 17.716614 27.007492 17.716614 43.217026l0 0c0 33.75461 -27.081543 61.118103 -60.48822 61.118103l0 0c-33.406677 0 -60.48816 -27.363495 -60.48816 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m695.92456 271.60376q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm13.123596 9.90625l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998596 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998535 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998596 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#b6d7a8\",\n    d: \"m811.4597 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48822 -61.118103l0 0c16.04242 0 31.427856 6.439209 42.771606 17.901077c11.343689 11.461868 17.716553 27.007492 17.716553 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48816 61.118103l0 0c-33.40674 0 -60.48822 -27.363495 -60.48822 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m811.4597 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48822 -61.118103l0 0c16.04242 0 31.427856 6.439209 42.771606 17.901077c11.343689 11.461868 17.716553 27.007492 17.716553 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48816 61.118103l0 0c-33.40674 0 -60.48822 -27.363495 -60.48822 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m848.31085 278.26l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998535 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998596 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998596 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998596 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m148.54068 270.0l35.55905 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m148.54068 270.0l35.55905 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m306.75592 270.0l35.55905 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m306.75592 270.0l35.55905 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m462.75592 270.0l35.55905 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m462.75592 270.0l35.55905 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m620.9711 270.0l35.559082 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m620.9711 270.0l35.559082 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m776.9711 270.0l35.559082 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m776.9711 270.0l35.559082 0\",\n    fillRule: \"evenodd\"\n  }))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGraph3T6, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Graph_3_T6.e9e0d096.svg\";\nexport { ForwardRef as ReactComponent };","var _clipPath, _g;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgGraph4T6 = function SvgGraph4T6(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0.0 0.0 960.0 540.0\",\n    fill: \"none\",\n    stroke: \"none\",\n    strokeLinecap: \"square\",\n    strokeMiterlimit: 10,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _clipPath || (_clipPath = /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"g10ca9ff00e6_0_74.0\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0l0 -540.0z\",\n    clipRule: \"nonzero\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#g10ca9ff00e6_0_74.0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffffff\",\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#b6d7a8\",\n    d: \"m77.90026 270.0l0 0c0 -33.754593 27.08149 -61.118103 60.488197 -61.118103l0 0c16.042465 0 31.427872 6.439209 42.771606 17.901077c11.343735 11.461868 17.716583 27.007492 17.716583 43.217026l0 0c0 33.75461 -27.081497 61.118103 -60.48819 61.118103l0 0c-33.406708 0 -60.488197 -27.363495 -60.488197 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m77.90026 270.0l0 0c0 -33.754593 27.08149 -61.118103 60.488197 -61.118103l0 0c16.042465 0 31.427872 6.439209 42.771606 17.901077c11.343735 11.461868 17.716583 27.007492 17.716583 43.217026l0 0c0 33.75461 -27.081497 61.118103 -60.48819 61.118103l0 0c-33.406708 0 -60.488197 -27.363495 -60.488197 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m130.82808 271.60376q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.201706 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.201706 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m724.4985 270.0l0 0c0 -33.754593 27.081543 -61.118103 60.48822 -61.118103l0 0c16.04248 0 31.427856 6.439209 42.771606 17.901077c11.34375 11.461868 17.716553 27.007492 17.716553 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48816 61.118103l0 0c-33.406677 0 -60.48822 -27.363495 -60.48822 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m724.4985 270.0l0 0c0 -33.754593 27.081543 -61.118103 60.48822 -61.118103l0 0c16.04248 0 31.427856 6.439209 42.771606 17.901077c11.34375 11.461868 17.716553 27.007492 17.716553 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48816 61.118103l0 0c-33.406677 0 -60.48822 -27.363495 -60.48822 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m774.3482 278.26l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998596 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998535 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#b6d7a8\",\n    d: \"m516.7111 77.115486l0 0c0 -33.7546 27.081482 -61.11811 60.48816 -61.11811l0 0c16.04248 0 31.427856 6.439211 42.771606 17.901081c11.34375 11.461868 17.716614 27.0075 17.716614 43.21703l0 0c0 33.7546 -27.081482 61.11811 -60.48822 61.11811l0 0c-33.406677 0 -60.48816 -27.36351 -60.48816 -61.11811z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m516.7111 77.115486l0 0c0 -33.7546 27.081482 -61.11811 60.48816 -61.11811l0 0c16.04248 0 31.427856 6.439211 42.771606 17.901081c11.34375 11.461868 17.716614 27.0075 17.716614 43.21703l0 0c0 33.7546 -27.081482 61.11811 -60.48822 61.11811l0 0c-33.406677 0 -60.48816 -27.36351 -60.48816 -61.11811z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m569.6389 78.71923q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm13.123596 9.90625l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998596 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#b6d7a8\",\n    d: \"m516.7111 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48816 -61.118103l0 0c16.04248 0 31.427856 6.439209 42.771606 17.901077c11.34375 11.461868 17.716614 27.007492 17.716614 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48822 61.118103l0 0c-33.406677 0 -60.48816 -27.363495 -60.48816 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m516.7111 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48816 -61.118103l0 0c16.04248 0 31.427856 6.439209 42.771606 17.901077c11.34375 11.461868 17.716614 27.007492 17.716614 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48822 61.118103l0 0c-33.406677 0 -60.48816 -27.363495 -60.48816 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m566.5608 278.26l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm16.076721 -6.65625q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm13.123596 9.90625l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#b6d7a8\",\n    d: \"m516.7111 462.88452l0 0c0 -33.75461 27.081482 -61.118103 60.48816 -61.118103l0 0c16.04248 0 31.427856 6.439209 42.771606 17.901062c11.34375 11.461884 17.716614 27.007507 17.716614 43.21704l0 0c0 33.75461 -27.081482 61.118103 -60.48822 61.118103l0 0c-33.406677 0 -60.48816 -27.363495 -60.48816 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m516.7111 462.88452l0 0c0 -33.75461 27.081482 -61.118103 60.48816 -61.118103l0 0c16.04248 0 31.427856 6.439209 42.771606 17.901062c11.34375 11.461884 17.716614 27.007507 17.716614 43.21704l0 0c0 33.75461 -27.081482 61.118103 -60.48822 61.118103l0 0c-33.406677 0 -60.48816 -27.363495 -60.48816 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m566.5608 471.1445l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm12.998596 0l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm16.076721 -6.65625q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m285.68747 77.115486l0 0c0 -33.7546 27.081482 -61.11811 60.48819 -61.11811l0 0c16.04248 0 31.427887 6.439211 42.771606 17.901081c11.34375 11.461868 17.716583 27.0075 17.716583 43.21703l0 0c0 33.7546 -27.081482 61.11811 -60.48819 61.11811l0 0c-33.406708 0 -60.48819 -27.36351 -60.48819 -61.11811z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m285.68747 77.115486l0 0c0 -33.7546 27.081482 -61.11811 60.48819 -61.11811l0 0c16.04248 0 31.427887 6.439211 42.771606 17.901081c11.34375 11.461868 17.716583 27.0075 17.716583 43.21703l0 0c0 33.7546 -27.081482 61.11811 -60.48819 61.11811l0 0c-33.406708 0 -60.48819 -27.36351 -60.48819 -61.11811z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m338.6153 78.71923q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.201721 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm13.123566 9.90625l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m285.68747 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48819 -61.118103l0 0c16.04248 0 31.427887 6.439209 42.771606 17.901077c11.34375 11.461868 17.716583 27.007492 17.716583 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.406708 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m285.68747 270.0l0 0c0 -33.754593 27.081482 -61.118103 60.48819 -61.118103l0 0c16.04248 0 31.427887 6.439209 42.771606 17.901077c11.34375 11.461868 17.716583 27.007492 17.716583 43.217026l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.406708 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m338.6153 271.60376q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm13.123596 9.90625l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm16.07669 -6.65625q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m285.68747 462.88452l0 0c0 -33.75461 27.081482 -61.118103 60.48819 -61.118103l0 0c16.04248 0 31.427887 6.439209 42.771606 17.901062c11.34375 11.461884 17.716583 27.007507 17.716583 43.21704l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.406708 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m285.68747 462.88452l0 0c0 -33.75461 27.081482 -61.118103 60.48819 -61.118103l0 0c16.04248 0 31.427887 6.439209 42.771606 17.901062c11.34375 11.461884 17.716583 27.007507 17.716583 43.21704l0 0c0 33.75461 -27.081482 61.118103 -60.48819 61.118103l0 0c-33.406708 0 -60.48819 -27.363495 -60.48819 -61.118103z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m335.53717 471.1445l-3.1875 0l0 -12.328125l-3.828125 1.1875l0 -2.59375l6.671875 -2.390625l0.34375 0l0 16.125zm16.076721 -6.65625q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125zm16.20169 3.25q0 3.34375 -1.390625 5.109375q-1.375 1.765625 -4.046875 1.765625q-2.625 0 -4.03125 -1.734375q-1.390625 -1.734375 -1.421875 -4.984375l0 -2.953125q0 -3.375 1.390625 -5.125q1.40625 -1.75 4.03125 -1.75q2.640625 0 4.03125 1.734375q1.40625 1.734375 1.4375 4.96875l0 2.96875zm-3.203125 -3.25q0 -2.015625 -0.546875 -2.921875q-0.546875 -0.90625 -1.703125 -0.90625q-1.125 0 -1.671875 0.875q-0.53125 0.859375 -0.5625 2.703125l0 3.921875q0 1.96875 0.53125 2.921875q0.546875 0.953125 1.71875 0.953125q1.171875 0 1.6875 -0.90625q0.53125 -0.921875 0.546875 -2.8125l0 -3.828125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m181.16006 226.78297l122.236206 -106.456696\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m181.16006 226.78297l122.236206 -106.456696\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m198.87665 270.0l86.80313 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m198.87665 270.0l86.80313 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m181.16006 313.21704l122.236206 106.456696\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m181.16006 313.21704l122.236206 106.456696\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m388.94727 313.21704l145.48035 106.456696\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m388.94727 313.21704l145.48035 106.456696\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m388.94727 226.78297l145.48035 -106.456696\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m388.94727 226.78297l145.48035 -106.456696\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m637.6875 270.0l86.8031 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m637.6875 270.0l86.8031 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m516.7111 77.115486l-110.04727 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m516.7111 77.115486l-110.04727 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m516.7111 462.88452l-110.04727 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m516.7111 462.88452l-110.04727 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m534.4277 313.21704l-145.48032 106.456696\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m534.4277 313.21704l-145.48032 106.456696\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m534.4277 226.78297l-145.48032 -106.456696\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m534.4277 226.78297l-145.48032 -106.456696\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m742.2151 226.78297l-122.236206 -106.456696\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m742.2151 226.78297l-122.236206 -106.456696\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m742.2151 313.21704l-122.236206 106.456696\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#000000\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m742.2151 313.21704l-122.236206 106.456696\",\n    fillRule: \"evenodd\"\n  }))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGraph4T6, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Graph_4_T6.1bc99d92.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\nimport MC from \"../components/MC\";\nimport YN from \"../components/YN\";\nimport { ReactComponent as G0 } from \"../graphics/Graph_0_T6.svg\";\nimport { ReactComponent as G1 } from \"../graphics/Graph_1_T6.svg\";\nimport { ReactComponent as G2 } from \"../graphics/Graph_2_T6.svg\";\nimport { ReactComponent as G3 } from \"../graphics/Graph_3_T6.svg\";\nimport { ReactComponent as G4 } from \"../graphics/Graph_4_T6.svg\";\n\n/*\nTask 6: Distances in Encodings\njust theory and some YN/MC questions about Hamming-Distance.\n*/\n\nfunction Task6() {\n  // keeping track which task has already been solved\n  const [taskTracker, setTaskTracker] = useState(Array(9).fill(false));\n\n  // updating task tracker\n  const updateTaskTracker = (index) => {\n    let temp = [...taskTracker];\n    temp[index] = true;\n    setTaskTracker(temp);\n  };\n\n  return (\n    <div className=\"task\">\n      <h1>Aufgabe 6: Abstand in Kodierungen 1</h1>\n      <p>\n        Wir möchten nun genauer untersuchen, wass eine Kodierung erfüllen muss,\n        damit man Fehler erkennen und korrigieren kann. Fangen wir bei einem\n        sehr einfachen Beispiel an. Gegeben sind die Wörter 0 und 1 in unserer\n        Kodierung.\n      </p>\n      <G0 />\n      <YN\n        callerFunction={() => updateTaskTracker(0)}\n        question={\n          \"Kann man erkennen, ob ein Fehler aufgetreten ist, wenn eines der beiden Wörter als Nachricht ankommt?\"\n        }\n        solution={0}\n        optionYes={\"Ja\"}\n        optionNo={\"Nein\"}\n        textOnCorrect={\n          \"0 kann sich durch einen einzigen Fehler zu 1 umwandeln und andersrum.\"\n        }\n        textOnWrong={\n          \"0 kann sich durch einen einzigen Fehler zu 1 umwandeln und andersrum.\"\n        }\n      />\n\n      {taskTracker[0] && (\n        <div>\n          <p>\n            Im zweiten Beispiel sind nun die Wörter 00 und 11 in der Kodierung\n            gegeben (in Grün). Eine der beiden möglichen Transformationen von\n            einem zum anderen Wort ist hier dargestellt.\n          </p>\n          <G1 />\n          <YN\n            callerFunction={() => updateTaskTracker(1)}\n            question={\n              \"Erkennt man den Fehler, wenn das Fehlerhafte Wort als Nachricht erhalten wird?\"\n            }\n            solution={1}\n            optionYes={\"Ja\"}\n            optionNo={\"Nein\"}\n            textOnCorrect={\n              \"01 ist nicht in unserer Kodierung und kann desswegen nicht richtig sein.\"\n            }\n            textOnWrong={\n              \"01 ist nicht in unserer Kodierung und kann desswegen nicht richtig sein.\"\n            }\n          />\n          <YN\n            callerFunction={() => updateTaskTracker(2)}\n            question={\"Können sie diesen Fehler korrigieren?\"}\n            solution={0}\n            optionYes={\"Ja\"}\n            optionNo={\"Nein\"}\n            textOnCorrect={\n              \"Beide Wörter haben den selben Abstannt zum fehlerhaften Wort. Eine eindeutige Zuordnung ist deswegen nicht möglich.\"\n            }\n            textOnWrong={\n              \"Beide Wörter haben den selben Abstannt zum fehlerhaften Wort. Eine eindeutige Zuordnung ist deswegen nicht möglich.\"\n            }\n          />\n        </div>\n      )}\n\n      {taskTracker[1] && taskTracker[2] && (\n        <div>\n          <p>\n            Gegeben sind wieder zwei Codewörter 0000 und 1111 und eine mögliche\n            Transformation von einem zum anderen Wort.\n          </p>\n          <G2 />\n          <MC\n            callerFunction={() => updateTaskTracker(3)}\n            question={\"Wie viele Codewörter erkkenen Sie als Fehler?\"}\n            options={[\"1\", \"2\", \"3\"]}\n            answerKey={[false, false, true]}\n            textOnCorrect={\n              \"Alle 3 Wörter dazwischen liegen nicht in der Kodierung.\"\n            }\n            textOnWrong={\n              \"Alle 3 Wörter dazwischen liegen nicht in der Kodierung.\"\n            }\n          />\n          <MC\n            callerFunction={() => updateTaskTracker(4)}\n            question={\"Wie viele Codewörter können Sie korrigieren?\"}\n            options={[\"1\", \"2\", \"3\"]}\n            answerKey={[false, true, false]}\n            textOnCorrect={\n              \"0011 kann man nicht eindeutig 0000 oder 1111 zurdnen.\"\n            }\n            textOnWrong={\n              \"Nur 0001 und 0111 kann man den Wörter in unserer Kodierung eindeutig zuordnen.\"\n            }\n          />\n          <MC\n            callerFunction={() => updateTaskTracker(5)}\n            question={\n              \"Wie viele Fehler kann in einem Wort vorfallen, so dass man das noch als Fehler erkennt?\"\n            }\n            options={[\"1\", \"2\", \"3\"]}\n            answerKey={[false, false, true]}\n            textOnCorrect={\n              \"Da die Wörter Abstand 4 haben, können bis zu 3 Fehler auftreten, die man noch erkennt. Bei 4 Fehler würde man das erhaltene Wort fälschlicher weise als korrekt betrachten.\"\n            }\n            textOnWrong={\n              \"Da die Wörter Abstand 4 haben, können bis zu 3 Fehler auftreten, die man noch erkennt. Bei 4 Fehler würde man das erhaltene Wort fälschlicher weise als korrekt betrachten.\"\n            }\n          />\n          <MC\n            callerFunction={() => updateTaskTracker(6)}\n            question={\n              \"Wie viele Fehler können insgesammt bei unseren Codewörtern auftreten, so dass man das felerhafte Wort korrigieren kann?\"\n            }\n            options={[\"1\", \"2\", \"3\"]}\n            answerKey={[true, false, false]}\n            textOnCorrect={\n              \"Bei 2 Fehlern erhält man ein Wort, welches man nicht mehr zuorden kann. Bei mehr Fehlern korrigieren wir falsch.\"\n            }\n            textOnWrong={\n              \"Bei 2 Fehlern erhält man ein Wort, welches man nicht mehr zuorden kann. Bei mehr Fehlern korrigieren wir falsch.\"\n            }\n          />\n        </div>\n      )}\n\n      {taskTracker[3] && taskTracker[4] && taskTracker[5] && taskTracker[6] && (\n        <div>\n          <p>Letztes Beispiel.</p>\n          <G3 />\n          <MC\n            callerFunction={() => updateTaskTracker(7)}\n            question={\n              \"Wie viele Fehler kann in einem Wort vorfallen, dass man das noch als Fehler erkennt?\"\n            }\n            options={[\"2\", \"3\", \"4\", \"5\"]}\n            answerKey={[false, false, true, false]}\n            textOnCorrect={\"\"}\n            textOnWrong={\n              \"Bis zu 4 Fehler können passieren. Die Wörter haben einen Abstand von 5 und deswegen würde erst ab 5 Fehlern das nicht mehr als falsch betrachted werden.\"\n            }\n          />\n          <MC\n            callerFunction={() => updateTaskTracker(8)}\n            question={\n              \"Wie viele Fehler können insgesammt bei unseren Codewörtern auftreten, so dass man das felerhafte Wort korrigieren kann?\"\n            }\n            options={[\"1\", \"2\", \"3\", \"4\"]}\n            answerKey={[false, true, false, false]}\n            textOnCorrect={\n              \"Bei 2 Fehlern erhält man ein Wort, welches man immernoch eindeudig zuorden kann. Bei mehr Fehlern korrigieren wir falsch.\"\n            }\n            textOnWrong={\n              \"Bei 2 Fehlern erhält man ein Wort, welches man immernoch eindeudig zuorden kann. Bei mehr Fehlern korrigieren wir falsch.\"\n            }\n          />\n        </div>\n      )}\n\n      {taskTracker[7] && taskTracker[8] && (\n        <div>\n          <p>\n            Der Abstand der Codewörter ist also die entscheidende Grösse.\n            Abhängig davon kann man eine bestimmte Anzahl Fehler erkennen oder\n            eine bestimmte Anzahl Fehler korrigieren. Der Abstand zwischen zwei\n            Codewörter ist definiert als die Anzahl Stellen, an denen sich die\n            Wörter unterscheiden. Beispielsweise haben die Wörter 10010 und\n            10100 den Abstand 3, da sich die letzten 3 Bits unterscheiden.\n            Dieser Abstand wird auch Hamming-Abstand oder Hamming-Distanz\n            genannt.\n          </p>\n          <p>\n            Damit man innerhalb einer Kodierung immer eine bestimmte Anzahl\n            Fehler korrigieren oder erkennen kann, so muss der Abstand zwischen\n            allen Wörter-Paare in der Kodierung eine bestimmte Grösse haben. Das\n            Beispiel hier zeig eine Kodierung mit Wörter der Länge 3 an, mit\n            einem gerammten Abstand von 2.\n          </p>\n          <G4 />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Task6;\n","import distance from \"./distance\";\n\n/* \ngiven an array of arrays or strings of equal length,\nreturns the hamming distance of the array\n*/\n\nfunction hammingDistance(data) {\n  let hd = Infinity;\n\n  for (let i = 1; i < data.length; ++i) {\n    for (let j = 0; j < i; ++j) {\n      let temp = distance(data[i], data[j]);\n      if (temp < hd) {\n        hd = temp;\n      }\n    }\n  }\n\n  return hd;\n}\n\nexport default hammingDistance;\n","import React, { useState } from \"react\";\nimport hammingDistance from \"../functions/hammingDistance\";\n\n/*\nTask 7: Given all possible binary words of length 5,\nthe user must select all words to form a code fulfilling\na random property at the beginning of the exercise.\nIn addition one word is selected already at the beginning.\n*/\n\nfunction Task7() {\n  // code words\n  const words = [\n    \"00000\",\n    \"00001\",\n    \"00010\",\n    \"00100\",\n    \"01000\",\n    \"10000\",\n    \"00011\",\n    \"00101\",\n    \"01001\",\n    \"10001\",\n    \"00110\",\n    \"01010\",\n    \"10010\",\n    \"01100\",\n    \"10100\",\n    \"11000\",\n    \"00111\",\n    \"01011\",\n    \"10011\",\n    \"01101\",\n    \"10101\",\n    \"11001\",\n    \"01110\",\n    \"10110\",\n    \"11010\",\n    \"11100\",\n    \"01111\",\n    \"10111\",\n    \"11011\",\n    \"11101\",\n    \"11110\",\n    \"11111\",\n  ];\n\n  // used for toggle\n  const correlationList = [\n    [0, 1, 2, 3, 4, 5],\n    [0, 1, 6, 7, 8, 9],\n    [0, 2, 6, 10, 11, 12],\n    [0, 3, 7, 10, 13, 14],\n    [0, 4, 8, 11, 13, 15],\n    [0, 5, 9, 12, 14, 15],\n    [1, 2, 6, 16, 17, 18],\n    [1, 3, 7, 16, 19, 20],\n    [1, 4, 8, 17, 19, 21],\n    [1, 5, 9, 18, 20, 21],\n    [2, 3, 10, 16, 22, 23],\n    [2, 4, 11, 17, 22, 24],\n    [2, 5, 12, 18, 23, 24],\n    [3, 4, 13, 19, 22, 25],\n    [3, 5, 14, 20, 23, 25],\n    [4, 5, 15, 21, 24, 25],\n    [6, 7, 10, 16, 26, 27],\n    [6, 8, 11, 17, 26, 28],\n    [6, 9, 12, 18, 27, 28],\n    [7, 8, 13, 19, 26, 29],\n    [7, 9, 14, 20, 27, 29],\n    [8, 9, 15, 21, 28, 29],\n    [10, 11, 13, 22, 26, 30],\n    [10, 12, 14, 23, 27, 30],\n    [11, 12, 15, 24, 28, 30],\n    [13, 14, 15, 25, 29, 30],\n    [16, 17, 19, 22, 26, 31],\n    [16, 18, 20, 23, 27, 31],\n    [17, 18, 21, 24, 28, 31],\n    [17, 18, 21, 25, 29, 31],\n    [22, 23, 24, 25, 30, 31],\n    [26, 27, 28, 29, 30, 31],\n  ];\n\n  /* all possible task, one of which is chosen at random\n  given in a triplet: task, solution of hamming distance, solution of number of code words\n  */\n  const possibleTasks = [\n    [\"Mit der Kodierung kann man nur einzelne Fehler erkennen.\", 2, 16],\n    [\n      \"Mit der Kodierung kann man einzelne Fehler Korrigieren und nur Fehler der grösse 2 erkennen.\",\n      3,\n      4,\n    ],\n    [\n      \"Mit der Kodierung kann man zwei Fehler Korrigieren und Fehler der grösse 4 erkennen.\",\n      5,\n      2,\n    ],\n  ];\n\n  // chosen at random for possible task\n  const [taskNumber] = useState(() => {\n    let k = Math.floor(Math.random() * 3);\n    if (k === 3) {\n      k = 2;\n    }\n    return k;\n  });\n\n  // number of words in code, known from the beginning\n  const codeSize = 32;\n\n  // toggle status of each node\n  const [toggle, setToggle] = useState(Array(codeSize).fill(false));\n\n  const handleToggle = (arr) => {\n    let temp = [...toggle];\n    for (let i = 0; i < arr.length; ++i) {\n      let tempIndex = arr[i];\n      temp[tempIndex] = !temp[tempIndex];\n    }\n    setToggle(temp);\n  };\n\n  /* \n  status of each button, whether it is selected, neutral or unselected\n  neutral and unselected are equal in the logic of the code, but gives\n  the user visual aid for solving the exercise.\n  \n  0: neutral\n  1 and 4: selected\n  2: un selected\n  */\n  const [buttonStatus, setButoonStatus] = useState(() => {\n    let arr = Array(codeSize).fill(0);\n    let randy = Math.floor(Math.random() * codeSize);\n    if (randy === codeSize) {\n      randy = 31;\n    }\n    arr[randy] = 4;\n    return arr;\n  });\n\n  /*\n  variable for the task state\n  \"\": not answered yet\n  true: correctly answered\n  false: answered, but wrong\n  */\n  const [taskState, setTaskState] = useState(\"\");\n\n  // text displayed if answer is either correct or wrong\n  const [text, setText] = useState(\"\");\n\n  // logic for changing the button status\n  const changeButtonStatus = (index) => {\n    if (buttonStatus[index] !== 4) {\n      let temp = [...buttonStatus];\n      temp[index] = (temp[index] + 1) % 3;\n      setButoonStatus(temp);\n    }\n  };\n\n  // logic for submitting answer\n  const handleAnswer = () => {\n    let temp = words.filter((element, index) => {\n      return buttonStatus[index] % 3 === 1;\n    });\n    let sol = true;\n    setText(\"Korrekt.\");\n    if (temp.length !== possibleTasks[taskNumber][2]) {\n      sol = false;\n      setText(\n        \"Falsch, die Kodierung beinhaltet noch nicht alle möglichen Wörter.\"\n      );\n    }\n    if (hammingDistance(temp) !== possibleTasks[taskNumber][1]) {\n      sol = false;\n      setText(\n        \"Falsch, die Kodierung erfüllt nicht die vorgegebenen Eigenschaften.\"\n      );\n    }\n    setTaskState(sol);\n  };\n\n  // node render\n  let nodeRender = [];\n  for (let i = 0; i < codeSize; ++i) {\n    nodeRender.push(\n      <button\n        className={\n          buttonStatus[i] === 0\n            ? toggle[i]\n              ? \"node0 nodeToggle \"\n              : \"node0\"\n            : buttonStatus[i] % 3 === 1\n            ? toggle[i]\n              ? \"node1 nodeToggle \"\n              : \"node1\"\n            : toggle[i]\n            ? \"node2 nodeToggle \"\n            : \"node2\"\n        }\n        disabled={taskState === true}\n        onMouseOver={() => handleToggle(correlationList[i])}\n        onMouseOut={() => handleToggle(correlationList[i])}\n        onClick={() => changeButtonStatus(i)}\n      >\n        {words[i]}\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"task\">\n      <h1>Aufgabe 7: Abstand in Kodierungen 2</h1>\n      <p>\n        Gegeben sind alle möglichen binären Codewörter der Länge 5. Wählen Sie\n        alle Wörter aus, so dass Ihre Auswahl an Wörter eine Kodierung ergeben,\n        welche folgende Eigenschaften erfüllt:\n      </p>\n      <h4>{possibleTasks[taskNumber][0]}</h4>\n      <p>\n        Ein Wort ist dabei bereits vorgegeben. Alle Wörter in Grün sind in Ihrer\n        Auswahl. Rote und blaue Wörter sind beide nicht in der Auswahl. Rot ist\n        nur eine visuelle Hilfe, z.B. können Sie alle Wörter rot markieren, die\n        Sie mit Sicherheit ausschliessen wollen. Es wird nur das gewertet, was\n        grün ist. Weiter werden immer alle Wörter hervorgehoben, welche einen\n        Abstand von 1 zum aktuellen Wort haben.\n      </p>\n      <div className=\"graphGrid\">\n        <div className=\"row\">{nodeRender[0]}</div>\n        <div className=\"row\">\n          {nodeRender[1]}\n          {nodeRender[2]}\n          {nodeRender[3]}\n          {nodeRender[4]}\n          {nodeRender[5]}\n        </div>\n        <div className=\"row\">\n          {nodeRender[6]}\n          {nodeRender[7]}\n          {nodeRender[8]}\n          {nodeRender[9]}\n          {nodeRender[10]}\n          {nodeRender[11]}\n          {nodeRender[12]}\n          {nodeRender[13]}\n          {nodeRender[14]}\n          {nodeRender[15]}\n        </div>\n        <div className=\"row\">\n          {nodeRender[16]}\n          {nodeRender[17]}\n          {nodeRender[18]}\n          {nodeRender[19]}\n          {nodeRender[20]}\n          {nodeRender[21]}\n          {nodeRender[22]}\n          {nodeRender[23]}\n          {nodeRender[24]}\n          {nodeRender[25]}\n        </div>\n        <div className=\"row\">\n          {nodeRender[26]}\n          {nodeRender[27]}\n          {nodeRender[28]}\n          {nodeRender[29]}\n          {nodeRender[30]}\n        </div>\n        <div className=\"row\">{nodeRender[31]}</div>\n        <button disabled={taskState === true} onClick={() => handleAnswer()}>\n          <h2>überprüfen</h2>\n        </button>\n        {taskState === false && <p style={{ color: \"red\" }}>{text}</p>}\n        {taskState === true && (\n          <div>\n            <p style={{ color: \"green\" }}>{text}</p>\n            <p>\n              Mit dieser Methode lässt sich einfach eine Kodierung finden,\n              welche eine bestimmte Eigenschaft erfüllen soll. Will man eine\n              Kodierung mit einem Abstand von k haben, so beginnt man bei einem\n              Wort und streicht alle Wörter weg, welche einen Abstand kleiner\n              als k zum Anfangswort haben. Dann sucht man sich ein neues Wort\n              aus und streicht von dort aus alle Wörter weg, welche einen\n              Abstand kleiner als k zu diesem Wort haben, usw., bis man keine\n              Wörter mehr streichen kann.\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Task7;\n","import React, { useState } from \"react\";\nimport randomBinaryString from \"../functions/randomBinaryString\";\nimport hammingDistance from \"../functions/hammingDistance\";\nimport ChecksumExercise from \"./ChecksumExercise\";\nimport MC from \"./MC\";\nimport errormaker from \"../functions/errormaker\";\n\n/*\nExercise Component\n\ngiven an encoding, the user must first determine the Hamming Distance of the given code\nand then answer some MC questions about its properties\n*/\n\n/*\ncallerFunction is a function used by the caller component after this exercise has been solved\n*/\nfunction EncodingDistanceExercise({ callerFunction }) {\n  // used if RNG fails;\n  const backupEncoding = [\n    [1, 1, 0, 1, 1, 1, 0, 1, 0, 0],\n    [0, 0, 1, 0, 0, 1, 0, 1, 0, 0],\n    [0, 0, 1, 0, 0, 0, 1, 0, 1, 1],\n  ];\n\n  // Length of the code words, between 5 and 9\n  const [codeLength] = useState(Math.floor(Math.random() * 5) + 5);\n\n  // Number of elements in the code, between 3 and 5\n  const [codeSize, setCodeSize] = useState(Math.floor(Math.random() * 3) + 3);\n\n  // the code\n  const [encoding, setEncoding] = useState(\n    Array.from({ length: codeSize }, () => {\n      return randomBinaryString(codeLength);\n    })\n  );\n\n  // hamming distance of the code\n  const [hd, setHD] = useState(hammingDistance(encoding));\n\n  // possible questions for the MC part\n  const props = [\n    \"bis zu 1 Fehler erkennen.\",\n    \"bis zu 1 Fehler korrigieren.\",\n    \"bis zu 2 Fehler erkennen.\",\n    \"bis zu 2 Fehler korrigieren.\",\n    \"bis zu 3 Fehler erkennen.\",\n    \"bis zu 4 Fehler erkennen.\",\n  ];\n\n  // answer key for MC part\n  const [answerKey, setAnswerKey] = useState(() => {\n    switch (hd) {\n      case 1:\n        return [false, false, false, false, false, false];\n      case 2:\n        return [true, false, false, false, false, false];\n      case 3:\n        return [true, true, true, false, false, false];\n      case 4:\n        return [true, true, true, false, true, false];\n      case 5:\n        return [true, true, true, true, true, true];\n      default:\n        return [false, false, false, false, false, false];\n    }\n  });\n\n  // selects 3 random properties of the possible MC questions\n  const [randomPicker] = useState(() => {\n    let sol = [0, 0, 0, 0, 0, 0, 0];\n    errormaker(sol, 3);\n    return sol;\n  });\n\n  // effective MC questions and effective answer key\n  let mcQuestions = [];\n  let mcAnswerkey = [];\n  for (let i = 0; i < props.length; ++i) {\n    if (randomPicker[i] === 1) {\n      mcQuestions.push(props[i]);\n      mcAnswerkey.push(answerKey[i]);\n    }\n  }\n\n  /*\n  if hd === 0, then we have duplicates in the code. We fall back to backup\n  in order to save computation time.\n  */\n  if (hd === 0) {\n    setEncoding(backupEncoding);\n    setHD(5);\n    setCodeSize(3);\n    setAnswerKey([true, true, true, true, true, true]);\n  }\n\n  const encodingRender = () => {\n    let sol = [];\n    for (let i = 0; i < codeSize; ++i) {\n      sol.push(<div key={i}>{encoding[i]}</div>);\n    }\n    return sol;\n  };\n\n  /*\n  variable for the task state\n  \"\": not answered yet\n  true: correctly answered\n  false: answered, but wrong\n  */\n  const [taskState, setTaskState] = useState(\"\");\n\n  return (\n    <div className=\"EDE\">\n      {encodingRender()}\n      <ChecksumExercise\n        onCorrect={() => setTaskState(true)}\n        onWorong={() => setTaskState(false)}\n        sequence={[\n          \"H\",\n          \"a\",\n          \"m\",\n          \"m\",\n          \"i\",\n          \"n\",\n          \"g\",\n          \" \",\n          \"A\",\n          \"b\",\n          \"s\",\n          \"t\",\n          \"a\",\n          \"n\",\n          \"d\",\n          \":\",\n        ]}\n        checksumFunction={(x) => {\n          return hd.toString();\n        }}\n      />\n      {taskState === false && (\n        <div>\n          <p>\n            Um fortfahren zu können, müssen Sie die korrekte Antwort eintragen.\n          </p>\n        </div>\n      )}\n      {taskState === true && (\n        <div>\n          <MC\n            callerFunction={callerFunction}\n            question={\"Mit dieser Kodierung kann man...\"}\n            options={mcQuestions}\n            answerKey={mcAnswerkey}\n            textOnCorrect={\"\"}\n            textOnWrong={\"Betrachten Sie nochmal die gegebenen Formeln.\"}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default EncodingDistanceExercise;\n","import React, { useState } from \"react\";\n\n/*\nA simple text exercise where the answer is of the form of a small input field from the user\n*/\n\n/*\ncallerFunction is a function used by the calling component after this question has been answered.\n\nquestion is the question to be solved.\n\ntext is the small text next to the input field.\n\nsolutions is an array of possible solutions. The input will be altered such that no white space exists,\nbut also everything in lowercase. If the solution were to be x+y, then the user might still input y+x, which\nshould still result in a correct answer. Hence, multiple solutions are possible.\n\ntextOnCorrect and textOnWrong are displayed depending on the correctness of the user's answer.\n*/\n\nfunction TextExercise({\n  callerFunction,\n  question,\n  text,\n  solutions,\n  textOnCorrect,\n  textOnWrong,\n}) {\n  // value of the input field of the user\n  const [value, setValue] = useState(\"\");\n\n  /*\n  variable for the task state\n  \"\": not answered yet\n  true: correctly answered\n  false: answered, but wrong\n  */\n  const [taskState, setTaskState] = useState(\"\");\n\n  // checks the answer given by the user\n  const checkInput = () => {\n    // removing whitespace and removing caps\n    let temp = value.replace(/\\s/g, \"\");\n    temp = temp.toLocaleLowerCase();\n    setValue(temp);\n\n    setTaskState(solutions.includes(temp));\n    callerFunction();\n  };\n\n  return (\n    <div className=\"example\">\n      <p>{question}</p>\n      <span>{text}</span>\n      <input\n        type=\"text\"\n        value={value}\n        disabled={taskState === true || taskState === false}\n        onChange={(event) => setValue(event.currentTarget.value)}\n      />\n      <button\n        onClick={checkInput}\n        disabled={taskState === true || taskState === false}\n      >\n        überprüfen\n      </button>\n      {taskState === false && (\n        <p>\n          <span style={{ color: \"red\" }}>Falsch</span>. {textOnWrong}\n        </p>\n      )}\n      {taskState === true && (\n        <p>\n          <span style={{ color: \"green\" }}>Korrekt</span>. {textOnCorrect}\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default TextExercise;\n","import React, { useState } from \"react\";\nimport EncodingDistanceExercise from \"../components/EncodingDistanceExercise\";\nimport { ReactComponent as G3 } from \"../graphics/Graph_3_T6.svg\";\nimport MC from \"../components/MC\";\nimport TextExercise from \"../components/TextExercise\";\n\n/*\nTask 8: Distances in Encodings\n\nTask A: questions about the formulas for k error detection and correction,\nwhat distance does one need for that.\n\nTask B: Given some random encodings, determine\n- the distance of the code\n- it's properties\n*/\n\nfunction Task8() {\n  // variable for showing if the subtasks in A have been answered or not\n  const [state1, setState1] = useState(false);\n  const [state2, setState2] = useState(false);\n\n  // number of simple tasks in B\n  const numberOfTasks = 4;\n\n  // if true, next task is revealed\n  const [task, setTask] = useState(() => {\n    let sol = Array(numberOfTasks + 1).fill(false);\n    sol[0] = true;\n    return sol;\n  });\n\n  const handleTask = (index) => {\n    let temp = [...task];\n    temp[index] = true;\n    setTask(temp);\n  };\n\n  const taskRender = [];\n  for (let i = 0; i < numberOfTasks; ++i) {\n    taskRender.push(\n      task[i] && (\n        <div className=\"EDE\" key={i}>\n          <EncodingDistanceExercise callerFunction={() => handleTask(i + 1)} />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"task\">\n      <h1>Aufgabe 8: Abstand in Kodierungen 3</h1>\n      <G3 />\n      <TextExercise\n        callerFunction={() => setState1(true)}\n        question={\n          \"Angenommen, wir wollen eine Kodierungen haben, die bis zu k Fehler erkennen kann. Wie gross muss der Abstand d midestends sein abhängig von k?\"\n        }\n        text={\"d =\"}\n        solutions={[\"k+1\", \"1+k\"]}\n        textOnCorrect={\"\"}\n        textOnWrong={\"Die richtige Lösung lautet: d = k+1\"}\n      />\n\n      {state1 && (\n        <MC\n          callerFunction={() => setState2(true)}\n          question={\n            \"Angenommen, wir wollen eine Kodierungen haben, die bis zu k Fehler korrigieren kann. Wie gross muss der Abstand d mindistends sein abhängig von k?\"\n          }\n          options={[\"d = 2k + 1\", \"d = 2k\", \"d = 2k - 1\"]}\n          answerKey={[true, false, false]}\n          textOnCorrect={\"\"}\n          textOnWrong={\" d = 2k + 1 wäre die richtige Lösung.\"}\n        />\n      )}\n      {state2 && (\n        <div>\n          <p>\n            Gegeben sind enige Kodierungen. Bestimmen Sie jeweils den Abstand\n            der Kodierung und deren Eigenschaften.\n          </p>\n          {taskRender}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Task8;\n","import React, { useState } from \"react\";\nimport randomBinaryString from \"../functions/randomBinaryString\";\nimport binaryCheckSymbol1 from \"../functions/binaryCheckSymbol1\";\n\n/*\nThis component always goes with the component squareExercise.\nGiven is a 4x4 square where each square has a digit 0 or 1.\nSome squares serve as control bits. In the exercise, the user\nis given squares containing exact one error that must be found.\n*/\n\nfunction SquareExeciseExample() {\n  // data of bit sequence\n  const [data] = useState(() => {\n    let temp = randomBinaryString(9);\n    temp.push(binaryCheckSymbol1([temp[0], temp[1], temp[2]]));\n    temp.push(binaryCheckSymbol1([temp[3], temp[4], temp[5]]));\n    temp.push(binaryCheckSymbol1([temp[6], temp[7], temp[8]]));\n    temp.push(binaryCheckSymbol1([temp[0], temp[3], temp[6]]));\n    temp.push(binaryCheckSymbol1([temp[1], temp[4], temp[7]]));\n    temp.push(binaryCheckSymbol1([temp[2], temp[5], temp[8]]));\n    temp.push(binaryCheckSymbol1(temp.slice(0, 9)));\n    return temp;\n  });\n\n  return (\n    <div>\n      <div className=\"squareRow\">\n        <button className=\"squareBit\">{data[12]}</button>\n        <button className=\"squareBit\">{data[13]}</button>\n        <button className=\"squareBit\">{data[14]}</button>\n        <button className=\"squareBit\">{data[15]}</button>\n      </div>\n      <div className=\"squareRow\">\n        <button className=\"squareBit\">{data[0]}</button>\n        <button className=\"squareBit\">{data[1]}</button>\n        <button className=\"squareBit\">{data[2]}</button>\n        <button className=\"squareBit\">{data[9]}</button>\n      </div>\n      <div className=\"squareRow\">\n        <button className=\"squareBit\">{data[3]}</button>\n        <button className=\"squareBit\">{data[4]}</button>\n        <button className=\"squareBit\">{data[5]}</button>\n        <button className=\"squareBit\">{data[10]}</button>\n      </div>\n      <div className=\"squareRow\">\n        <button className=\"squareBit\">{data[6]}</button>\n        <button className=\"squareBit\">{data[7]}</button>\n        <button className=\"squareBit\">{data[8]}</button>\n        <button className=\"squareBit\">{data[11]}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default SquareExeciseExample;\n","import React, { useState } from \"react\";\nimport randomBinaryString from \"../functions/randomBinaryString\";\nimport binaryCheckSymbol1 from \"../functions/binaryCheckSymbol1\";\nimport stringToArray from \"../functions/srtingToArray\";\nimport errormaker from \"../functions/errormaker\";\n\n/*\nThis component always goes with the component squareExerciseExample.\nGiven is a 4x4 square where each square has a digit 0 or 1.\nSome squares serve as control bits. The number of ones is always even\nin each row and column. In the exercise, the user is given squares containing \nexact one error that must be found.\n*/\n\n/*\nonWorng and onCorrect are methods of the caller Component. These are used to\nreveal certain parts of the Task, i.e. the solution, if to many wrong answers\nhave been given, or the next subtask, if all answers are correct.\n*/\nfunction SquareExecise({ onWorong, onCorrect }) {\n  /* \n  used for evaluating the given answer,\n  the correlation between the bits,\n  they are correlated as in a rectangle, where each row and column\n  has an even amount of ones.\n  */\n  const correlationList = [\n    [0, 1, 2, 9, 0, 3, 6, 12],\n    [0, 1, 2, 9, 1, 4, 7, 13],\n    [0, 1, 2, 9, 2, 5, 8, 14],\n    [3, 4, 5, 10, 0, 3, 6, 12],\n    [3, 4, 5, 10, 1, 4, 7, 13],\n    [3, 4, 5, 10, 2, 5, 8, 14],\n    [6, 7, 8, 11, 0, 3, 6, 12],\n    [6, 7, 8, 11, 1, 4, 7, 13],\n    [6, 7, 8, 11, 2, 5, 8, 14],\n    [0, 1, 2, 9, 9, 10, 11, 15],\n    [3, 4, 5, 10, 9, 10, 11, 15],\n    [6, 7, 8, 11, 9, 10, 11, 15],\n    [12, 13, 14, 15, 0, 3, 6, 12],\n    [12, 13, 14, 15, 1, 4, 7, 13],\n    [12, 13, 14, 15, 2, 5, 8, 14],\n    [12, 13, 14, 15, 9, 10, 11, 15],\n  ];\n\n  // indicator for which button has been pressed the last\n  const [pressed, setPressed] = useState(Array(16).fill(false));\n\n  // data of bit sequence with one error\n  const [data] = useState(() => {\n    let temp1 = randomBinaryString(9);\n\n    let temp2 = [];\n    temp2.push(binaryCheckSymbol1([temp1[0], temp1[1], temp1[2]]));\n    temp2.push(binaryCheckSymbol1([temp1[3], temp1[4], temp1[5]]));\n    temp2.push(binaryCheckSymbol1([temp1[6], temp1[7], temp1[8]]));\n    temp2.push(binaryCheckSymbol1([temp1[0], temp1[3], temp1[6]]));\n    temp2.push(binaryCheckSymbol1([temp1[1], temp1[4], temp1[7]]));\n    temp2.push(binaryCheckSymbol1([temp1[2], temp1[5], temp1[8]]));\n    temp2.push(binaryCheckSymbol1(temp1));\n\n    temp1.push(...stringToArray(temp2.join(\"\")));\n    errormaker(temp1, 1);\n\n    return temp1;\n  });\n\n  /*\n  variable for the task state\n  \"\": not answered yet\n  true: correctly answered\n  false: answered, but wrong\n  */\n  const [taskState, setTaskState] = useState(\"\");\n\n  // checks the answer given by the user\n  const checkResult = (arr, index) => {\n    // changing the last pressed button\n    let tempPressed = Array(16).fill(false);\n    tempPressed[index] = true;\n    setPressed(tempPressed);\n\n    let arr1 = [];\n    let arr2 = [];\n\n    // separating column and row\n    for (let i = 0; i < 4; ++i) {\n      arr1[i] = data[arr[i]];\n      arr2[i] = data[arr[i + 4]];\n    }\n\n    // looking for the row and column with both an odd amount of ones\n    let temp =\n      binaryCheckSymbol1(arr1) === \"1\" && binaryCheckSymbol1(arr2) === \"1\";\n\n    setTaskState(temp);\n\n    if (temp === true) {\n      onCorrect();\n    } else if (temp === false) {\n      onWorong();\n    }\n  };\n\n  // for rendering the buttons\n  let renderButtons = [];\n  for (let index = 0; index < data.length; index++) {\n    renderButtons.push(\n      <button\n        className={pressed[index] ? \"squareBit1 \" : \"squareBit\"}\n        disabled={taskState}\n        onClick={() => checkResult(correlationList[index], index)}\n      >\n        {data[index]}\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"example1\">\n      <div className=\"squareRow\">\n        {renderButtons[12]}\n        {renderButtons[13]}\n        {renderButtons[14]}\n        {renderButtons[15]}\n      </div>\n      <div className=\"squareRow\">\n        {renderButtons[0]}\n        {renderButtons[1]}\n        {renderButtons[2]}\n        {renderButtons[9]}\n      </div>\n      <div className=\"squareRow\">\n        {renderButtons[3]}\n        {renderButtons[4]}\n        {renderButtons[5]}\n        {renderButtons[10]}\n      </div>\n      <div className=\"squareRow\">\n        {renderButtons[6]}\n        {renderButtons[7]}\n        {renderButtons[8]}\n        {renderButtons[11]}\n      </div>\n      {taskState === false && <h3 style={{ color: \"red\" }}>Falsch</h3>}\n      {taskState && <h3 style={{ color: \"green\" }}>Korrekt</h3>}\n    </div>\n  );\n}\n\nexport default SquareExecise;\n","var _clipPath, _g;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgSquare0T9 = function SvgSquare0T9(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0.0 0.0 960.0 540.0\",\n    fill: \"none\",\n    stroke: \"none\",\n    strokeLinecap: \"square\",\n    strokeMiterlimit: 10,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _clipPath || (_clipPath = /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"g1128c8048ff_0_0.0\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0l0 -540.0z\",\n    clipRule: \"nonzero\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#g1128c8048ff_0_0.0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffffff\",\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#eeeeee\",\n    d: \"m170.44095 3.448819l619.11816 0l0 533.1024l-619.11816 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m170.44095 3.448819l619.11816 0l0 533.1024l-619.11816 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m480.0 3.448819l0 533.1024\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m480.0 3.448819l0 533.1024\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m170.44095 270.0l619.11816 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m170.44095 270.0l619.11816 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m323.19946 3.448819l0 533.1024\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m323.19946 3.448819l0 533.1024\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m632.55646 3.448819l0 533.1024\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m632.55646 3.448819l0 533.1024\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m170.44095 134.0l619.11816 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m170.44095 134.0l619.11816 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m170.44095 406.0l619.11816 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m170.44095 406.0l619.11816 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m174.61679 7.102362l145.10236 0l0 122.173225l-145.10236 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m247.36615 71.30898q-0.21875 2.90625 -2.15625 4.578125q-1.9375 1.671875 -5.09375 1.671875q-3.4687347 0 -5.4531097 -2.328125q-1.984375 -2.34375 -1.984375 -6.40625l0 -1.09375q0 -2.609375 0.90625 -4.578125q0.921875 -1.984375 2.625 -3.03125q1.703125 -1.0625 3.9531097 -1.0625q3.109375 0 5.015625 1.671875q1.90625 1.65625 2.203125 4.6875l-3.703125 0q-0.140625 -1.75 -0.984375 -2.53125q-0.828125 -0.796875 -2.53125 -0.796875q-1.8593597 0 -2.7812347 1.34375q-0.921875 1.328125 -0.9375 4.125l0 1.359375q0 2.90625 0.875 4.265625q0.890625 1.34375 2.7968597 1.34375q1.71875 0 2.5625 -0.78125q0.84375 -0.796875 0.96875 -2.4375l3.71875 0zm12.618988 -0.78125l2.046875 0l0 2.890625l-2.046875 0l0 3.890625l-3.578125 0l0 -3.890625l-7.375 0l-0.15625 -2.25l7.5 -11.859375l3.609375 0l0 11.21875zm-7.5625 0l3.984375 0l0 -6.359375l-0.234375 0.421875l-3.75 5.9375z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m327.30975 7.102362l148.50394 0l0 122.173225l-148.50394 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m401.7599 71.30898q-0.21875 2.90625 -2.15625 4.578125q-1.9375 1.671875 -5.09375 1.671875q-3.46875 0 -5.453125 -2.328125q-1.984375 -2.34375 -1.984375 -6.40625l0 -1.09375q0 -2.609375 0.90625 -4.578125q0.921875 -1.984375 2.625 -3.03125q1.703125 -1.0625 3.953125 -1.0625q3.109375 0 5.015625 1.671875q1.90625 1.65625 2.203125 4.6875l-3.703125 0q-0.140625 -1.75 -0.984375 -2.53125q-0.828125 -0.796875 -2.53125 -0.796875q-1.859375 0 -2.78125 1.34375q-0.921875 1.328125 -0.9375 4.125l0 1.359375q0 2.90625 0.875 4.265625q0.890625 1.34375 2.796875 1.34375q1.71875 0 2.5625 -0.78125q0.84375 -0.796875 0.96875 -2.4375l3.71875 0zm2.572113 -2.859375l1.046875 -9.140625l10.09375 0l0 2.96875l-7.171875 0l-0.4375 3.875q1.265625 -0.671875 2.703125 -0.671875q2.578125 0 4.03125 1.59375q1.46875 1.59375 1.46875 4.453125q0 1.75 -0.734375 3.125q-0.734375 1.375 -2.109375 2.140625q-1.375 0.765625 -3.25 0.765625q-1.625 0 -3.03125 -0.65625q-1.390625 -0.671875 -2.203125 -1.859375q-0.8125 -1.203125 -0.859375 -2.75l3.53125 0q0.125 1.125 0.796875 1.75q0.671875 0.625 1.765625 0.625q1.203125 0 1.859375 -0.859375q0.65625 -0.875 0.65625 -2.46875q0 -1.53125 -0.765625 -2.34375q-0.75 -0.828125 -2.125 -0.828125q-1.28125 0 -2.0625 0.671875l-0.359375 0.3125l-2.84375 -0.703125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m174.61679 135.10236l145.10236 0l0 131.68506l-145.10236 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m233.4296 210.06488l0 -18.0l6.3124847 0q3.265625 0 4.953125 1.25q1.703125 1.25 1.703125 3.671875q0 1.328125 -0.6875 2.34375q-0.671875 1.0 -1.875 1.46875q1.375 0.34375 2.171875 1.40625q0.796875 1.046875 0.796875 2.5625q0 2.59375 -1.65625 3.9375q-1.65625 1.328125 -4.71875 1.359375l-6.9999847 0zm3.703125 -7.84375l0 4.859375l3.1874847 0q1.3125 0 2.046875 -0.625q0.734375 -0.625 0.734375 -1.71875q0 -2.46875 -2.5625 -2.515625l-3.4062347 0zm0 -2.625l2.7499847 0q2.8125 -0.046875 2.8125 -2.234375q0 -1.21875 -0.71875 -1.75q-0.703125 -0.546875 -2.234375 -0.546875l-2.6093597 0l0 4.53125zm20.757751 10.46875l-3.5781403 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.4531403 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m327.30972 135.10236l148.50394 0l0 131.68506l-148.50394 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m387.8233 210.06488l0 -18.0l6.3125 0q3.265625 0 4.953125 1.25q1.703125 1.25 1.703125 3.671875q0 1.328125 -0.6875 2.34375q-0.671875 1.0 -1.875 1.46875q1.375 0.34375 2.171875 1.40625q0.796875 1.046875 0.796875 2.5625q0 2.59375 -1.65625 3.9375q-1.65625 1.328125 -4.71875 1.359375l-7.0 0zm3.703125 -7.84375l0 4.859375l3.1875 0q1.3125 0 2.046875 -0.625q0.734375 -0.625 0.734375 -1.71875q0 -2.46875 -2.5625 -2.515625l-3.40625 0zm0 -2.625l2.75 0q2.8125 -0.046875 2.8125 -2.234375q0 -1.21875 -0.71875 -1.75q-0.703125 -0.546875 -2.234375 -0.546875l-2.609375 0l0 4.53125zm24.414001 10.46875l-12.34375 0l0 -2.453125l5.828125 -6.203125q1.203125 -1.3125 1.78125 -2.28125q0.578125 -0.984375 0.578125 -1.859375q0 -1.203125 -0.609375 -1.890625q-0.609375 -0.6875 -1.734375 -0.6875q-1.21875 0 -1.921875 0.84375q-0.6875 0.828125 -0.6875 2.1875l-3.59375 0q0 -1.640625 0.78125 -3.0q0.796875 -1.359375 2.234375 -2.125q1.4375 -0.78125 3.25 -0.78125q2.78125 0 4.3125 1.34375q1.546875 1.328125 1.546875 3.765625q0 1.328125 -0.703125 2.71875q-0.6875 1.375 -2.359375 3.21875l-4.09375 4.328125l7.734375 0l0 2.875z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m483.72702 7.102362l145.10239 0l0 122.173225l-145.10239 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m556.4764 71.30898q-0.21875 2.90625 -2.15625 4.578125q-1.9375 1.671875 -5.09375 1.671875q-3.46875 0 -5.453125 -2.328125q-1.984375 -2.34375 -1.984375 -6.40625l0 -1.09375q0 -2.609375 0.90625 -4.578125q0.921875 -1.984375 2.625 -3.03125q1.703125 -1.0625 3.953125 -1.0625q3.109375 0 5.015625 1.671875q1.90625 1.65625 2.203125 4.6875l-3.703125 0q-0.140625 -1.75 -0.984375 -2.53125q-0.828125 -0.796875 -2.53125 -0.796875q-1.859375 0 -2.78125 1.34375q-0.921875 1.328125 -0.9375 4.125l0 1.359375q0 2.90625 0.875 4.265625q0.890625 1.34375 2.796875 1.34375q1.71875 0 2.5625 -0.78125q0.84375 -0.796875 0.96875 -2.4375l3.71875 0zm11.744019 -12.1875l0 2.9375l-0.34375 0q-2.421875 0.03125 -3.90625 1.265625q-1.484375 1.21875 -1.78125 3.390625q1.4375 -1.453125 3.625 -1.453125q2.359375 0 3.734375 1.6875q1.390625 1.671875 1.390625 4.421875q0 1.75 -0.765625 3.1875q-0.75 1.421875 -2.140625 2.21875q-1.390625 0.78125 -3.15625 0.78125q-2.84375 0 -4.59375 -1.96875q-1.75 -1.984375 -1.75 -5.296875l0 -1.28125q0 -2.9375 1.109375 -5.171875q1.109375 -2.25 3.171875 -3.484375q2.078125 -1.234375 4.8125 -1.234375l0.59375 0zm-3.484375 9.015625q-0.875 0 -1.578125 0.453125q-0.703125 0.4375 -1.03125 1.1875l0 1.09375q0 1.78125 0.703125 2.796875q0.703125 1.0 1.96875 1.0q1.15625 0 1.859375 -0.90625q0.71875 -0.90625 0.71875 -2.359375q0 -1.46875 -0.71875 -2.359375q-0.71875 -0.90625 -1.921875 -0.90625z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m635.82416 7.102362l148.50397 0l0 122.173225l-148.50397 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m710.27435 71.30898q-0.21875 2.90625 -2.15625 4.578125q-1.9375 1.671875 -5.09375 1.671875q-3.46875 0 -5.453125 -2.328125q-1.984375 -2.34375 -1.984375 -6.40625l0 -1.09375q0 -2.609375 0.90625 -4.578125q0.921875 -1.984375 2.625 -3.03125q1.703125 -1.0625 3.953125 -1.0625q3.109375 0 5.015625 1.671875q1.90625 1.65625 2.203125 4.6875l-3.703125 0q-0.140625 -1.75 -0.984375 -2.53125q-0.828125 -0.796875 -2.53125 -0.796875q-1.859375 0 -2.78125 1.34375q-0.921875 1.328125 -0.9375 4.125l0 1.359375q0 2.90625 0.875 4.265625q0.890625 1.34375 2.796875 1.34375q1.71875 0 2.5625 -0.78125q0.84375 -0.796875 0.96875 -2.4375l3.71875 0zm14.2908325 -10.0l-6.96875 16.0l-3.765625 0l6.96875 -15.109375l-8.953125 0l0 -2.890625l12.71875 0l0 2.0z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m483.7257 136.15749l145.10236 0l0 131.68504l-145.10236 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m542.5385 211.12001l0 -18.0l6.3125 0q3.265625 0 4.953125 1.25q1.703125 1.25 1.703125 3.671875q0 1.328125 -0.6875 2.34375q-0.671875 1.0 -1.875 1.46875q1.375 0.34375 2.171875 1.40625q0.796875 1.046875 0.796875 2.5625q0 2.59375 -1.65625 3.9375q-1.65625 1.328125 -4.71875 1.359375l-7.0 0zm3.703125 -7.84375l0 4.859375l3.1875 0q1.3125 0 2.046875 -0.625q0.734375 -0.625 0.734375 -1.71875q0 -2.46875 -2.5625 -2.515625l-3.40625 0zm0 -2.625l2.75 0q2.8125 -0.046875 2.8125 -2.234375q0 -1.21875 -0.71875 -1.75q-0.703125 -0.546875 -2.234375 -0.546875l-2.609375 0l0 4.53125zm15.710876 -0.125l1.90625 0q1.359375 0 2.015625 -0.671875q0.65625 -0.6875 0.65625 -1.8125q0 -1.078125 -0.65625 -1.6875q-0.640625 -0.609375 -1.78125 -0.609375q-1.03125 0 -1.71875 0.5625q-0.6875 0.5625 -0.6875 1.46875l-3.578125 0q0 -1.40625 0.75 -2.53125q0.765625 -1.125 2.125 -1.75q1.375 -0.625 3.015625 -0.625q2.859375 0 4.484375 1.375q1.625 1.359375 1.625 3.75q0 1.234375 -0.765625 2.28125q-0.75 1.03125 -1.96875 1.59375q1.515625 0.546875 2.265625 1.640625q0.75 1.078125 0.75 2.5625q0 2.40625 -1.75 3.859375q-1.75 1.4375 -4.640625 1.4375q-2.6875 0 -4.40625 -1.421875q-1.703125 -1.421875 -1.703125 -3.765625l3.5625 0q0 1.015625 0.765625 1.65625q0.765625 0.640625 1.875 0.640625q1.28125 0 2.0 -0.671875q0.71875 -0.671875 0.71875 -1.78125q0 -2.703125 -2.96875 -2.703125l-1.890625 0l0 -2.796875z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m636.2835 136.15749l148.5039 0l0 131.68504l-148.5039 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m710.73364 205.12001q-0.21875 2.90625 -2.15625 4.578125q-1.9375 1.671875 -5.09375 1.671875q-3.46875 0 -5.453125 -2.328125q-1.984375 -2.34375 -1.984375 -6.40625l0 -1.09375q0 -2.609375 0.90625 -4.578125q0.921875 -1.984375 2.625 -3.03125q1.703125 -1.0625 3.953125 -1.0625q3.109375 0 5.015625 1.671875q1.90625 1.65625 2.203125 4.6875l-3.703125 0q-0.140625 -1.75 -0.984375 -2.53125q-0.828125 -0.796875 -2.53125 -0.796875q-1.859375 0 -2.78125 1.34375q-0.921875 1.328125 -0.9375 4.125l0 1.359375q0 2.90625 0.875 4.265625q0.890625 1.34375 2.796875 1.34375q1.71875 0 2.5625 -0.78125q0.84375 -0.796875 0.96875 -2.4375l3.71875 0zm10.7283325 6.0l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m174.91602 274.7244l145.10236 0l0 128.0l-145.10236 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m233.7288 347.8444l0 -18.0l6.3125 0q3.265625 0 4.953125 1.25q1.703125 1.25 1.703125 3.671875q0 1.328125 -0.6875 2.34375q-0.671875 1.0 -1.875 1.46875q1.375 0.34375 2.171875 1.40625q0.796875 1.046875 0.796875 2.5625q0 2.59375 -1.65625 3.9375q-1.65625 1.328125 -4.71875 1.359375l-7.0 0zm3.703125 -7.84375l0 4.859375l3.1875 0q1.3125 0 2.046875 -0.625q0.734375 -0.625 0.734375 -1.71875q0 -2.46875 -2.5625 -2.515625l-3.40625 0zm0 -2.625l2.75 0q2.8125 -0.046875 2.8125 -2.234375q0 -1.21875 -0.71875 -1.75q-0.703125 -0.546875 -2.234375 -0.546875l-2.609375 0l0 4.53125zm22.648361 3.6875l2.046875 0l0 2.890625l-2.046875 0l0 3.890625l-3.578125 0l0 -3.890625l-7.3749847 0l-0.15625 -2.25l7.4999847 -11.859375l3.609375 0l0 11.21875zm-7.5624847 0l3.9843597 0l0 -6.359375l-0.234375 0.421875l-3.7499847 5.9375z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m327.60892 274.7244l148.50394 0l0 128.0l-148.50394 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m388.1225 347.8444l0 -18.0l6.3125 0q3.265625 0 4.953125 1.25q1.703125 1.25 1.703125 3.671875q0 1.328125 -0.6875 2.34375q-0.671875 1.0 -1.875 1.46875q1.375 0.34375 2.171875 1.40625q0.796875 1.046875 0.796875 2.5625q0 2.59375 -1.65625 3.9375q-1.65625 1.328125 -4.71875 1.359375l-7.0 0zm3.703125 -7.84375l0 4.859375l3.1875 0q1.3125 0 2.046875 -0.625q0.734375 -0.625 0.734375 -1.71875q0 -2.46875 -2.5625 -2.515625l-3.40625 0zm0 -2.625l2.75 0q2.8125 -0.046875 2.8125 -2.234375q0 -1.21875 -0.71875 -1.75q-0.703125 -0.546875 -2.234375 -0.546875l-2.609375 0l0 4.53125zm12.601501 1.609375l1.046875 -9.140625l10.09375 0l0 2.96875l-7.171875 0l-0.4375 3.875q1.265625 -0.671875 2.703125 -0.671875q2.578125 0 4.03125 1.59375q1.46875 1.59375 1.46875 4.453125q0 1.75 -0.734375 3.125q-0.734375 1.375 -2.109375 2.140625q-1.375 0.765625 -3.25 0.765625q-1.625 0 -3.03125 -0.65625q-1.390625 -0.671875 -2.203125 -1.859375q-0.8125 -1.203125 -0.859375 -2.75l3.53125 0q0.125 1.125 0.796875 1.75q0.671875 0.625 1.765625 0.625q1.203125 0 1.859375 -0.859375q0.65625 -0.875 0.65625 -2.46875q0 -1.53125 -0.765625 -2.34375q-0.75 -0.828125 -2.125 -0.828125q-1.28125 0 -2.0625 0.671875l-0.359375 0.3125l-2.84375 -0.703125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m173.68767 409.2756l145.10237 0l0 122.17319l-145.10237 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m232.50046 479.4822l0 -18.0l6.3125 0q3.265625 0 4.953125 1.25q1.703125 1.25 1.703125 3.671875q0 1.328125 -0.6875 2.34375q-0.671875 1.0 -1.875 1.46875q1.375 0.34375 2.171875 1.40625q0.796875 1.046875 0.796875 2.5625q0 2.59375 -1.65625 3.9375q-1.65625 1.328125 -4.71875 1.359375l-7.0 0zm3.703125 -7.84375l0 4.859375l3.1875 0q1.3125 0 2.046875 -0.625q0.734375 -0.625 0.734375 -1.71875q0 -2.46875 -2.5625 -2.515625l-3.40625 0zm0 -2.625l2.75 0q2.8125 -0.046875 2.8125 -2.234375q0 -1.21875 -0.71875 -1.75q-0.703125 -0.546875 -2.234375 -0.546875l-2.609375 0l0 4.53125zm24.320251 -5.53125l-6.96875 16.0l-3.765625 0l6.96875 -15.109375l-8.953125 0l0 -2.890625l12.71875 0l0 2.0z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m327.3491 410.7244l148.50394 0l0 120.724396l-148.50394 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m387.86267 480.2066l0 -18.0l6.3125 0q3.265625 0 4.953125 1.25q1.703125 1.25 1.703125 3.671875q0 1.328125 -0.6875 2.34375q-0.671875 1.0 -1.875 1.46875q1.375 0.34375 2.171875 1.40625q0.796875 1.046875 0.796875 2.5625q0 2.59375 -1.65625 3.9375q-1.65625 1.328125 -4.71875 1.359375l-7.0 0zm3.703125 -7.84375l0 4.859375l3.1875 0q1.3125 0 2.046875 -0.625q0.734375 -0.625 0.734375 -1.71875q0 -2.46875 -2.5625 -2.515625l-3.40625 0zm0 -2.625l2.75 0q2.8125 -0.046875 2.8125 -2.234375q0 -1.21875 -0.71875 -1.75q-0.703125 -0.546875 -2.234375 -0.546875l-2.609375 0l0 4.53125zm23.804626 -2.75q0 1.3125 -0.65625 2.328125q-0.640625 1.015625 -1.796875 1.609375q1.3125 0.640625 2.078125 1.75q0.765625 1.09375 0.765625 2.59375q0 2.40625 -1.640625 3.796875q-1.625 1.390625 -4.4375 1.390625q-2.796875 0 -4.453125 -1.390625q-1.640625 -1.40625 -1.640625 -3.796875q0 -1.5 0.765625 -2.609375q0.765625 -1.109375 2.0625 -1.734375q-1.140625 -0.59375 -1.796875 -1.609375q-0.640625 -1.015625 -0.640625 -2.328125q0 -2.296875 1.53125 -3.65625q1.53125 -1.375 4.171875 -1.375q2.609375 0 4.140625 1.359375q1.546875 1.34375 1.546875 3.671875zm-3.203125 8.03125q0 -1.1875 -0.6875 -1.890625q-0.671875 -0.703125 -1.8125 -0.703125q-1.140625 0 -1.828125 0.703125q-0.671875 0.703125 -0.671875 1.890625q0 1.140625 0.65625 1.84375q0.671875 0.703125 1.859375 0.703125q1.171875 0 1.828125 -0.671875q0.65625 -0.6875 0.65625 -1.875zm-0.359375 -7.859375q0 -1.046875 -0.5625 -1.6875q-0.546875 -0.640625 -1.5625 -0.640625q-1.0 0 -1.5625 0.625q-0.5625 0.609375 -0.5625 1.703125q0 1.078125 0.5625 1.734375q0.5625 0.65625 1.5625 0.65625q1.015625 0 1.5625 -0.65625q0.5625 -0.65625 0.5625 -1.734375z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m484.0262 274.7244l145.10239 0l0 128.0l-145.10239 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m542.839 347.8444l0 -18.0l6.3125 0q3.265625 0 4.953125 1.25q1.703125 1.25 1.703125 3.671875q0 1.328125 -0.6875 2.34375q-0.671875 1.0 -1.875 1.46875q1.375 0.34375 2.171875 1.40625q0.796875 1.046875 0.796875 2.5625q0 2.59375 -1.65625 3.9375q-1.65625 1.328125 -4.71875 1.359375l-7.0 0zm3.703125 -7.84375l0 4.859375l3.1875 0q1.3125 0 2.046875 -0.625q0.734375 -0.625 0.734375 -1.71875q0 -2.46875 -2.5625 -2.515625l-3.40625 0zm0 -2.625l2.75 0q2.8125 -0.046875 2.8125 -2.234375q0 -1.21875 -0.71875 -1.75q-0.703125 -0.546875 -2.234375 -0.546875l-2.609375 0l0 4.53125zm21.773376 -7.71875l0 2.9375l-0.34375 0q-2.421875 0.03125 -3.90625 1.265625q-1.484375 1.21875 -1.78125 3.390625q1.4375 -1.453125 3.625 -1.453125q2.359375 0 3.734375 1.6875q1.390625 1.671875 1.390625 4.421875q0 1.75 -0.765625 3.1875q-0.75 1.421875 -2.140625 2.21875q-1.390625 0.78125 -3.15625 0.78125q-2.84375 0 -4.59375 -1.96875q-1.75 -1.984375 -1.75 -5.296875l0 -1.28125q0 -2.9375 1.109375 -5.171875q1.109375 -2.25 3.171875 -3.484375q2.078125 -1.234375 4.8125 -1.234375l0.59375 0zm-3.484375 9.015625q-0.875 0 -1.578125 0.453125q-0.703125 0.4375 -1.03125 1.1875l0 1.09375q0 1.78125 0.703125 2.796875q0.703125 1.0 1.96875 1.0q1.15625 0 1.859375 -0.90625q0.71875 -0.90625 0.71875 -2.359375q0 -1.46875 -0.71875 -2.359375q-0.71875 -0.90625 -1.921875 -0.90625z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m636.12335 274.7244l148.50397 0l0 128.0l-148.50397 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m710.5735 341.8444q-0.21875 2.90625 -2.15625 4.578125q-1.9375 1.671875 -5.09375 1.671875q-3.46875 0 -5.453125 -2.328125q-1.984375 -2.34375 -1.984375 -6.40625l0 -1.09375q0 -2.609375 0.90625 -4.578125q0.921875 -1.984375 2.625 -3.03125q1.703125 -1.0625 3.953125 -1.0625q3.109375 0 5.015625 1.671875q1.90625 1.65625 2.203125 4.6875l-3.703125 0q-0.140625 -1.75 -0.984375 -2.53125q-0.828125 -0.796875 -2.53125 -0.796875q-1.859375 0 -2.78125 1.34375q-0.921875 1.328125 -0.9375 4.125l0 1.359375q0 2.90625 0.875 4.265625q0.890625 1.34375 2.796875 1.34375q1.71875 0 2.5625 -0.78125q0.84375 -0.796875 0.96875 -2.4375l3.71875 0zm14.384644 6.0l-12.34375 0l0 -2.453125l5.828125 -6.203125q1.203125 -1.3125 1.78125 -2.28125q0.578125 -0.984375 0.578125 -1.859375q0 -1.203125 -0.609375 -1.890625q-0.609375 -0.6875 -1.734375 -0.6875q-1.21875 0 -1.921875 0.84375q-0.6875 0.828125 -0.6875 2.1875l-3.59375 0q0 -1.640625 0.78125 -3.0q0.796875 -1.359375 2.234375 -2.125q1.4375 -0.78125 3.25 -0.78125q2.78125 0 4.3125 1.34375q1.546875 1.328125 1.546875 3.765625q0 1.328125 -0.703125 2.71875q-0.6875 1.375 -2.359375 3.21875l-4.09375 4.328125l7.734375 0l0 2.875z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m483.72702 410.7244l145.10239 0l0 120.724396l-145.10239 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m542.53986 480.2066l0 -18.0l6.312439 0q3.265625 0 4.953125 1.25q1.703125 1.25 1.703125 3.671875q0 1.328125 -0.6875 2.34375q-0.671875 1.0 -1.875 1.46875q1.375 0.34375 2.171875 1.40625q0.796875 1.046875 0.796875 2.5625q0 2.59375 -1.65625 3.9375q-1.65625 1.328125 -4.71875 1.359375l-6.999939 0zm3.703125 -7.84375l0 4.859375l3.187439 0q1.3125 0 2.046875 -0.625q0.734375 -0.625 0.734375 -1.71875q0 -2.46875 -2.5625 -2.515625l-3.406189 0zm0 -2.625l2.749939 0q2.8125 -0.046875 2.8125 -2.234375q0 -1.21875 -0.71875 -1.75q-0.703125 -0.546875 -2.234375 -0.546875l-2.609314 0l0 4.53125zm20.429565 3.265625q-1.390625 1.375 -3.265625 1.375q-2.375 0 -3.8125 -1.640625q-1.4375 -1.640625 -1.4375 -4.421875q0 -1.765625 0.765625 -3.234375q0.78125 -1.484375 2.15625 -2.296875q1.390625 -0.828125 3.125 -0.828125q1.78125 0 3.15625 0.890625q1.390625 0.890625 2.15625 2.5625q0.78125 1.65625 0.78125 3.8125l0 1.328125q0 4.5 -2.234375 7.078125q-2.234375 2.5625 -6.34375 2.734375l-0.875 0.015625l0 -2.984375l0.78125 0q4.671875 -0.21875 5.046875 -4.390625zm-2.375 -1.359375q0.859375 0 1.484375 -0.4375q0.625 -0.453125 0.953125 -1.078125l0 -1.46875q0 -1.828125 -0.703125 -2.828125q-0.6875 -1.0 -1.84375 -1.0q-1.078125 0 -1.78125 0.984375q-0.6875 0.984375 -0.6875 2.46875q0 1.46875 0.671875 2.421875q0.671875 0.9375 1.90625 0.9375z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m636.28345 410.7244l148.50397 0l0 122.17325l-148.50397 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m710.73364 474.93103q-0.21875 2.90625 -2.15625 4.578125q-1.9375 1.671875 -5.09375 1.671875q-3.46875 0 -5.453125 -2.328125q-1.984375 -2.34375 -1.984375 -6.40625l0 -1.09375q0 -2.609375 0.90625 -4.578125q0.921875 -1.984375 2.625 -3.03125q1.703125 -1.0625 3.953125 -1.0625q3.109375 0 5.015625 1.671875q1.90625 1.65625 2.203125 4.6875l-3.703125 0q-0.140625 -1.75 -0.984375 -2.53125q-0.828125 -0.796875 -2.53125 -0.796875q-1.859375 0 -2.78125 1.34375q-0.921875 1.328125 -0.9375 4.125l0 1.359375q0 2.90625 0.875 4.265625q0.890625 1.34375 2.796875 1.34375q1.71875 0 2.5625 -0.78125q0.84375 -0.796875 0.96875 -2.4375l3.71875 0zm5.6814575 -4.59375l1.90625 0q1.359375 0 2.015625 -0.671875q0.65625 -0.6875 0.65625 -1.8125q0 -1.078125 -0.65625 -1.6875q-0.640625 -0.609375 -1.78125 -0.609375q-1.03125 0 -1.71875 0.5625q-0.6875 0.5625 -0.6875 1.46875l-3.578125 0q0 -1.40625 0.75 -2.53125q0.765625 -1.125 2.125 -1.75q1.375 -0.625 3.015625 -0.625q2.859375 0 4.484375 1.375q1.625 1.359375 1.625 3.75q0 1.234375 -0.765625 2.28125q-0.75 1.03125 -1.96875 1.59375q1.515625 0.546875 2.265625 1.640625q0.75 1.078125 0.75 2.5625q0 2.40625 -1.75 3.859375q-1.75 1.4375 -4.640625 1.4375q-2.6875 0 -4.40625 -1.421875q-1.703125 -1.421875 -1.703125 -3.765625l3.5625 0q0 1.015625 0.765625 1.65625q0.765625 0.640625 1.875 0.640625q1.28125 0 2.0 -0.671875q0.71875 -0.671875 0.71875 -1.78125q0 -2.703125 -2.96875 -2.703125l-1.890625 0l0 -2.796875z\",\n    fillRule: \"nonzero\"\n  }))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSquare0T9, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Square_0_T9.a8058298.svg\";\nexport { ForwardRef as ReactComponent };","var _clipPath, _g;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgSquare1T9 = function SvgSquare1T9(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0.0 0.0 960.0 540.0\",\n    fill: \"none\",\n    stroke: \"none\",\n    strokeLinecap: \"square\",\n    strokeMiterlimit: 10,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _clipPath || (_clipPath = /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"g1128c8048ff_0_82.0\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0l0 -540.0z\",\n    clipRule: \"nonzero\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#g1128c8048ff_0_82.0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffffff\",\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#eeeeee\",\n    d: \"m170.44095 3.448819l619.11816 0l0 533.1024l-619.11816 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m170.44095 3.448819l619.11816 0l0 533.1024l-619.11816 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m480.0 3.448819l0 533.1024\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m480.0 3.448819l0 533.1024\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m170.44095 270.0l619.11816 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m170.44095 270.0l619.11816 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m323.19946 3.448819l0 533.1024\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m323.19946 3.448819l0 533.1024\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m632.55646 3.448819l0 533.1024\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m632.55646 3.448819l0 533.1024\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m170.44095 134.0l619.11816 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m170.44095 134.0l619.11816 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m170.44095 406.0l619.11816 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m170.44095 406.0l619.11816 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m174.61679 7.102362l145.10236 0l0 122.173225l-145.10236 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m253.24596 69.87148q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m327.30975 7.102362l148.50394 0l0 122.173225l-148.50394 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m407.6397 69.87148q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m174.61679 135.10236l145.10236 0l0 131.68506l-145.10236 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m249.80846 210.06488l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m327.30972 135.10236l148.50394 0l0 131.68506l-148.50394 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m407.63968 202.62738q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m483.72702 7.102362l145.10239 0l0 122.173225l-145.10239 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m558.9187 77.30898l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m635.82416 7.102362l148.50397 0l0 122.173225l-148.50397 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m712.7166 77.30898l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m483.7257 136.15749l145.10236 0l0 131.68504l-145.10236 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m558.91736 211.12001l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m636.2835 136.15749l148.5039 0l0 131.68504l-148.5039 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m716.61346 203.68251q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m174.91602 274.7244l145.10236 0l0 128.0l-145.10236 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m250.10768 347.8444l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m327.60892 274.7244l148.50394 0l0 128.0l-148.50394 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m404.50137 347.8444l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m173.68767 409.2756l145.10237 0l0 122.17319l-145.10237 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m252.31683 472.0447q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m327.3491 410.7244l148.50394 0l0 120.724396l-148.50394 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m404.24155 480.2066l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m484.0262 274.7244l145.10239 0l0 128.0l-145.10239 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#ff0000\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m484.0262 274.7244l145.10239 0l0 128.0l-145.10239 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m559.2179 347.8444l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m636.12335 274.7244l148.50397 0l0 128.0l-148.50397 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m716.4533 340.4069q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m483.72702 410.7244l145.10239 0l0 120.724396l-145.10239 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m562.3562 472.7691q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m636.28345 410.7244l148.50397 0l0 122.17325l-148.50397 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m713.1759 480.93103l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSquare1T9, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Square_1_T9.2bf24c88.svg\";\nexport { ForwardRef as ReactComponent };","var _clipPath, _g;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgSquare2T9 = function SvgSquare2T9(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0.0 0.0 960.0 540.0\",\n    fill: \"none\",\n    stroke: \"none\",\n    strokeLinecap: \"square\",\n    strokeMiterlimit: 10,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _clipPath || (_clipPath = /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"g1128c8048ff_0_108.0\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0l0 -540.0z\",\n    clipRule: \"nonzero\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#g1128c8048ff_0_108.0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffffff\",\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#eeeeee\",\n    d: \"m26.16273 108.64567l374.77167 0l0 322.70868l-374.77167 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m26.16273 108.64567l374.77167 0l0 322.70868l-374.77167 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m213.54855 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m213.54855 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m26.16273 270.0l374.77167 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m26.16273 270.0l374.77167 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m118.62687 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m118.62687 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m305.87943 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m305.87943 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m26.16273 187.66763l374.77167 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m26.16273 187.66763l374.77167 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m26.16273 352.30786l374.77167 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m26.16273 352.30786l374.77167 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m28.690357 110.85714l87.842514 0l0 73.95275l-87.842514 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m78.689606 149.51602q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m121.1148 110.85714l89.88976 0l0 73.95275l-89.88976 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m172.13766 149.51602q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m28.690357 188.33488l87.842514 0l0 79.71654l-87.842514 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m75.252106 237.31316l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m121.114784 188.33488l89.88976 0l0 79.71654l-89.88976 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m172.13765 229.87566q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m215.79356 110.85714l87.842514 0l0 73.95275l-87.842514 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m262.35532 156.95352l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m307.85736 110.85714l89.88977 0l0 73.95275l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m355.44275 156.95352l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m215.79277 188.97354l87.842514 0l0 79.71655l-87.842514 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m262.35452 237.95181l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m308.13538 188.97354l89.88977 0l0 79.71655l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m359.15826 230.51431q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m28.87147 272.8474l87.84252 0l0 77.480316l-87.84252 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m75.43322 320.70755l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m121.29589 272.8474l89.88976 0l0 77.480316l-89.88976 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m168.88126 320.70755l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m28.127956 354.29056l87.842514 0l0 73.95276l-87.842514 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m78.127205 392.94943q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m121.13861 355.1675l89.889755 0l0 73.07086l-89.889755 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m168.72398 400.82294l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m215.97467 272.8474l87.8425 0l0 77.480316l-87.8425 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m265.9739 313.27005q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m308.03845 272.8474l89.88977 0l0 77.480316l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m359.06134 313.27005q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m215.79356 355.1675l87.842514 0l0 73.07086l-87.842514 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m265.79282 393.38544q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m308.13538 355.1675l89.88977 0l0 73.95276l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m355.72073 401.2639l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#eeeeee\",\n    d: \"m569.50134 108.64567l374.7716 0l0 322.70868l-374.7716 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m569.50134 108.64567l374.7716 0l0 322.70868l-374.7716 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m756.88715 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m756.88715 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m569.50134 270.0l374.7716 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m569.50134 270.0l374.7716 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m661.96545 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m661.96545 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m849.218 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m849.218 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m569.50134 187.66763l374.7716 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m569.50134 187.66763l374.7716 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m569.50134 352.30786l374.7716 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m569.50134 352.30786l374.7716 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m572.02893 110.85714l87.84253 0l0 73.95275l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m622.0282 149.51602q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m664.45337 110.85714l89.88977 0l0 73.95275l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m715.47626 149.51602q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m572.02893 188.33488l87.84253 0l0 79.71654l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#ff0000\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m572.02893 188.33488l87.84253 0l0 79.71654l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m622.0282 229.87566q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m664.45337 188.33488l89.88977 0l0 79.71654l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m715.47626 229.87566q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m759.13214 110.85714l87.84253 0l0 73.95275l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m805.6939 156.95352l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m851.196 110.85714l89.88971 0l0 73.95275l-89.88971 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m898.7813 156.95352l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m759.13135 188.97354l87.84253 0l0 79.71655l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#ffff00\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m759.13135 188.97354l87.84253 0l0 79.71655l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m805.6931 237.95181l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m851.474 188.97354l89.88971 0l0 79.71655l-89.88971 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m902.4968 230.51431q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m572.21 272.8474l87.84253 0l0 77.480316l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m618.7718 320.70755l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m664.63446 272.8474l89.88977 0l0 77.480316l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m712.21985 320.70755l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m571.46655 354.29056l87.84253 0l0 73.95276l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#ffff00\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m571.46655 354.29056l87.84253 0l0 73.95276l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m621.46576 392.94943q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m664.4772 355.1675l89.88977 0l0 73.07086l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m712.06256 400.82294l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m759.31323 272.8474l87.84253 0l0 77.480316l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m809.3125 313.27005q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m851.3771 272.8474l89.88971 0l0 77.480316l-89.88971 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m902.3999 313.27005q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m759.13214 355.1675l87.84253 0l0 73.07086l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#ff0000\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m759.13214 355.1675l87.84253 0l0 73.07086l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m805.6939 400.82294l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#d0e0e3\",\n    d: \"m851.47394 355.1675l89.88977 0l0 73.95276l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m899.0593 401.2639l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#cfe2f3\",\n    d: \"m436.03018 258.89764l73.165344 0l0 -11.102371l22.204742 22.204727l-22.204742 22.204712l0 -11.102356l-73.165344 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 1,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m436.03018 258.89764l73.165344 0l0 -11.102371l22.204742 22.204727l-22.204742 22.204712l0 -11.102356l-73.165344 0z\",\n    fillRule: \"evenodd\"\n  }))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSquare2T9, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Square_2_T9.effb33b3.svg\";\nexport { ForwardRef as ReactComponent };","var _clipPath, _g;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgSquare3T9 = function SvgSquare3T9(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0.0 0.0 960.0 540.0\",\n    fill: \"none\",\n    stroke: \"none\",\n    strokeLinecap: \"square\",\n    strokeMiterlimit: 10,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _clipPath || (_clipPath = /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"g1128c8048ff_0_208.0\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0l0 -540.0z\",\n    clipRule: \"nonzero\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#g1128c8048ff_0_208.0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffffff\",\n    d: \"m0 0l960.0 0l0 540.0l-960.0 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#eeeeee\",\n    d: \"m26.16273 108.64567l374.77167 0l0 322.70868l-374.77167 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m26.16273 108.64567l374.77167 0l0 322.70868l-374.77167 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m213.54855 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m213.54855 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m26.16273 270.0l374.77167 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m26.16273 270.0l374.77167 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m118.62687 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m118.62687 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m305.87943 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m305.87943 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m26.16273 187.66763l374.77167 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m26.16273 187.66763l374.77167 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m26.16273 352.30786l374.77167 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m26.16273 352.30786l374.77167 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m28.690357 110.85714l87.842514 0l0 73.95275l-87.842514 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m78.689606 149.51602q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m121.1148 110.85714l89.88976 0l0 73.95275l-89.88976 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m172.13766 149.51602q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m28.690357 188.33488l87.842514 0l0 79.71654l-87.842514 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m75.252106 237.31316l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m121.114784 188.33488l89.88976 0l0 79.71654l-89.88976 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m172.13765 229.87566q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m215.79356 110.85714l87.842514 0l0 73.95275l-87.842514 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m262.35532 156.95352l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m307.85736 110.85714l89.88977 0l0 73.95275l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m355.44275 156.95352l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m215.79277 188.97354l87.842514 0l0 79.71655l-87.842514 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m262.35452 237.95181l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m308.13538 188.97354l89.88977 0l0 79.71655l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m359.15826 230.51431q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m28.87147 272.8474l87.84252 0l0 77.480316l-87.84252 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m75.43322 320.70755l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m121.29589 272.8474l89.88976 0l0 77.480316l-89.88976 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m168.88126 320.70755l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m28.127956 354.29056l87.842514 0l0 73.95276l-87.842514 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m78.127205 392.94943q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m121.13861 355.1675l89.889755 0l0 73.07086l-89.889755 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m168.72398 400.82294l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m215.97467 272.8474l87.8425 0l0 77.480316l-87.8425 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m265.9739 313.27005q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m308.03845 272.8474l89.88977 0l0 77.480316l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m359.06134 313.27005q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m215.79356 355.1675l87.842514 0l0 73.07086l-87.842514 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m265.79282 393.38544q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m308.13538 355.1675l89.88977 0l0 73.95276l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m355.72073 401.2639l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#eeeeee\",\n    d: \"m569.50134 108.64567l374.7716 0l0 322.70868l-374.7716 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m569.50134 108.64567l374.7716 0l0 322.70868l-374.7716 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m756.88715 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m756.88715 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m569.50134 270.0l374.7716 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m569.50134 270.0l374.7716 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m661.96545 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m661.96545 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m849.218 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m849.218 108.64567l0 322.70868\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m569.50134 187.66763l374.7716 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m569.50134 187.66763l374.7716 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m569.50134 352.30786l374.7716 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m569.50134 352.30786l374.7716 0\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m572.02893 110.85714l87.84253 0l0 73.95275l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#ff0000\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m572.02893 110.85714l87.84253 0l0 73.95275l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m618.5907 156.95352l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m664.45337 110.85714l89.88977 0l0 73.95275l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m715.47626 149.51602q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m572.02893 188.33488l87.84253 0l0 79.71654l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m618.5907 237.31316l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m664.45337 188.33488l89.88977 0l0 79.71654l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m715.47626 229.87566q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m759.13214 110.85714l87.84253 0l0 73.95275l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m805.6939 156.95352l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m851.196 110.85714l89.88971 0l0 73.95275l-89.88971 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m898.7813 156.95352l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m759.13135 188.97354l87.84253 0l0 79.71655l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m805.6931 237.95181l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m851.474 188.97354l89.88971 0l0 79.71655l-89.88971 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m902.4968 230.51431q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m572.21 272.8474l87.84253 0l0 77.480316l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m618.7718 320.70755l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m664.63446 272.8474l89.88977 0l0 77.480316l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m712.21985 320.70755l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m571.46655 354.29056l87.84253 0l0 73.95276l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#ff0000\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m571.46655 354.29056l87.84253 0l0 73.95276l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m618.02826 400.38693l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m664.4772 355.1675l89.88977 0l0 73.07086l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m712.06256 400.82294l-3.578125 0l0 -13.78125l-4.265625 1.328125l0 -2.90625l7.453125 -2.671875l0.390625 0l0 18.03125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m759.31323 272.8474l87.84253 0l0 77.480316l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m809.3125 313.27005q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m851.3771 272.8474l89.88971 0l0 77.480316l-89.88971 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m902.3999 313.27005q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m759.13214 355.1675l87.84253 0l0 73.07086l-87.84253 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"m809.1314 393.38544q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    fillOpacity: 0,\n    d: \"m851.47394 355.1675l89.88977 0l0 73.95276l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#ff0000\",\n    strokeWidth: 4,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m851.47394 355.1675l89.88977 0l0 73.95276l-89.88977 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff0000\",\n    d: \"m902.4968 393.8264q0 3.734375 -1.546875 5.71875q-1.546875 1.96875 -4.53125 1.96875q-2.9375 0 -4.5 -1.9375q-1.546875 -1.953125 -1.59375 -5.578125l0 -3.3125q0 -3.765625 1.5625 -5.71875q1.5625 -1.953125 4.5 -1.953125q2.953125 0 4.515625 1.9375q1.5625 1.921875 1.59375 5.546875l0 3.328125zm-3.578125 -3.640625q0 -2.234375 -0.609375 -3.25q-0.609375 -1.03125 -1.90625 -1.03125q-1.265625 0 -1.875 0.96875q-0.59375 0.96875 -0.625 3.03125l0 4.390625q0 2.1875 0.59375 3.265625q0.609375 1.0625 1.921875 1.0625q1.3125 0 1.890625 -1.015625q0.59375 -1.03125 0.609375 -3.140625l0 -4.28125z\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#cfe2f3\",\n    d: \"m436.03018 258.89764l73.165344 0l0 -11.102371l22.204742 22.204727l-22.204742 22.204712l0 -11.102356l-73.165344 0z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#595959\",\n    strokeWidth: 1,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    d: \"m436.03018 258.89764l73.165344 0l0 -11.102371l22.204742 22.204727l-22.204742 22.204712l0 -11.102356l-73.165344 0z\",\n    fillRule: \"evenodd\"\n  }))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSquare3T9, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Square_3_T9.f18eef36.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\nimport SquareExeciseExample from \"../components/SquareExerciseExample\";\nimport SquareExecise from \"../components/SquareExercise\";\nimport { ReactComponent as S0 } from \"../graphics/Square_0_T9.svg\";\nimport { ReactComponent as S1 } from \"../graphics/Square_1_T9.svg\";\nimport { ReactComponent as S2 } from \"../graphics/Square_2_T9.svg\";\nimport { ReactComponent as S3 } from \"../graphics/Square_3_T9.svg\";\n\n/*\nTask 9: Given are 4x4 squares where each square has a digit 0 or 1.\nSome squares serve as control bits. In the exercise, the user\nis given squares containing exact one error that must be found.\n*/\n\nfunction Task9() {\n  // used for theory at the beginning\n  const binaryRep = [\"00\", \"01\", \"10\", \"11\"];\n\n  // number of questions for subtasks to solve\n  const numberOfTasksA = 3;\n  const minWrongAnswers1 = 3;\n  const minWrongAnswers2 = 5;\n  const minWrongAnswers3 = 7;\n\n  // Table for encoding\n  const table = [];\n\n  // Table Head\n  table.push(\n    <tr key={4}>\n      <th>Binäre Darstellung</th>\n      <th>Kodierung</th>\n    </tr>\n  );\n\n  // Table items\n  for (let i = 0; i < 4; ++i) {\n    table.push(\n      <tr key={i}>\n        <td>{binaryRep[i]}</td>\n        <td>\n          {binaryRep[i]}\n          <span style={{ color: \"red\" }}>{binaryRep[i]}</span>\n          <span style={{ color: \"green\" }}>{binaryRep[i] + \" \"}</span>\n        </td>\n      </tr>\n    );\n  }\n\n  /* \n  Keeping track of number of correct solutions or wrong answers\n  for subtask A. If correctAnswersA === numberOfTasks, then\n  subtask A is solved and the next subtask is revealed.\n  If wrongAnswersA === minWrongAnswers, then solution for subtask\n  A is revealed.\n  */\n  const [wrongAnswersA, setWrongAnswersA] = useState(0);\n  const [correctAnswersA, setCorrectAnswersA] = useState(0);\n\n  return (\n    <div className=\"task\">\n      <h1>Aufgabe 9: Effiziente Kodierung 1</h1>\n      <p>\n        Bei der Konstruktion einer Kodierung ist uns der Abstand sehr wichtig.\n        Der Abstand ist massgebend, wie viele Fehler wir erkennen oder\n        korrigieren können. Wenn wir z.B. eine Kodierung mit 4 Wörtern und einem\n        Abstand von 3 haben wollen, sodass wir einzelne Fehler korrigieren\n        können, dann können wir ganz einfach die Wörter verdreifachen. Im\n        gegebenen Beispiel haben wir die 4 Wörter, welche einen Abstand von 1\n        Haben. Durch die Verdreifachung haben die Wörter einen Abstand von 1 in\n        jeder Sektion (Schwarz, Rot, Grün), was einen totalen Abstand von 3\n        ergibt.\n      </p>\n      <table>\n        <tbody>{table}</tbody>\n      </table>\n      <p>\n        Mit der Verdreifachung können wir immer eine Kodierung schaffen, mit\n        Abstand 3 und das für jede Wortlänge. Das ist alllerdings nicht\n        effizient. Die Nachrichten werden somit 3 mal so lang, wobei wir jeweils\n        nur Fehler korrigieren können, wenn maximal einer auftritt. Werden die\n        Nachrichten zu Lang, dann erhöt sich die Wahrscheinlichkeit, dass\n        mehrere Fehler auftreten.\n      </p>\n      <p>\n        Wir wollen uns dazu andere Methoden anschauen, um effizientere\n        Kodierungen zu finden. Dazu fangen wir mit einer kleinen Aufgabe an.\n        Gegeben ist ein 4 mal 4 Rechteck, wobei jede Zelle ein eigenes Bit\n        repräsentiert. Diese Bits sind nicht alle zufällig gewählt. Einige von\n        ihnen sind, wie wir das zu Beginn gesehen haben, Prüfbits oder auch\n        Kontrollbits genannt. Das gegebene Rechteck erfüllt eine bestimmte\n        Eigenschaft. Wenn ein Bit nicht mehr korrekt sein sollte, dann können\n        wir es dank dieser Eigenschaft finden und auch korrigieren.\n      </p>\n      <SquareExeciseExample />\n      <p>\n        Hier sind nun einige andere Rechtecke, bei denen ein Bit falsch ist.\n        Erkennen Sie, welche Eigenschaft wir suchen? Finden Sie anhand des\n        gegebenen Beispieles das falsche Bit in jedem der Rechtecke.\n      </p>\n      {[...Array(numberOfTasksA)].map((e, i) => (\n        <SquareExecise\n          key={i}\n          onWorong={() => setWrongAnswersA(wrongAnswersA + 1)}\n          onCorrect={() => setCorrectAnswersA(correctAnswersA + 1)}\n        />\n      ))}\n      {wrongAnswersA >= minWrongAnswers1 &&\n        correctAnswersA !== numberOfTasksA && (\n          <p>\n            Hinweis 1: Denken Sie zurück an eine der ersten Methoden, welche wir\n            betrachtet haben.\n          </p>\n        )}\n\n      {wrongAnswersA >= minWrongAnswers2 &&\n        correctAnswersA !== numberOfTasksA && (\n          <p>Hinweis 2: Betrachten Sie die einzelnen Spalten und Zeilen.</p>\n        )}\n\n      {wrongAnswersA >= minWrongAnswers3 &&\n        correctAnswersA !== numberOfTasksA && (\n          <p>\n            Lösung: Die Anzahl Einsen in jeder Zeile und jeder Spalte muss\n            gerade sein. Der Fehler lieg da, wo sich die Spalte und die Zeile\n            kreuzen, welche fehlerhaft sind. Um fortfahren zu können, müssen Sie\n            die Aufgabe fertig lösen.\n          </p>\n        )}\n\n      {correctAnswersA === numberOfTasksA && (\n        <div>\n          <p>\n            Wir haben zwei arten von Bits. Die einen sind die normalen Bits B\n            und die Kontrollbits C. Die eigentliche Nachricht ist\n            B1-B2-B3-B4-B5-B6-B7-B8-B9 und die anderen Bits dienen zur\n            Fehlererkennung und Korrektur.\n          </p>\n          <div className=\"squareGraphics\">\n            <S0 />\n          </div>\n          <p>\n            Die Kontrollbits sind so gesetzt, dass jede Zeile und Spalte eine\n            gerade Anzahl an Einsen hat. Bei einem Fehler finden wir das\n            fehlerhafte Bit, indem wir die Zeile und Spalte finden, wo die\n            Eigenschaft nicht mehr erfüllt ist. Dort wo diese sich kreuzen, da\n            muss der Fehler vorgefallen sein.\n          </p>\n          <div className=\"squareGraphics\">\n            <S1 />\n          </div>\n          <p>\n            Sollten zwei Fehler auftreten, so bemerken wir das zwar, allerdings\n            finden wir die Fehler nicht mehr. Im gegebenen Beispiel kommen 4\n            Bits infrage fehlerhaft zu sein, allerdings sind nur 2 falsch.\n          </p>\n          <div className=\"squareGraphics\">\n            <S2 />\n          </div>\n          <p>\n            Dieses Beispiel zeigt, dass 3 Fehler unter Umständen nicht mehr\n            erkannt werden können.\n          </p>\n          <div className=\"squareGraphics\">\n            <S3 />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Task9;\n","import React, { useState } from \"react\";\nimport randomBinaryString from \"../functions/randomBinaryString\";\nimport binaryCheckSymbol1 from \"../functions/binaryCheckSymbol1\";\nimport stringToArray from \"../functions/srtingToArray\";\nimport errormaker from \"../functions/errormaker\";\n\n/*\nGiven is a bit string with some normal bits and some control bits.\nIn the exercise, the user is given sequences containing \nexact one error that must be found.\n*/\n\n/*\ncallerFunction is the function of the calling component being called,\nif the answer given is correct.\n*/\nfunction CorrectionBitsExercise({ callerFunction }) {\n  /* \n  used for evaluating the given answer,\n  the correlation between the bits,\n  they are correlated as in a rectangle, where each row and column\n  has an even amount of ones, like the SquareExercise.\n  */\n  const correlationList = [\n    [0, 1, 2, 9, 0, 3, 6, 12],\n    [0, 1, 2, 9, 1, 4, 7, 13],\n    [0, 1, 2, 9, 2, 5, 8, 14],\n    [3, 4, 5, 10, 0, 3, 6, 12],\n    [3, 4, 5, 10, 1, 4, 7, 13],\n    [3, 4, 5, 10, 2, 5, 8, 14],\n    [6, 7, 8, 11, 0, 3, 6, 12],\n    [6, 7, 8, 11, 1, 4, 7, 13],\n    [6, 7, 8, 11, 2, 5, 8, 14],\n    [0, 1, 2, 9, 9, 10, 11, 15],\n    [3, 4, 5, 10, 9, 10, 11, 15],\n    [6, 7, 8, 11, 9, 10, 11, 15],\n    [12, 13, 14, 15, 0, 3, 6, 12],\n    [12, 13, 14, 15, 1, 4, 7, 13],\n    [12, 13, 14, 15, 2, 5, 8, 14],\n    [12, 13, 14, 15, 9, 10, 11, 15],\n  ];\n\n  // indicator for which button has been pressed the last\n  const [pressed, setPressed] = useState(Array(16).fill(false));\n\n  // data of bit sequence with one error\n  const [data] = useState(() => {\n    let temp1 = randomBinaryString(9);\n\n    let temp2 = [];\n    temp2.push(binaryCheckSymbol1([temp1[0], temp1[1], temp1[2]]));\n    temp2.push(binaryCheckSymbol1([temp1[3], temp1[4], temp1[5]]));\n    temp2.push(binaryCheckSymbol1([temp1[6], temp1[7], temp1[8]]));\n    temp2.push(binaryCheckSymbol1([temp1[0], temp1[3], temp1[6]]));\n    temp2.push(binaryCheckSymbol1([temp1[1], temp1[4], temp1[7]]));\n    temp2.push(binaryCheckSymbol1([temp1[2], temp1[5], temp1[8]]));\n    temp2.push(binaryCheckSymbol1(temp1));\n\n    temp1.push(...stringToArray(temp2.join(\"\")));\n    errormaker(temp1, 1);\n\n    return temp1;\n  });\n\n  /*\n  variable for the task state\n  \"\": not answered yet\n  true: correctly answered\n  false: answered, but wrong\n  */\n  const [taskState, setTaskState] = useState(\"\");\n\n  // checks the answer given by the user\n  const checkResult = (arr, index) => {\n    // changing the last pressed button\n    let tempPressed = Array(16).fill(false);\n    tempPressed[index] = true;\n    setPressed(tempPressed);\n\n    let arr1 = [];\n    let arr2 = [];\n\n    // separating column and row\n    for (let i = 0; i < 4; ++i) {\n      arr1[i] = data[arr[i]];\n      arr2[i] = data[arr[i + 4]];\n    }\n\n    // looking for the row and column with both an odd amount of ones\n    let temp =\n      binaryCheckSymbol1(arr1) === \"1\" && binaryCheckSymbol1(arr2) === \"1\";\n\n    setTaskState(temp);\n\n    if (temp === true) {\n      callerFunction();\n    }\n  };\n\n  // for rendering the buttons\n  let renderButtons = [];\n\n  // the colour of the regular bits is different than from the control bits.\n  for (let index = 0; index < 9; index++) {\n    renderButtons.push(\n      <button\n        key={index}\n        className={\n          pressed[index] ? \"activeSquare toggleSquare\" : \"activeSquare \"\n        }\n        disabled={taskState}\n        onClick={() => checkResult(correlationList[index], index)}\n      >\n        {data[index]}\n      </button>\n    );\n  }\n\n  // the colour of the regular bits is different than from the control bits.\n  for (let index = 9; index < data.length; index++) {\n    renderButtons.push(\n      <button\n        key={index}\n        className={\n          pressed[index] ? \"inactiveSquare toggleSquare\" : \"inactiveSquare\"\n        }\n        disabled={taskState}\n        onClick={() => checkResult(correlationList[index], index)}\n      >\n        {data[index]}\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"containerSquares\">\n      <div className=\"squareRow\">\n        <p></p>\n        {renderButtons}\n        {taskState === false && <h3 style={{ color: \"red\" }}>Falsch</h3>}\n        {taskState && <h3 style={{ color: \"green\" }}>Korrekt</h3>}\n      </div>\n    </div>\n  );\n}\n\nexport default CorrectionBitsExercise;\n","import React, { useState } from \"react\";\nimport CorrectionBitsExercise from \"../components/CorrectionBitsExercise\";\nimport TextExercise from \"../components/TextExercise\";\n\n/*\nTask 10\n\nTask A: Given is a bit string with some normal bits and some control bits.\nIn the exercise, the user is given sequences containing \nexact one error that must be found.\n\nTask B: Some questions about general properties of these kind of control bit codes.\n*/\n\nfunction Task10() {\n  const numButtons = 16;\n\n  // used for toggle and setting the values for the control bits\n  const correlationList = [\n    [0, 9, 12, 15],\n    [1, 9, 13, 15],\n    [2, 9, 14, 15],\n    [3, 10, 12, 15],\n    [4, 10, 13, 15],\n    [5, 10, 14, 15],\n    [6, 11, 12, 15],\n    [7, 11, 13, 15],\n    [8, 11, 14, 15],\n    [0, 1, 2, 9],\n    [3, 4, 5, 10],\n    [6, 7, 8, 11],\n    [0, 3, 6, 12],\n    [1, 4, 7, 13],\n    [2, 5, 8, 14],\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 15],\n  ];\n\n  // toggle status of each button\n  const [toggle, setToggle] = useState(Array(numButtons).fill(false));\n\n  // value of each button\n  const [values, setValues] = useState(Array(numButtons).fill(0));\n\n  const handleValues = (arr) => {\n    let temp = [...values];\n    for (let i = 0; i < arr.length; ++i) {\n      let tempIndex = arr[i];\n      temp[tempIndex] = (temp[tempIndex] + 1) % 2;\n    }\n    setValues(temp);\n  };\n\n  const handleToggle = (arr) => {\n    let temp = [...toggle];\n    for (let i = 0; i < arr.length; ++i) {\n      let tempIndex = arr[i];\n      temp[tempIndex] = !temp[tempIndex];\n    }\n    setToggle(temp);\n  };\n\n  let renderButtons = [];\n  for (let i = 0; i < 9; ++i) {\n    renderButtons.push(\n      <button\n        key={i}\n        onClick={() => handleValues(correlationList[i])}\n        onMouseOver={() => handleToggle(correlationList[i])}\n        onMouseOut={() => handleToggle(correlationList[i])}\n        className={toggle[i] ? \"activeSquare toggleSquare\" : \"activeSquare\"}\n      >\n        {values[i]}\n      </button>\n    );\n  }\n  for (let i = 9; i < numButtons; ++i) {\n    renderButtons.push(\n      <button\n        key={i}\n        onMouseOver={() => handleToggle(correlationList[i])}\n        onMouseOut={() => handleToggle(correlationList[i])}\n        className={toggle[i] ? \"inactiveSquare toggleSquare\" : \"inactiveSquare\"}\n      >\n        {values[i]}\n      </button>\n    );\n  }\n\n  // number of tasks in A\n  const numberOfTasksA = 3;\n\n  // keeping track if task A is solved or not\n  const [stateA, setStateA] = useState(0);\n\n  let taskArender = [];\n  for (let i = 0; i < numberOfTasksA; ++i) {\n    taskArender.push(\n      <CorrectionBitsExercise\n        key={i}\n        callerFunction={() => setStateA(stateA + 1)}\n      />\n    );\n  }\n\n  // keeping track if task B is solved or not\n  const [stateB, setStateB] = useState(Array(3).fill(false));\n\n  const handleStateB = (index) => {\n    let temp = [...stateB];\n    temp[index] = true;\n    setStateB(temp);\n  };\n\n  return (\n    <div className=\"task\">\n      <h1>Aufgabe 10: Effiziente Kodierung 2</h1>\n      <p>\n        Wir haben erneut unsere 9 Bits für die Nachricht und die dazugehörigen\n        Kontrollbits. Diese sind in einer Reihe angeordnet, so wie ein Computer\n        die Bits lesen kann. Jedes Bit ist immer noch Teil einer imaginären\n        Zeile und imaginären Spalte, wie vorhin. Sie können hier ausprobieren,\n        welche Bits welche Kontrollbits beeinflussen und andersrum.\n      </p>\n      <div className=\"containerSquares\">\n        <div className=\"squareRow\">{renderButtons}</div>\n      </div>\n      <p>\n        Gegeben sind einige solcher Nachrichten, wobei ein Fehler aufgetreten\n        ist. Finden Sie diese Fehler.\n      </p>\n      {taskArender}\n      {stateA === numberOfTasksA && (\n        <div>\n          <TextExercise\n            callerFunction={() => handleStateB(0)}\n            question={\n              \"Wie viele Nachrichten können wir mit so vielen Bits und Kontrollbits Kodieren?\"\n            }\n            text={\"In zweier Potenz (2^x) :\"}\n            solutions={[\"2^9\"]}\n            textOnCorrect={\"Wir haben 9 Bits, welche die Nachricht ausmachen.\"}\n            textOnWrong={\"Wir haben 9 Bits, welche die Nachricht ausmachen.\"}\n          />\n        </div>\n      )}\n      {stateB[0] && (\n        <div>\n          <TextExercise\n            callerFunction={() => handleStateB(1)}\n            question={\n              \"Wir können damit Fehler der grösse Eins korrigieren. Was für ein Abstand muss demnach unsere Kodierung haben?\"\n            }\n            text={\"Abstand :\"}\n            solutions={[\"3\"]}\n            textOnCorrect={\"\"}\n            textOnWrong={\"3 ist die richtige Lösung.\"}\n          />\n        </div>\n      )}\n      {stateB[1] && (\n        <div>\n          <TextExercise\n            callerFunction={() => handleStateB(2)}\n            question={\n              \"Wir wollen 2^n Wörter kodieren mit abstand 3. Wir haben bereits gesehen, dass wir dafür die Wörter verdreifachen können. Das wären 2n Kontrollbits. Wie viele Kontrollbits brauchen wir bei n = a ⋅ b bits? Hinweis: denken Sie an die Rechtecke aus der letzten Aufgabe.\"\n            }\n            text={\"Anzahl Kontrollbits :\"}\n            solutions={[\"a+b+1\", \"a+1+b\", \"b+1+a\", \"b+a+1\", \"1+a+b\", \"1+b+a\"]}\n            textOnCorrect={\"\"}\n            textOnWrong={\n              \"a + b + 1 ist die richtige Lösung. Wir haben die Länge und die Breite des Rechteckes + 1. Unser Rechteck hat 9 Bits, das macht a = 3, b = 3 und Anzahl Kontrollbits = 7\"\n            }\n          />\n        </div>\n      )}\n      {stateB[2] && (\n        <div>\n          <p>\n            Bei einer Nachrichtenlänge von n können a und b so gewählt werden,\n            dass n &gt; a und n &gt; b gilt. Damit gilt auch n &gt; a + b + 1.\n            Diese Rechteckmethode liefert uns somit eine recht effiziente\n            Kodieren um einzelne Fehler zu korrigieren.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Task10;\n","import React, { useState } from \"react\";\nimport randomBinaryString from \"../functions/randomBinaryString\";\nimport binaryCheckSymbol1 from \"../functions/binaryCheckSymbol1\";\nimport stringToArray from \"../functions/srtingToArray\";\nimport errormaker from \"../functions/errormaker\";\n\n/*\nGiven is a bit string with some normal bits and some control bits.\nIn the exercise, the user is given sequences containing \nexact one error that must be found. It is a 7-4 Hamming Code.\n*/\n\nfunction CorrectionBitsExercise2() {\n  /* \n  used for evaluating the given answer,\n  the correlation between the bits,\n  they are correlated as in a 7-4 Hamming Code.\n  */\n  const correlationList = [\n    [\"1\", \"1\", \"0\"],\n    [\"1\", \"0\", \"1\"],\n    [\"0\", \"1\", \"1\"],\n    [\"1\", \"1\", \"1\"],\n    [\"1\", \"0\", \"0\"],\n    [\"0\", \"1\", \"0\"],\n    [\"0\", \"0\", \"1\"],\n  ];\n\n  // indicator for which button has been pressed the last\n  const [pressed, setPressed] = useState(Array(7).fill(false));\n\n  // data of bit sequence with one error\n  const [data, setData] = useState(() => {\n    let temp1 = randomBinaryString(4);\n\n    let temp2 = [];\n    temp2.push(binaryCheckSymbol1([temp1[0], temp1[1], temp1[3]]));\n    temp2.push(binaryCheckSymbol1([temp1[0], temp1[2], temp1[3]]));\n    temp2.push(binaryCheckSymbol1([temp1[1], temp1[2], temp1[3]]));\n\n    temp1.push(...stringToArray(temp2.join(\"\")));\n\n    errormaker(temp1, 1);\n\n    return temp1;\n  });\n\n  /*\n  variable for the task state\n  \"\": not answered yet\n  true: correctly answered\n  false: answered, but wrong\n  */\n  const [taskState, setTaskState] = useState(\"\");\n\n  // checks the answer given by the user\n  const checkResult = (arr, index) => {\n    // changing the last pressed button\n    let tempPressed = Array(7).fill(false);\n    tempPressed[index] = true;\n    setPressed(tempPressed);\n\n    // checking the equations of the 7-4 Hamming Code.\n    let temp1 =\n      arr[0] === binaryCheckSymbol1([data[0], data[1], data[3], data[4]]);\n    let temp2 =\n      arr[1] === binaryCheckSymbol1([data[0], data[2], data[3], data[5]]);\n    let temp3 =\n      arr[2] === binaryCheckSymbol1([data[1], data[2], data[3], data[6]]);\n\n    setTaskState(temp1 && temp2 && temp3);\n  };\n\n  // for rendering the buttons\n  let renderButtons = [];\n\n  // the colour of the regular bits is different than from the control bits.\n  for (let index = 0; index < 4; index++) {\n    renderButtons.push(\n      <button\n        key={index}\n        className={\n          pressed[index] ? \"activeSquare toggleSquare\" : \"activeSquare \"\n        }\n        disabled={taskState}\n        onClick={() => checkResult(correlationList[index], index)}\n      >\n        {data[index]}\n      </button>\n    );\n  }\n\n  // the colour of the regular bits is different than from the control bits.\n  for (let index = 4; index < data.length; index++) {\n    renderButtons.push(\n      <button\n        key={index}\n        className={\n          pressed[index] ? \"inactiveSquare toggleSquare\" : \"inactiveSquare\"\n        }\n        disabled={taskState}\n        onClick={() => checkResult(correlationList[index], index)}\n      >\n        {data[index]}\n      </button>\n    );\n  }\n\n  // resetting this whole exercise\n  const reset = () => {\n    let temp1 = randomBinaryString(4);\n\n    let temp2 = [];\n    temp2.push(binaryCheckSymbol1([temp1[0], temp1[1], temp1[3]]));\n    temp2.push(binaryCheckSymbol1([temp1[0], temp1[2], temp1[3]]));\n    temp2.push(binaryCheckSymbol1([temp1[1], temp1[2], temp1[3]]));\n\n    temp1.push(...stringToArray(temp2.join(\"\")));\n\n    errormaker(temp1, 1);\n    setData(temp1);\n\n    setTaskState(\"\");\n    setPressed(Array(7).fill(false));\n  };\n\n  return (\n    <div className=\"containerSquares\">\n      <div className=\"squareRow\">\n        <p></p>\n        {renderButtons}\n        {taskState === false && <h3 style={{ color: \"red\" }}>Falsch</h3>}\n        {taskState && (\n          <span>\n            <h3 style={{ color: \"green\" }}>Korrekt</h3>\n            <button onClick={() => reset()}>Neuer String</button>\n          </span>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default CorrectionBitsExercise2;\n","import React, { useState } from \"react\";\nimport TextExercise from \"../components/TextExercise\";\nimport MC from \"../components/MC\";\nimport CorrectionBitsExercise2 from \"../components/CorrectionBitsExercise2\";\nimport sumChecksum from \"../functions/sumChecksum\";\n\n/*\nTask 11: Hamming-Codes\n\nTask A: some questions about the properties of Hamming-Codes.\n\nTask B: The user must set the correlation matrix for the control bits of a Hamming-Code.\n*/\n\nfunction Task11() {\n  // used for checking if answer by the user to the matrix was correct or not\n  const [matrixSolution, setMatrixSolution] = useState(\"\");\n\n  // keeping track if task B is solved or not\n  const [stateA, setStateA] = useState(Array(4).fill(false));\n\n  const handleStateA = (index) => {\n    let temp = [...stateA];\n    temp[index] = true;\n    setStateA(temp);\n  };\n\n  const numButtons = 7;\n\n  // used for toggle and setting the values for the control bits\n  const [correlationList] = useState([[0], [1], [2], [3], [4], [5], [6]]);\n\n  // toggle status of each button\n  const [toggle, setToggle] = useState(Array(numButtons).fill(false));\n\n  // value of each button, 0 or 1\n  const [values, setValues] = useState(Array(numButtons).fill(0));\n\n  // changing values\n  const handleValues = (arr) => {\n    let temp = [...values];\n    for (let i = 0; i < arr.length; ++i) {\n      let tempIndex = arr[i];\n      temp[tempIndex] = (temp[tempIndex] + 1) % 2;\n    }\n    setValues(temp);\n  };\n\n  // toggle function over the buttons\n  const handleToggle = (arr) => {\n    let temp = [...toggle];\n    for (let i = 0; i < arr.length; ++i) {\n      let tempIndex = arr[i];\n      temp[tempIndex] = !temp[tempIndex];\n    }\n    setToggle(temp);\n  };\n\n  // renderung the buttons\n  let renderButtons = [];\n\n  // only normal bits can be clicked, but both can be toggled\n  for (let i = 0; i < 4; ++i) {\n    renderButtons.push(\n      <button\n        key={i}\n        onClick={() => handleValues(correlationList[i])}\n        onMouseOver={() => handleToggle(correlationList[i])}\n        onMouseOut={() => handleToggle(correlationList[i])}\n        className={toggle[i] ? \"activeSquare toggleSquare\" : \"activeSquare\"}\n      >\n        {values[i]}\n      </button>\n    );\n  }\n  // control bits can't be clicked, but both can be toggled\n  for (let i = 4; i < numButtons; ++i) {\n    renderButtons.push(\n      <button\n        key={i}\n        onMouseOver={() => handleToggle(correlationList[i])}\n        onMouseOut={() => handleToggle(correlationList[i])}\n        className={toggle[i] ? \"inactiveSquare toggleSquare\" : \"inactiveSquare\"}\n      >\n        {values[i]}\n      </button>\n    );\n  }\n\n  // for correlation table\n  const [matrixValues, setMatrixValues] = useState(() => {\n    let temp1 = [\"X\", \"B1\", \"B2\", \"B3\", \"B4\", \"C1\", \"C2\", \"C3\"];\n    let temp2 = [\"C1\", 0, 0, 0, 0, 1, 0, 0];\n    let temp3 = [\"C2\", 0, 0, 0, 0, 0, 1, 0];\n    let temp4 = [\"C3\", 0, 0, 0, 0, 0, 0, 1];\n    return [temp1, temp2, temp3, temp4];\n  });\n\n  // handle clicks in the matrix\n  const handleMatrixValue = (i, j) => {\n    // reset values, otherwise leads to false results\n    setValues(Array(7).fill(0));\n\n    // changing matrix values\n    let tempM = [...matrixValues];\n    let temp = tempM[i][j];\n\n    // changing correlation lists\n    let tempCL = [...correlationList];\n    let tempC = tempCL[i + 3];\n    let tempB = tempCL[j - 1];\n\n    if (temp === 0) {\n      tempM[i][j] = 1;\n      tempCL[i + 3] = tempC.push(j - 1);\n      tempCL[j - 1] = tempB.push(i + 3);\n    } else {\n      tempM[i][j] = 0;\n      tempCL[i + 3] = tempC.splice(tempC.indexOf(j - 1), 1);\n      tempCL[j - 1] = tempB.splice(tempB.indexOf(i + 3), 1);\n    }\n\n    setMatrixValues(tempM);\n  };\n\n  // Matrix Buttons\n  let matrixButtons = [];\n\n  // deko Buttons\n  for (let i = 0; i < 8; ++i) {\n    matrixButtons.push(\n      <button key={i} disabled className={\"inactiveSquare\"}>\n        {matrixValues[0][i]}\n      </button>\n    );\n  }\n\n  // c1 deko button\n  matrixButtons.push(\n    <button key={8} disabled className={\"inactiveSquare\"}>\n      {matrixValues[1][0]}\n    </button>\n  );\n\n  // real buttons row 1\n  for (let i = 1; i < 5; ++i) {\n    matrixButtons.push(\n      <button\n        key={i + 8}\n        disabled={matrixSolution === true}\n        className={\"activeSquare\"}\n        onClick={() => handleMatrixValue(1, i)}\n      >\n        {matrixValues[1][i]}\n      </button>\n    );\n  }\n\n  // deko buttons row 1\n  for (let i = 5; i < 8; ++i) {\n    matrixButtons.push(\n      <button key={i + 8} disabled className={\"inactiveSquare\"}>\n        {matrixValues[1][i]}\n      </button>\n    );\n  }\n\n  // c2 deko button\n  matrixButtons.push(\n    <button key={16} disabled className={\"inactiveSquare\"}>\n      {matrixValues[2][0]}\n    </button>\n  );\n\n  // real buttons row 2\n  for (let i = 1; i < 5; ++i) {\n    matrixButtons.push(\n      <button\n        key={i + 16}\n        disabled={matrixSolution === true}\n        className={\"activeSquare\"}\n        onClick={() => handleMatrixValue(2, i)}\n      >\n        {matrixValues[2][i]}\n      </button>\n    );\n  }\n\n  // deko buttons row 2\n  for (let i = 5; i < 8; ++i) {\n    matrixButtons.push(\n      <button key={i + 16} disabled className={\"inactiveSquare\"}>\n        {matrixValues[2][i]}\n      </button>\n    );\n  }\n\n  // c3 deko button\n  matrixButtons.push(\n    <button key={24} disabled className={\"inactiveSquare\"}>\n      {matrixValues[3][0]}\n    </button>\n  );\n\n  // real buttons row 2\n  for (let i = 1; i < 5; ++i) {\n    matrixButtons.push(\n      <button\n        key={i + 24}\n        disabled={matrixSolution === true}\n        className={\"activeSquare\"}\n        onClick={() => handleMatrixValue(3, i)}\n      >\n        {matrixValues[3][i]}\n      </button>\n    );\n  }\n\n  // deko buttons row 2\n  for (let i = 5; i < 8; ++i) {\n    matrixButtons.push(\n      <button key={i + 24} disabled className={\"inactiveSquare\"}>\n        {matrixValues[3][i]}\n      </button>\n    );\n  }\n\n  // for checking the matrix solution\n  const checkMartix = () => {\n    console.log(matrixValues);\n\n    let sumR1 = sumChecksum([...matrixValues[1]].splice(1, 4));\n    let sumR2 = sumChecksum([...matrixValues[2]].splice(1, 4));\n    let sumR3 = sumChecksum([...matrixValues[3]].splice(1, 4));\n\n    let sumC1 = sumChecksum([\n      matrixValues[1][1],\n      matrixValues[2][1],\n      matrixValues[3][1],\n    ]);\n    let sumC2 = sumChecksum([\n      matrixValues[1][2],\n      matrixValues[2][2],\n      matrixValues[3][2],\n    ]);\n    let sumC3 = sumChecksum([\n      matrixValues[1][3],\n      matrixValues[2][3],\n      matrixValues[3][3],\n    ]);\n    let sumC4 = sumChecksum([\n      matrixValues[1][4],\n      matrixValues[2][4],\n      matrixValues[3][4],\n    ]);\n\n    // all rows must add up to 3\n    let temp1 = sumR1 === \"3\" && sumR2 === \"3\" && sumR3 === \"3\";\n\n    // all rows add up to 2 except one adds to 3\n    let temp2 =\n      sumC1 === \"2\" && sumC2 === \"2\" && sumC3 === \"2\" && sumC4 === \"3\";\n    let temp3 =\n      sumC1 === \"2\" && sumC2 === \"2\" && sumC3 === \"3\" && sumC4 === \"2\";\n    let temp4 =\n      sumC1 === \"2\" && sumC2 === \"3\" && sumC3 === \"2\" && sumC4 === \"2\";\n    let temp5 =\n      sumC1 === \"3\" && sumC2 === \"2\" && sumC3 === \"2\" && sumC4 === \"2\";\n\n    let temp6 = temp2 || temp3 || temp4 || temp5;\n    let tempFinal = temp1 && temp6;\n\n    setMatrixSolution(tempFinal);\n  };\n\n  return (\n    <div className=\"task\">\n      <h1>Aufgabe 11: Effiziente Kodierung 3</h1>\n      <p>\n        Tatsächlich können wir noch kürzere Kodierungen erzeugen, mit welchen\n        wir immer Fehler der Grösse 1 korrigieren können. Angenommen wir wollen\n        eine Kodierung mit 2^4 = 16 Wörtern, mit Abstand 3. Durch Verdreifachen\n        haben wir 8 zusätzliche Bits. Mit der Rechteckmethode haben wir 2 + 2 +\n        1 = 5 zusätzliche Bits. Der sogenannte Hamming-Code benutzt nur 3\n        zusätzliche Kontrollbits.\n      </p>\n      <p>\n        Der Hamming-Code nutzt folgende elegante Lösung: Mit 3 Bits können Sie\n        2^3 = 8 verschiedene Zahlen darstellen, von 0 bis 7. Diese 3\n        Kontrollbits können in der Kodierung mit Wortlänge 7 (4 Nachrichten- + 3\n        Kontrollbits) jede Stelle in der Nachricht eindeutig abdecken, inklusive\n        den Kontrollbits selbst. Damit ist auch klar, dass es nicht mit weniger\n        Bits funktionieren kann.\n      </p>\n      <TextExercise\n        callerFunction={() => handleStateA(0)}\n        question={\n          \"Wie viele Kontrollbits benötigen Sie für einen Hamming-Code, welcher eine gesammte Nachrichtenlänge (inklusive Kontrollbits) von 32 hat.\"\n        }\n        text={\"Anzahl Kontrollbits :\"}\n        solutions={[\"5\"]}\n        textOnCorrect={\"\"}\n        textOnWrong={\"2^5 = 32\"}\n      />\n      {stateA[0] && (\n        <div>\n          <TextExercise\n            callerFunction={() => handleStateA(1)}\n            question={\"Wie viele Nachrichten sind das in der Kodierung?\"}\n            text={\"Anzahl als Zweierpotenz (2^x) :\"}\n            solutions={[\"2^27\"]}\n            textOnCorrect={\"\"}\n            textOnWrong={\"2^5 = 32 und 32 - 5 = 27\"}\n          />\n        </div>\n      )}\n      {stateA[1] && (\n        <div>\n          <MC\n            callerFunction={() => handleStateA(2)}\n            question={\n              \"Wie viele Kontrollbits benötigen Sie mindestends für einen Hamming-Code mit 2^10 Wörtern?\"\n            }\n            options={[\"3\", \"4\", \"5\", \"6\"]}\n            answerKey={[false, true, false, false]}\n            textOnCorrect={\"Richtig.\"}\n            textOnWrong={\n              \"Falsch. 2^3 = 8, was nicht reicht um 10 + 3 = 13 Bits abzudecken. 2^4 = 16 ist die nächst höhere Zweierpotenz und kann 10 + 4 = 14 Bits abdecken.\"\n            }\n          />\n        </div>\n      )}\n      {stateA[2] && (\n        <div>\n          <MC\n            callerFunction={() => handleStateA(3)}\n            question={\n              \"Für eine beliebige gesammte Wortlänge n (inklusive den Kontrollbits) müssen welche Ungleichungen in einem Hamming-Code erfüllt sein, damit man die kleinst mögliche Anzahl an Kontrollbits c hat?\"\n            }\n            options={[\n              \"2^c >= n\",\n              \"2^c < n\",\n              \"n < 2^(c-1)\",\n              \"2^c > n\",\n              \"n > 2^(c-1)\",\n            ]}\n            answerKey={[true, false, false, false, true]}\n            textOnCorrect={\"Richtig.\"}\n            textOnWrong={\"Falsch. 2^c >= n > 2^(c-1) müssen gelten.\"}\n          />\n        </div>\n      )}\n      {stateA[3] && (\n        <div>\n          <p>\n            Gegeben ist eine Tabelle, bei welcher Sie die Korrelationen setzen\n            müssen, damit Sie einen Hamming-Code haben, mit welchem Sie in der\n            Lage sind, Fehler der Grösse 1 zu korrigieren. Alles, was Sie in die\n            Tabelle einfügen, wird vom Code unten direkt übernommen. Sie können\n            zur Überprüfung Ihrer Lösung schauen, ob Sie die Nachricht mit einem\n            Fehler korrigieren können. Für diese Aufgabe gibt es verschiedene\n            Lösungen. Es kann sein, dass Ihre Lösung nicht mit derjenigen\n            übereinstimmt, welche zum Generieren den fehlerhaften Wörtern\n            genutzt wird.\n          </p>\n          <h4>Korrelations-Tabelle:</h4>\n          <div>\n            <div className=\"squareRow\">\n              {matrixButtons[0]}\n              {matrixButtons[1]}\n              {matrixButtons[2]}\n              {matrixButtons[3]}\n              {matrixButtons[4]}\n              {matrixButtons[5]}\n              {matrixButtons[6]}\n              {matrixButtons[7]}\n            </div>\n            <div className=\"squareRow\">\n              {matrixButtons[8]}\n              {matrixButtons[9]}\n              {matrixButtons[10]}\n              {matrixButtons[11]}\n              {matrixButtons[12]}\n              {matrixButtons[13]}\n              {matrixButtons[14]}\n              {matrixButtons[15]}\n            </div>\n            <div className=\"squareRow\">\n              {matrixButtons[16]}\n              {matrixButtons[17]}\n              {matrixButtons[18]}\n              {matrixButtons[19]}\n              {matrixButtons[20]}\n              {matrixButtons[21]}\n              {matrixButtons[22]}\n              {matrixButtons[23]}\n            </div>\n            <div className=\"squareRow\">\n              {matrixButtons[24]}\n              {matrixButtons[25]}\n              {matrixButtons[26]}\n              {matrixButtons[27]}\n              {matrixButtons[28]}\n              {matrixButtons[29]}\n              {matrixButtons[30]}\n              {matrixButtons[31]}\n            </div>\n          </div>\n          <div>\n            <button\n              disabled={matrixSolution === true}\n              onClick={() => checkMartix()}\n            >\n              überprüfe Tabelle\n            </button>\n          </div>\n          {matrixSolution === false && (\n            <div className=\"containerSquares\">\n              <h3 style={{ color: \"red\" }}>Falsch</h3>\n            </div>\n          )}\n          {matrixSolution && (\n            <div className=\"containerSquares\">\n              <h3 style={{ color: \"green\" }}>Korrekt</h3>\n              <p>\n                Nun haben Sie eine Methode um effiziente Kodierungen zu\n                konstruieren, welche einzelne Fehler korrigieren können. Man\n                stellt genau so eine Tabelle auf und schaut, dass jede Spalte\n                eindeutig mit den Kontrollbits korreliert, d.h. bei zwei\n                verschiedenen Spalten sind die Werte nie gleich.\n              </p>\n            </div>\n          )}\n          <p></p>\n          <h4>Kodierung nach der Tabelle:</h4>\n          <p></p>\n          <div className=\"containerSquares\">\n            <div className=\"squareRow\">{renderButtons}</div>\n          </div>\n          <p></p>\n          <h4>Wort mit einem Fehler:</h4>\n          <CorrectionBitsExercise2 />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Task11;\n","import React from \"react\";\nimport \"./App.css\";\nimport Menu from \"./components/Menu/Menu\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Task1 from \"./pages/Task1\";\nimport Task2 from \"./pages/Task2\";\nimport Task3 from \"./pages/Task3\";\nimport Task4 from \"./pages/Task4\";\nimport Task5 from \"./pages/Task5\";\nimport Task6 from \"./pages/Task6\";\nimport Task7 from \"./pages/Task7\";\nimport Task8 from \"./pages/Task8\";\nimport Task9 from \"./pages/Task9\";\nimport Task10 from \"./pages/Task10\";\nimport Task11 from \"./pages/Task11\";\n\n/*\nMain application: just rerouting between tasks.\n*/\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Menu />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/task1\" element={<Task1 />} />\n          <Route path=\"/task2\" element={<Task2 />} />\n          <Route path=\"/task3\" element={<Task3 />} />\n          <Route path=\"/task4\" element={<Task4 />} />\n          <Route path=\"/task5\" element={<Task5 />} />\n          <Route path=\"/task6\" element={<Task6 />} />\n          <Route path=\"/task7\" element={<Task7 />} />\n          <Route path=\"/task8\" element={<Task8 />} />\n          <Route path=\"/task9\" element={<Task9 />} />\n          <Route path=\"/task10\" element={<Task10 />} />\n          <Route path=\"/task11\" element={<Task11 />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}